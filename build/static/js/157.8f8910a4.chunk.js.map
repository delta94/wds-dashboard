{"version":3,"sources":["app/routes/contact/redux/index.js"],"names":["contactId","filterOptions","id","name","icon","ContactWithRedux","ContactSideBar","user","react__WEBPACK_IMPORTED_MODULE_6___default","a","createElement","className","util_IntlMessages__WEBPACK_IMPORTED_MODULE_16__","util_CustomScrollbars__WEBPACK_IMPORTED_MODULE_19__","style","height","_this","props","width","_material_ui_core_Button__WEBPACK_IMPORTED_MODULE_11__","variant","color","aria-label","onClick","onAddContact","map","option","key","concat","selectedSectionId","onFilterOptionSelect","bind","Object","D_gaxon_product_jumbo_react_3_x_x_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_assertThisInitialized__WEBPACK_IMPORTED_MODULE_4__","addFavourite","data","onContactSelect","onContactClose","onSaveContact","onDeleteContact","onDeleteSelectedContact","filterContact","userName","filterOption","handleRequestClose","onAllContactSelect","selectedContacts","contactList","length","getAllContact","getUnselectedAllContact","onToggleDrawer","this","fetchContacts","evt","updateContactUser","target","value","_this$props","addContactState","alertMessage","showMessage","drawerState","noContentFoundMessage","loader","_material_ui_core_Drawer__WEBPACK_IMPORTED_MODULE_7__","open","onClose","_material_ui_core_IconButton__WEBPACK_IMPORTED_MODULE_9__","components_AppModuleHeader_index__WEBPACK_IMPORTED_MODULE_14__","placeholder","notification","apps","onChange","searchUser","_material_ui_core_Checkbox__WEBPACK_IMPORTED_MODULE_10__","indeterminate","checked","_material_ui_core_CircularProgress__WEBPACK_IMPORTED_MODULE_17__","components_contact_ContactList__WEBPACK_IMPORTED_MODULE_13__","components_contact_AddContact__WEBPACK_IMPORTED_MODULE_15__","contact","thumb","email","phone","designation","selected","starred","frequently","_material_ui_core_Snackbar__WEBPACK_IMPORTED_MODULE_12__","anchorOrigin","vertical","horizontal","autoHideDuration","ContentProps","aria-describedby","message","Component","connect","_ref","contacts","settings","allContact","selectedContact"],"mappings":"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","file":"static/js/157.8f8910a4.chunk.js","sourcesContent":["import React, {Component} from 'react';\r\nimport Drawer from '@material-ui/core/Drawer';\r\nimport {connect} from 'react-redux'\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport Checkbox from '@material-ui/core/Checkbox';\r\nimport Button from '@material-ui/core/Button';\r\nimport Snackbar from '@material-ui/core/Snackbar';\r\nimport ContactList from 'components/contact/ContactList';\r\nimport AppModuleHeader from 'components/AppModuleHeader/index';\r\nimport AddContact from 'components/contact/AddContact';\r\nimport IntlMessages from 'util/IntlMessages';\r\nimport CircularProgress from '@material-ui/core/CircularProgress';\r\nimport {\r\n  addFavourite,\r\n  fetchContacts,\r\n  filterContact,\r\n  getAllContact,\r\n  getUnselectedAllContact,\r\n  handleRequestClose,\r\n  onAddContact,\r\n  onAllContactSelect,\r\n  onContactClose,\r\n  onContactSelect,\r\n  onDeleteContact,\r\n  onDeleteSelectedContact,\r\n  onFilterOptionSelect,\r\n  onSaveContact,\r\n  onToggleDrawer,\r\n  updateContactUser\r\n} from 'actions/Contact';\r\n\r\nimport CustomScrollbars from 'util/CustomScrollbars';\r\n\r\nlet contactId = 723812738;\r\n\r\nconst filterOptions = [\r\n  {\r\n    id: 1,\r\n    name: 'All contacts',\r\n    icon: 'zmdi-menu'\r\n  }, {\r\n    id: 2,\r\n    name: 'Frequently contacted',\r\n    icon: 'zmdi-time-restore'\r\n\r\n  }, {\r\n\r\n    id: 3,\r\n    name: 'Starred contacts',\r\n    icon: 'zmdi-star'\r\n  }\r\n];\r\n\r\nclass ContactWithRedux extends Component {\r\n\r\n  ContactSideBar = (user) => {\r\n    return <div className=\"module-side\">\r\n      <div className=\"module-side-header\">\r\n        <div className=\"module-logo\">\r\n          <i className=\"zmdi zmdi-account-box mr-4\"/>\r\n          <span><IntlMessages id=\"chat.contacts\"/></span>\r\n        </div>\r\n      </div>\r\n\r\n      <div className=\"module-side-content\">\r\n        <CustomScrollbars className=\"module-side-scroll scrollbar\"\r\n                          style={{height: this.props.width >= 1200 ? 'calc(100vh - 200px)' : 'calc(100vh - 80px)'}}>\r\n          <div className=\"module-add-task\">\r\n            <Button className=\"jr-btn btn-block\" variant=\"contained\" color=\"primary\" aria-label=\"add\"\r\n                    onClick={this.onAddContact}>\r\n              <i className=\"zmdi zmdi-account-add zmdi-hc-fw\"/>\r\n              <span>Add New Contact</span>\r\n            </Button>\r\n          </div>\r\n          <div className=\"module-side-nav\">\r\n            <ul className=\"module-nav\">\r\n              {filterOptions.map(option => <li key={option.id} className=\"nav-item\">\r\n                  <span\r\n                    className={`jr-link ${option.id === this.props.selectedSectionId ? 'active' : ''}`} onClick={\r\n                    this.onFilterOptionSelect.bind(this, option)\r\n                  }>\r\n                    <i className={`zmdi ${option.icon}`}/>\r\n                    <span>{option.name}</span>\r\n                  </span>\r\n                </li>\r\n              )}\r\n\r\n            </ul>\r\n          </div>\r\n        </CustomScrollbars>\r\n      </div>\r\n    </div>\r\n\r\n  };\r\n\r\n  addFavourite = (data) => {\r\n    this.props.addFavourite(data);\r\n  };\r\n  onContactSelect = (data) => {\r\n    this.props.onContactSelect(data);\r\n  };\r\n\r\n  onAddContact = () => {\r\n    this.props.onAddContact();\r\n  };\r\n  onContactClose = () => {\r\n    this.props.onContactClose();\r\n  };\r\n  onFilterOptionSelect = (option) => {\r\n    this.props.onFilterOptionSelect(option);\r\n  };\r\n  onSaveContact = (data) => {\r\n    this.props.onSaveContact(data);\r\n  };\r\n  onDeleteContact = (data) => {\r\n    this.props.onDeleteContact(data);\r\n  };\r\n  onDeleteSelectedContact = () => {\r\n    this.props.onDeleteSelectedContact();\r\n  };\r\n  filterContact = (userName) => {\r\n    if (userName === '') {\r\n      this.onFilterOptionSelect(this.props.filterOption);\r\n    } else {\r\n      this.props.filterContact(userName);\r\n    }\r\n  };\r\n  handleRequestClose = () => {\r\n    this.props.handleRequestClose();\r\n  };\r\n  onAllContactSelect = () => {\r\n    const selectAll = this.props.selectedContacts < this.props.contactList.length;\r\n    if (selectAll) {\r\n      this.props.getAllContact();\r\n    } else {\r\n      this.props.getUnselectedAllContact();\r\n    }\r\n  };\r\n  onToggleDrawer = () => {\r\n    this.props.onToggleDrawer();\r\n  };\r\n\r\n  componentWillMount() {\r\n    this.props.fetchContacts();\r\n  }\r\n\r\n\r\n  updateContactUser(evt) {\r\n    this.props.updateContactUser(evt.target.value);\r\n    this.props.filterContact(evt.target.value)\r\n  }\r\n\r\n  render() {\r\n    const {user, contactList, addContactState, selectedContacts, alertMessage, showMessage, drawerState, noContentFoundMessage, loader} = this.props;\r\n    return (\r\n      <div className=\"app-wrapper\">\r\n        <div className=\"app-module animated slideInUpTiny animation-duration-3\">\r\n\r\n          <div className=\"d-block d-xl-none\">\r\n            <Drawer\r\n              open={drawerState}\r\n              onClose={this.onToggleDrawer.bind(this)}>\r\n              {this.ContactSideBar(user)}\r\n            </Drawer>\r\n          </div>\r\n          <div className=\"app-module-sidenav d-none d-xl-flex\">\r\n            {this.ContactSideBar(user)}\r\n          </div>\r\n\r\n          <div className=\"module-box\">\r\n            <div className=\"module-box-header\">\r\n              <IconButton className=\"drawer-btn d-block d-xl-none\" aria-label=\"Menu\"\r\n                          onClick={this.onToggleDrawer.bind(this)}>\r\n                <i className=\"zmdi zmdi-menu\"/>\r\n              </IconButton>\r\n              <AppModuleHeader placeholder=\"Search contact\" notification={false} apps={false}\r\n                               user={this.props.user}\r\n                               onChange={this.updateContactUser.bind(this)}\r\n                               value={this.props.searchUser}/>\r\n            </div>\r\n            <div className=\"module-box-content\">\r\n\r\n              <div className=\"module-box-topbar\">\r\n                <Checkbox color=\"primary\"\r\n                          indeterminate={selectedContacts > 0 && selectedContacts < contactList.length}\r\n                          checked={selectedContacts > 0}\r\n                          onChange={this.onAllContactSelect.bind(this)}\r\n                          value=\"SelectMail\"/>\r\n\r\n\r\n                {selectedContacts > 0 &&\r\n                <IconButton className=\"icon-btn\"\r\n                            onClick={this.onDeleteSelectedContact.bind(this)}>\r\n                  <i className=\"zmdi zmdi-delete\"/>\r\n                </IconButton>}\r\n\r\n              </div>\r\n              <CustomScrollbars className=\"module-list-scroll scrollbar\"\r\n                                style={{height: this.props.width >= 1200 ? 'calc(100vh - 261px)' : 'calc(100vh - 240px)'}}>\r\n                {loader ?\r\n                  <div className=\"loader-view-block h-100\">\r\n                    <div className=\"loader-view\">\r\n                      <CircularProgress/>\r\n                    </div>\r\n                  </div>\r\n                  :\r\n                  contactList.length === 0 ?\r\n                    <div className=\"h-100 d-flex align-items-center justify-content-center\">\r\n                      {noContentFoundMessage}\r\n                    </div>\r\n                    : <ContactList contactList={contactList}\r\n                                   addFavourite={this.addFavourite.bind(this)}\r\n                                   onContactSelect={this.onContactSelect.bind(this)}\r\n                                   onDeleteContact={this.onDeleteContact.bind(this)}\r\n                                   onSaveContact={this.onSaveContact.bind(this)}/>\r\n                }\r\n              </CustomScrollbars>\r\n\r\n            </div>\r\n          </div>\r\n        </div>\r\n        <AddContact open={addContactState} contact={{\r\n          'id': contactId++,\r\n          'name': '',\r\n          'thumb': '',\r\n          'email': '',\r\n          'phone': '',\r\n          'designation': '',\r\n          'selected': false,\r\n          'starred': false,\r\n          'frequently': false,\r\n        }} onSaveContact={this.onSaveContact}\r\n                    onContactClose={this.onContactClose} onDeleteContact={this.onDeleteContact}/>\r\n        <Snackbar\r\n          anchorOrigin={{vertical: 'top', horizontal: 'center'}}\r\n          open={showMessage}\r\n          autoHideDuration={3000}\r\n          onClose={this.handleRequestClose}\r\n          ContentProps={{\r\n            'aria-describedby': 'message-id',\r\n          }}\r\n          message={<span id=\"message-id\">{alertMessage}</span>}\r\n        />\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\n\r\nconst mapStateToProps = ({contacts, settings}) => {\r\n  const {width} = settings;\r\n  const {\r\n    loader,\r\n    alertMessage,\r\n    showMessage,\r\n    noContentFoundMessage,\r\n    selectedSectionId,\r\n    drawerState,\r\n    user,\r\n    searchUser,\r\n    filterOption,\r\n    allContact,\r\n    contactList,\r\n    selectedContact,\r\n    selectedContacts,\r\n    addContactState\r\n  } = contacts;\r\n  return {\r\n    width,\r\n    loader,\r\n    alertMessage,\r\n    showMessage,\r\n    noContentFoundMessage,\r\n    selectedSectionId,\r\n    drawerState,\r\n    user,\r\n    searchUser,\r\n    filterOption,\r\n    allContact,\r\n    contactList,\r\n    selectedContact,\r\n    selectedContacts,\r\n    addContactState\r\n  }\r\n};\r\nexport default connect(mapStateToProps, {\r\n  fetchContacts,\r\n  addFavourite,\r\n  onContactSelect,\r\n  onAddContact,\r\n  onContactClose,\r\n  onFilterOptionSelect,\r\n  onSaveContact,\r\n  onDeleteContact,\r\n  onDeleteSelectedContact,\r\n  filterContact,\r\n  getAllContact,\r\n  getUnselectedAllContact,\r\n  onAllContactSelect,\r\n  updateContactUser,\r\n  onToggleDrawer,\r\n  handleRequestClose\r\n})(ContactWithRedux);"],"sourceRoot":""}