{"version":3,"sources":["app/routes/table/routes/data/Components/DataTable.js","app/routes/table/routes/data/Components/CustomTable.js","app/routes/table/routes/data/Components/CustomizedTable.js","app/routes/table/routes/data/index.js","components/CardBox/index.js"],"names":["counter","createData","name","calories","fat","carbs","protein","id","columnData","align","disablePadding","label","DataTableHead","createSortHandler","property","event","_this","props","onRequestSort","_this2","this","_this$props","onSelectAllClick","order","orderBy","numSelected","rowCount","react_default","a","createElement","TableHead","TableRow","TableCell","padding","Checkbox","color","indeterminate","checked","onChange","map","column","key","numeric","Tooltip","title","placement","enterDelay","TableSortLabel","active","direction","onClick","React","Component","DataTableToolbar","Toolbar","className","Typography","variant","IconButton","aria-label","Delete_default","DataTable","context","_this3","Object","classCallCheck","possibleConstructorReturn","getPrototypeOf","call","handleRequestSort","state","data","sort","b","setState","handleSelectAllClick","selected","n","handleKeyDown","keycode","handleClick","selectedIndex","indexOf","newSelected","concat","slice","length","handleChangePage","page","handleChangeRowsPerPage","rowsPerPage","target","value","isSelected","_this4","_this$state","Paper","DataTable_DataTableToolbar","Table","DataTable_DataTableHead","TableBody","hover","onKeyDown","role","aria-checked","tabIndex","TableFooter","TablePagination","count","onChangePage","onChangeRowsPerPage","TablePaginationActions","handleFirstPageButtonClick","handleBackButtonClick","handleNextButtonClick","handleLastPageButtonClick","Math","max","ceil","classes","theme","root","disabled","TablePaginationActionsWrapped","withStyles","flexShrink","palette","text","secondary","marginLeft","spacing","unit","withTheme","CustomTable","emptyRows","min","tableWrapper","table","style","height","colSpan","ActionsComponent","width","marginTop","minWidth","overflowX","CustomTableCell","head","backgroundColor","common","black","white","body","fontSize","row","&:nth-of-type(odd)","background","default","DataTables","CardBox","styleName","cardStyle","heading","IntlMessages","headerOutside","Components_DataTable","Components_CustomTable","Components_CustomizedTable","react__WEBPACK_IMPORTED_MODULE_0__","__webpack_require__","react__WEBPACK_IMPORTED_MODULE_0___default","_ref","children","childrenStyle","headingStyle","defaultProps"],"mappings":"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","file":"static/js/154.e84a70ee.chunk.js","sourcesContent":["import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport keycode from 'keycode';\r\nimport Table from '@material-ui/core/Table';\r\nimport TableBody from '@material-ui/core/TableBody';\r\nimport TableCell from '@material-ui/core/TableCell';\r\nimport TableFooter from '@material-ui/core/TableFooter';\r\nimport TableHead from '@material-ui/core/TableHead';\r\nimport TablePagination from '@material-ui/core/TablePagination';\r\nimport TableRow from '@material-ui/core/TableRow';\r\nimport TableSortLabel from '@material-ui/core/TableSortLabel';\r\nimport Toolbar from '@material-ui/core/Toolbar';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport Paper from '@material-ui/core/Paper';\r\nimport Checkbox from '@material-ui/core/Checkbox';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport Tooltip from '@material-ui/core/Tooltip';\r\nimport DeleteIcon from '@material-ui/icons/Delete';\r\n\r\nlet counter = 0;\r\n\r\nfunction createData(name, calories, fat, carbs, protein) {\r\n  counter += 1;\r\n  return {id: counter, name, calories, fat, carbs, protein};\r\n}\r\n\r\nconst columnData = [\r\n  {id: 'name', align: false, disablePadding: true, label: 'Dessert (100g serving)'},\r\n  {id: 'calories', align: true, disablePadding: false, label: 'Calories'},\r\n  {id: 'fat', align: true, disablePadding: false, label: 'Fat (g)'},\r\n  {id: 'carbs', align: true, disablePadding: false, label: 'Carbs (g)'},\r\n  {id: 'protein', align: true, disablePadding: false, label: 'Protein (g)'},\r\n];\r\n\r\nclass DataTableHead extends React.Component {\r\n  static propTypes = {\r\n    numSelected: PropTypes.number.isRequired,\r\n    onRequestSort: PropTypes.func.isRequired,\r\n    onSelectAllClick: PropTypes.func.isRequired,\r\n    order: PropTypes.string.isRequired,\r\n    orderBy: PropTypes.string.isRequired,\r\n    rowCount: PropTypes.number.isRequired,\r\n  };\r\n\r\n  createSortHandler = property => event => {\r\n    this.props.onRequestSort(event, property);\r\n  };\r\n\r\n  render() {\r\n    const {onSelectAllClick, order, orderBy, numSelected, rowCount} = this.props;\r\n\r\n    return (\r\n      <TableHead>\r\n        <TableRow>\r\n          <TableCell padding=\"checkbox\">\r\n            <Checkbox color=\"primary\"\r\n                      indeterminate={numSelected > 0 && numSelected < rowCount}\r\n                      checked={numSelected === rowCount}\r\n                      onChange={onSelectAllClick}\r\n            />\r\n          </TableCell>\r\n          {columnData.map(column => {\r\n            return (\r\n              <TableCell\r\n                key={column.id}\r\n                align={column.numeric}\r\n                padding={column.disablePadding ? 'none' : 'default'}\r\n              >\r\n                <Tooltip\r\n                  title=\"Sort\"\r\n                  placement={column.numeric ? 'bottom-end' : 'bottom-start'}\r\n                  enterDelay={300}\r\n                >\r\n                  <TableSortLabel\r\n                    active={orderBy === column.id}\r\n                    direction={order}\r\n                    onClick={this.createSortHandler(column.id)}\r\n                  >\r\n                    {column.label}\r\n                  </TableSortLabel>\r\n                </Tooltip>\r\n              </TableCell>\r\n            );\r\n          }, this)}\r\n        </TableRow>\r\n      </TableHead>\r\n    );\r\n  }\r\n}\r\n\r\n\r\nlet DataTableToolbar = props => {\r\n  const {numSelected} = props;\r\n\r\n  return (\r\n    <Toolbar className=\"table-header\">\r\n      <div className=\"title\">\r\n        {numSelected > 0 ? (\r\n          <Typography variant=\"subheading\">{numSelected} selected</Typography>\r\n        ) : (\r\n          <Typography variant=\"title\">Nutrition</Typography>\r\n        )}\r\n      </div>\r\n      <div className=\"spacer\"/>\r\n      <div className=\"actions\">\r\n        {numSelected > 0 && (\r\n          <Tooltip title=\"Delete\">\r\n            <IconButton aria-label=\"Delete\">\r\n              <DeleteIcon/>\r\n            </IconButton>\r\n          </Tooltip>\r\n        )}\r\n      </div>\r\n    </Toolbar>\r\n  );\r\n};\r\n\r\nDataTableToolbar.propTypes = {\r\n  numSelected: PropTypes.number.isRequired,\r\n};\r\n\r\n\r\nclass DataTable extends React.Component {\r\n  handleRequestSort = (event, property) => {\r\n    const orderBy = property;\r\n    let order = 'desc';\r\n\r\n    if (this.state.orderBy === property && this.state.order === 'desc') {\r\n      order = 'asc';\r\n    }\r\n\r\n    const data =\r\n      order === 'desc'\r\n        ? this.state.data.sort((a, b) => (b[orderBy] < a[orderBy] ? -1 : 1))\r\n        : this.state.data.sort((a, b) => (a[orderBy] < b[orderBy] ? -1 : 1));\r\n\r\n    this.setState({data, order, orderBy});\r\n  };\r\n  handleSelectAllClick = (event, checked) => {\r\n    if (checked) {\r\n      this.setState({selected: this.state.data.map(n => n.id)});\r\n      return;\r\n    }\r\n    this.setState({selected: []});\r\n  };\r\n  handleKeyDown = (event, id) => {\r\n    if (keycode(event) === 'space') {\r\n      this.handleClick(event, id);\r\n    }\r\n  };\r\n  handleClick = (event, id) => {\r\n    const {selected} = this.state;\r\n    const selectedIndex = selected.indexOf(id);\r\n    let newSelected = [];\r\n\r\n    if (selectedIndex === -1) {\r\n      newSelected = newSelected.concat(selected, id);\r\n    } else if (selectedIndex === 0) {\r\n      newSelected = newSelected.concat(selected.slice(1));\r\n    } else if (selectedIndex === selected.length - 1) {\r\n      newSelected = newSelected.concat(selected.slice(0, -1));\r\n    } else if (selectedIndex > 0) {\r\n      newSelected = newSelected.concat(\r\n        selected.slice(0, selectedIndex),\r\n        selected.slice(selectedIndex + 1),\r\n      );\r\n    }\r\n\r\n    this.setState({selected: newSelected});\r\n  };\r\n  handleChangePage = (event, page) => {\r\n    this.setState({page});\r\n  };\r\n  handleChangeRowsPerPage = event => {\r\n    this.setState({rowsPerPage: event.target.value});\r\n  };\r\n  isSelected = id => this.state.selected.indexOf(id) !== -1;\r\n\r\n  constructor(props, context) {\r\n    super(props, context);\r\n\r\n    this.state = {\r\n      order: 'asc',\r\n      orderBy: 'calories',\r\n      selected: [],\r\n      data: [\r\n        createData('Cupcake', 305, 3.7, 67, 4.3),\r\n        createData('Donut', 452, 25.0, 51, 4.9),\r\n        createData('Eclair', 262, 16.0, 24, 6.0),\r\n        createData('Frozen yoghurt', 159, 6.0, 24, 4.0),\r\n        createData('Gingerbread', 356, 16.0, 49, 3.9),\r\n        createData('Honeycomb', 408, 3.2, 87, 6.5),\r\n        createData('Ice cream sandwich', 237, 9.0, 37, 4.3),\r\n        createData('Jelly Bean', 375, 0.0, 94, 0.0),\r\n        createData('KitKat', 518, 26.0, 65, 7.0),\r\n        createData('Lollipop', 392, 0.2, 98, 0.0),\r\n        createData('Marshmallow', 318, 0, 81, 2.0),\r\n        createData('Nougat', 360, 19.0, 9, 37.0),\r\n        createData('Oreo', 437, 18.0, 63, 4.0),\r\n      ].sort((a, b) => (a.calories < b.calories ? -1 : 1)),\r\n      page: 0,\r\n      rowsPerPage: 5,\r\n    };\r\n  }\r\n\r\n  render() {\r\n    const {data, order, orderBy, selected, rowsPerPage, page} = this.state;\r\n\r\n    return (\r\n      <Paper>\r\n        <DataTableToolbar numSelected={selected.length}/>\r\n        <div className=\"flex-auto\">\r\n          <div className=\"table-responsive-material\">\r\n            <Table className=\"\">\r\n              <DataTableHead\r\n                numSelected={selected.length}\r\n                order={order}\r\n                orderBy={orderBy}\r\n                onSelectAllClick={this.handleSelectAllClick}\r\n                onRequestSort={this.handleRequestSort}\r\n                rowCount={data.length}\r\n              />\r\n              <TableBody>\r\n                {data.slice(page * rowsPerPage, page * rowsPerPage + rowsPerPage).map(n => {\r\n                  const isSelected = this.isSelected(n.id);\r\n                  return (\r\n                    <TableRow\r\n                      hover\r\n                      onClick={event => this.handleClick(event, n.id)}\r\n                      onKeyDown={event => this.handleKeyDown(event, n.id)}\r\n                      role=\"checkbox\"\r\n                      aria-checked={isSelected}\r\n                      tabIndex={-1}\r\n                      key={n.id}\r\n                      selected={isSelected}\r\n                    >\r\n                      <TableCell padding=\"checkbox\">\r\n                        <Checkbox color=\"primary\" checked={isSelected}/>\r\n                      </TableCell>\r\n                      <TableCell padding=\"none\">{n.name}</TableCell>\r\n                      <TableCell align=\"right\">{n.calories}</TableCell>\r\n                      <TableCell align=\"right\">{n.fat}</TableCell>\r\n                      <TableCell align=\"right\">{n.carbs}</TableCell>\r\n                      <TableCell align=\"right\">{n.protein}</TableCell>\r\n                    </TableRow>\r\n                  );\r\n                })}\r\n              </TableBody>\r\n              <TableFooter>\r\n                <TableRow>\r\n                  <TablePagination\r\n                    count={data.length}\r\n                    rowsPerPage={rowsPerPage}\r\n                    page={page}\r\n                    onChangePage={this.handleChangePage}\r\n                    onChangeRowsPerPage={this.handleChangeRowsPerPage}\r\n                  />\r\n                </TableRow>\r\n              </TableFooter>\r\n            </Table>\r\n          </div>\r\n        </div>\r\n      </Paper>\r\n    );\r\n  }\r\n}\r\n\r\nexport default DataTable;","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport {withStyles} from '@material-ui/core/styles';\r\nimport Table from '@material-ui/core/Table';\r\nimport TableBody from '@material-ui/core/TableBody';\r\nimport TableCell from '@material-ui/core/TableCell';\r\nimport TableFooter from '@material-ui/core/TableFooter';\r\nimport TablePagination from '@material-ui/core/TablePagination';\r\nimport TableRow from '@material-ui/core/TableRow';\r\nimport Paper from '@material-ui/core/Paper';\r\nimport IconButton from '@material-ui/core/IconButton';\r\n\r\n\r\nconst actionsStyles = theme => ({\r\n  root: {\r\n    flexShrink: 0,\r\n    color: theme.palette.text.secondary,\r\n    marginLeft: theme.spacing.unit * 2.5,\r\n  },\r\n});\r\n\r\nclass TablePaginationActions extends React.Component {\r\n  handleFirstPageButtonClick = event => {\r\n    this.props.onChangePage(event, 0);\r\n  };\r\n\r\n  handleBackButtonClick = event => {\r\n    this.props.onChangePage(event, this.props.page - 1);\r\n  };\r\n\r\n  handleNextButtonClick = event => {\r\n    this.props.onChangePage(event, this.props.page + 1);\r\n  };\r\n\r\n  handleLastPageButtonClick = event => {\r\n    this.props.onChangePage(\r\n      event,\r\n      Math.max(0, Math.ceil(this.props.count / this.props.rowsPerPage) - 1),\r\n    );\r\n  };\r\n\r\n  render() {\r\n    const {classes, count, page, rowsPerPage, theme} = this.props;\r\n\r\n    return (\r\n      <div className={classes.root}>\r\n        <IconButton\r\n          onClick={this.handleFirstPageButtonClick}\r\n          disabled={page === 0}\r\n          aria-label=\"First Page\"\r\n        >\r\n          {theme.direction === 'rtl' ?\r\n            <i className=\"zmdi zmdi-skip-next\"/> : <i className=\"zmdi zmdi-skip-previous\"/>}\r\n        </IconButton>\r\n        <IconButton\r\n          onClick={this.handleBackButtonClick}\r\n          disabled={page === 0}\r\n          aria-label=\"Previous Page\"\r\n        >\r\n          {theme.direction === 'rtl' ?\r\n            <i className=\"zmdi zmdi-chevron-right\"/> : <i className=\"zmdi zmdi-chevron-left\"/>}\r\n        </IconButton>\r\n        <IconButton\r\n          onClick={this.handleNextButtonClick}\r\n          disabled={page >= Math.ceil(count / rowsPerPage) - 1}\r\n          aria-label=\"Next Page\"\r\n        >\r\n          {theme.direction === 'rtl' ?\r\n            <i className=\"zmdi zmdi-chevron-left\"/> : <i className=\"zmdi zmdi-chevron-right\"/>}\r\n        </IconButton>\r\n        <IconButton\r\n          onClick={this.handleLastPageButtonClick}\r\n          disabled={page >= Math.ceil(count / rowsPerPage) - 1}\r\n          aria-label=\"Last Page\"\r\n        >\r\n          {theme.direction === 'rtl' ?\r\n            <i className=\"zmdi zmdi-skip-previous\"/> : <i className=\"zmdi zmdi-skip-next\"/>}\r\n        </IconButton>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nTablePaginationActions.propTypes = {\r\n  classes: PropTypes.object.isRequired,\r\n  count: PropTypes.number.isRequired,\r\n  onChangePage: PropTypes.func.isRequired,\r\n  page: PropTypes.number.isRequired,\r\n  rowsPerPage: PropTypes.number.isRequired,\r\n  theme: PropTypes.object.isRequired,\r\n};\r\n\r\nconst TablePaginationActionsWrapped = withStyles(actionsStyles, {withTheme: true})(\r\n  TablePaginationActions,\r\n);\r\n\r\nlet counter = 0;\r\n\r\nfunction createData(name, calories, fat) {\r\n  counter += 1;\r\n  return {id: counter, name, calories, fat};\r\n}\r\n\r\nconst styles = theme => ({\r\n  root: {\r\n    width: '100%',\r\n    marginTop: theme.spacing.unit * 3,\r\n  },\r\n  table: {\r\n    minWidth: 500,\r\n  },\r\n  tableWrapper: {\r\n    overflowX: 'auto',\r\n  },\r\n});\r\n\r\nclass CustomTable extends React.Component {\r\n  handleChangePage = (event, page) => {\r\n    this.setState({page});\r\n  };\r\n  handleChangeRowsPerPage = event => {\r\n    this.setState({rowsPerPage: event.target.value});\r\n  };\r\n\r\n  constructor(props, context) {\r\n    super(props, context);\r\n\r\n    this.state = {\r\n      data: [\r\n        createData('Cupcake', 305, 3.7),\r\n        createData('Donut', 452, 25.0),\r\n        createData('Eclair', 262, 16.0),\r\n        createData('Frozen yoghurt', 159, 6.0),\r\n        createData('Gingerbread', 356, 16.0),\r\n        createData('Honeycomb', 408, 3.2),\r\n        createData('Ice cream sandwich', 237, 9.0),\r\n        createData('Jelly Bean', 375, 0.0),\r\n        createData('KitKat', 518, 26.0),\r\n        createData('Lollipop', 392, 0.2),\r\n        createData('Marshmallow', 318, 0),\r\n        createData('Nougat', 360, 19.0),\r\n        createData('Oreo', 437, 18.0),\r\n      ].sort((a, b) => (a.calories < b.calories ? -1 : 1)),\r\n      page: 0,\r\n      rowsPerPage: 5,\r\n    };\r\n  }\r\n\r\n  render() {\r\n    const {classes} = this.props;\r\n    const {data, rowsPerPage, page} = this.state;\r\n    const emptyRows = rowsPerPage - Math.min(rowsPerPage, data.length - page * rowsPerPage);\r\n\r\n    return (\r\n      <Paper className={classes.root}>\r\n        <div className={classes.tableWrapper}>\r\n          <Table className={classes.table}>\r\n            <TableBody>\r\n              {data.slice(page * rowsPerPage, page * rowsPerPage + rowsPerPage).map(n => {\r\n                return (\r\n                  <TableRow key={n.id}>\r\n                    <TableCell>{n.name}</TableCell>\r\n                    <TableCell align=\"right\">{n.calories}</TableCell>\r\n                    <TableCell align=\"right\">{n.fat}</TableCell>\r\n                  </TableRow>\r\n                );\r\n              })}\r\n              {emptyRows > 0 && (\r\n                <TableRow style={{height: 48 * emptyRows}}>\r\n                  <TableCell colSpan={6}/>\r\n                </TableRow>\r\n              )}\r\n            </TableBody>\r\n            <TableFooter>\r\n              <TableRow>\r\n                <TablePagination\r\n                  colSpan={3}\r\n                  count={data.length}\r\n                  rowsPerPage={rowsPerPage}\r\n                  page={page}\r\n                  onChangePage={this.handleChangePage}\r\n                  onChangeRowsPerPage={this.handleChangeRowsPerPage}\r\n                  ActionsComponent={TablePaginationActionsWrapped}\r\n                />\r\n              </TableRow>\r\n            </TableFooter>\r\n          </Table>\r\n        </div>\r\n      </Paper>\r\n    );\r\n  }\r\n}\r\n\r\nCustomTable.propTypes = {\r\n  classes: PropTypes.object.isRequired,\r\n};\r\n\r\nexport default withStyles(styles)(CustomTable);","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport {withStyles} from '@material-ui/core/styles';\r\nimport Table from '@material-ui/core/Table';\r\nimport TableBody from '@material-ui/core/TableBody';\r\nimport TableCell from '@material-ui/core/TableCell';\r\nimport TableHead from '@material-ui/core/TableHead';\r\nimport TableRow from '@material-ui/core/TableRow';\r\nimport Paper from '@material-ui/core/Paper';\r\n\r\nconst CustomTableCell = withStyles(theme => ({\r\n  head: {\r\n    backgroundColor: theme.palette.common.black,\r\n    color: theme.palette.common.white,\r\n  },\r\n  body: {\r\n    fontSize: 14,\r\n  },\r\n}))(TableCell);\r\n\r\nconst styles = theme => ({\r\n  root: {\r\n    width: '100%',\r\n    marginTop: theme.spacing.unit * 3,\r\n    overflowX: 'auto',\r\n  },\r\n  table: {\r\n    minWidth: 700,\r\n  },\r\n  row: {\r\n    '&:nth-of-type(odd)': {\r\n      backgroundColor: theme.palette.background.default,\r\n    },\r\n  },\r\n});\r\n\r\nlet id = 0;\r\n\r\nfunction createData(name, calories, fat, carbs, protein) {\r\n  id += 1;\r\n  return {id, name, calories, fat, carbs, protein};\r\n}\r\n\r\nconst data = [\r\n  createData('Frozen yoghurt', 159, 6.0, 24, 4.0),\r\n  createData('Ice cream sandwich', 237, 9.0, 37, 4.3),\r\n  createData('Eclair', 262, 16.0, 24, 6.0),\r\n  createData('Cupcake', 305, 3.7, 67, 4.3),\r\n  createData('Gingerbread', 356, 16.0, 49, 3.9),\r\n];\r\n\r\nfunction CustomizedTable(props) {\r\n  const {classes} = props;\r\n\r\n  return (\r\n    <Paper className={classes.root}>\r\n      <Table className={classes.table}>\r\n        <TableHead>\r\n          <TableRow>\r\n            <CustomTableCell>Dessert (100g serving)</CustomTableCell>\r\n            <CustomTableCell align=\"right\">Calories</CustomTableCell>\r\n            <CustomTableCell align=\"right\">Fat (g)</CustomTableCell>\r\n            <CustomTableCell align=\"right\">Carbs (g)</CustomTableCell>\r\n            <CustomTableCell align=\"right\">Protein (g)</CustomTableCell>\r\n          </TableRow>\r\n        </TableHead>\r\n        <TableBody>\r\n          {data.map(n => {\r\n            return (\r\n              <TableRow className={classes.row} key={n.id}>\r\n                <CustomTableCell>{n.name}</CustomTableCell>\r\n                <CustomTableCell align=\"right\">{n.calories}</CustomTableCell>\r\n                <CustomTableCell align=\"right\">{n.fat}</CustomTableCell>\r\n                <CustomTableCell align=\"right\">{n.carbs}</CustomTableCell>\r\n                <CustomTableCell align=\"right\">{n.protein}</CustomTableCell>\r\n              </TableRow>\r\n            );\r\n          })}\r\n        </TableBody>\r\n      </Table>\r\n    </Paper>\r\n  );\r\n}\r\n\r\nCustomizedTable.propTypes = {\r\n  classes: PropTypes.object.isRequired,\r\n};\r\n\r\nexport default withStyles(styles)(CustomizedTable);","import React from 'react';\r\nimport CardBox from 'components/CardBox/index';\r\nimport IntlMessages from 'util/IntlMessages';\r\nimport DataTable from './Components/DataTable';\r\nimport CustomTable from './Components/CustomTable';\r\nimport CustomizedTable from './Components/CustomizedTable';\r\n\r\nconst DataTables = () => {\r\n  return (\r\n    <div className=\"row animated slideInUpTiny animation-duration-3\">\r\n      <CardBox styleName=\"col-12\" cardStyle=\" p-0\" heading={<IntlMessages id=\"table.sortingTable\"/>}\r\n               headerOutside>\r\n        <DataTable/>\r\n      </CardBox>\r\n      <CardBox styleName=\"col-12\" cardStyle=\" p-0\" heading={<IntlMessages id=\"table.customTable\"/>}\r\n               headerOutside>\r\n        <CustomTable/>\r\n      </CardBox>\r\n      <CardBox styleName=\"col-12\" cardStyle=\"mb-0 p-0\" heading={<IntlMessages id=\"table.customizedTable\"/>}\r\n               headerOutside>\r\n        <CustomizedTable/>\r\n      </CardBox>\r\n    </div>\r\n\r\n  );\r\n};\r\n\r\nexport default DataTables;\r\n\r\n","import React from 'react';\r\n\r\nconst CardBox = ({heading, children, styleName, cardStyle, childrenStyle, headerOutside, headingStyle}) => {\r\n\r\n  return (\r\n    <div className={`${styleName}`}>\r\n      {headerOutside &&\r\n      <div className=\"jr-entry-header\">\r\n        <h3 className=\"entry-heading\">{heading}</h3>\r\n        {children.length > 1 && <div className=\"entry-description\">{children[0]}</div>}\r\n      </div>\r\n      }\r\n\r\n      <div className={`jr-card ${cardStyle}`}>\r\n        {!headerOutside &&\r\n        (heading &&\r\n          <div className={`jr-card-header ${headingStyle}`}>\r\n            <h3 className=\"card-heading\">{heading}</h3>\r\n            {children.length > 1 && <div className=\"sub-heading\">{children[0]}</div>}\r\n          </div>\r\n        )}\r\n        <div className={`jr-card-body ${childrenStyle}`}>\r\n          {children.length > 1 ? children[1] : children}\r\n        </div>\r\n      </div>\r\n    </div>\r\n  )\r\n};\r\n\r\nexport default CardBox;\r\n\r\nCardBox.defaultProps = {\r\n  cardStyle: '',\r\n  headingStyle: '',\r\n  childrenStyle: '',\r\n  styleName: 'col-lg-6 col-sm-12'\r\n};"],"sourceRoot":""}