{"version":3,"sources":["app/routes/mail/basic/index.js"],"names":["Mail","_this","Object","D_gaxon_product_jumbo_react_3_x_x_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_classCallCheck__WEBPACK_IMPORTED_MODULE_1__","this","D_gaxon_product_jumbo_react_3_x_x_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_possibleConstructorReturn__WEBPACK_IMPORTED_MODULE_3__","D_gaxon_product_jumbo_react_3_x_x_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_getPrototypeOf__WEBPACK_IMPORTED_MODULE_4__","call","MailSideBar","react__WEBPACK_IMPORTED_MODULE_7___default","a","createElement","className","util_IntlMessages__WEBPACK_IMPORTED_MODULE_26__","id","util_CustomScrollbars__WEBPACK_IMPORTED_MODULE_27__","style","height","props","width","_material_ui_core_Button__WEBPACK_IMPORTED_MODULE_8__","variant","color","onClick","setState","composeMail","getNavFolders","getNavFilters","getNavLabels","onDeleteMail","mails","state","allMail","map","mail","selected","folder","selectedFolder","D_gaxon_product_jumbo_react_3_x_x_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_objectSpread__WEBPACK_IMPORTED_MODULE_0__","alertMessage","showMessage","selectedMails","folderMails","filter","folders","index","key","filterMails","noContentFoundMessage","currentMail","loader","setTimeout","concat","icon","title","onFolderMenuItemSelect","folderId","handleRequestClose","onLabelMenuItemSelect","label","labels","includes","removeLabel","addLabel","folderMenuState","labelMenuState","optionMenuState","filters","starred","important","onFolderSelect","event","anchorEl","currentTarget","onLabelSelect","onOptionMenuSelect","onOptionMenuItemSelect","option","getAllMail","getUnselectedAllMail","getReadMail","getUnreadMail","getStarredMail","getUnStarredMail","getImportantMail","getUnimportantMail","length","optionName","selectedMail","read","searchMail","searchText","deleted","searchMails","subject","toLowerCase","indexOf","displayMail","components_mail_MailList__WEBPACK_IMPORTED_MODULE_22__","onStartSelect","bind","D_gaxon_product_jumbo_react_3_x_x_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_assertThisInitialized__WEBPACK_IMPORTED_MODULE_5__","onMailSelect","onMailChecked","components_mail_MailDetail_index__WEBPACK_IMPORTED_MODULE_25__","onImportantSelect","getMailActions","_material_ui_core_IconButton__WEBPACK_IMPORTED_MODULE_13__","drawerState","user","name","email","avatar","require","_this2","data","splice","_this3","evt","target","value","_this4","_this$state","_material_ui_core_Drawer__WEBPACK_IMPORTED_MODULE_9__","open","onClose","onToggleDrawer","aria-label","components_AppModuleHeader_index__WEBPACK_IMPORTED_MODULE_24__","placeholder","onChange","updateSearch","_material_ui_core_Checkbox__WEBPACK_IMPORTED_MODULE_10__","indeterminate","checked","onAllMailSelect","_material_ui_core_Menu__WEBPACK_IMPORTED_MODULE_14__","MenuListProps","options","_material_ui_core_MenuItem__WEBPACK_IMPORTED_MODULE_15__","_material_ui_core_CircularProgress__WEBPACK_IMPORTED_MODULE_16__","components_mail_Compose_index__WEBPACK_IMPORTED_MODULE_23__","onMailSend","_material_ui_core_Snackbar__WEBPACK_IMPORTED_MODULE_11__","anchorOrigin","vertical","horizontal","autoHideDuration","ContentProps","aria-describedby","message","Component","connect","_ref","settings"],"mappings":"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","file":"static/js/160.49906036.chunk.js","sourcesContent":["import React, {Component} from 'react';\r\nimport Button from '@material-ui/core/Button';\r\nimport Drawer from '@material-ui/core/Drawer';\r\nimport Checkbox from '@material-ui/core/Checkbox';\r\nimport Snackbar from '@material-ui/core/Snackbar';\r\nimport {connect} from 'react-redux';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport Menu from '@material-ui/core/Menu';\r\nimport MenuItem from '@material-ui/core/MenuItem';\r\nimport CircularProgress from '@material-ui/core/CircularProgress';\r\nimport mails from '../data/mails';\r\nimport folders from '../data/folders';\r\nimport filters from '../data/filters';\r\nimport labels from '../data/labels';\r\nimport options from '../data/options';\r\nimport MailList from 'components/mail/MailList';\r\n\r\nimport ComposeMail from 'components/mail/Compose/index';\r\nimport AppModuleHeader from 'components/AppModuleHeader/index';\r\nimport MailDetail from 'components/mail/MailDetail/index';\r\nimport IntlMessages from 'util/IntlMessages';\r\nimport CustomScrollbars from 'util/CustomScrollbars';\r\n\r\n\r\nclass Mail extends Component {\r\n\r\n  MailSideBar = () => {\r\n    return <div className=\"module-side\">\r\n\r\n      <div className=\"module-side-header\">\r\n        <div className=\"module-logo\">\r\n          <i className=\"zmdi zmdi-email mr-3\"/>\r\n          <span><IntlMessages id=\"mail.mailbox\"/></span>\r\n        </div>\r\n\r\n      </div>\r\n\r\n      <div className=\"module-side-content\">\r\n        <CustomScrollbars className=\"module-side-scroll scrollbar\"\r\n                          style={{height: this.props.width >= 1200 ? 'calc(100vh - 200px)' : 'calc(100vh - 80px)'}}>\r\n          <div className=\"module-add-task\">\r\n            <Button variant=\"contained\" color=\"primary\" className=\"btn-block\"\r\n                    onClick={() => {\r\n                      this.setState({composeMail: true})\r\n                    }}>\r\n              <i className=\"zmdi zmdi-edit zmdi-hc-fw\"/>\r\n              <IntlMessages id=\"mail.compose\"/> </Button>\r\n          </div>\r\n\r\n          <ul className=\"module-nav\">\r\n\r\n            {this.getNavFolders()}\r\n\r\n            <li className=\"module-nav-label\">\r\n              <IntlMessages id=\"mail.filters\"/>\r\n            </li>\r\n\r\n            {this.getNavFilters()}\r\n\r\n            <li className=\"module-nav-label\">\r\n              <IntlMessages id=\"mail.labels\"/>\r\n            </li>\r\n\r\n            {this.getNavLabels()}\r\n\r\n          </ul>\r\n        </CustomScrollbars>\r\n      </div>\r\n    </div>\r\n  };\r\n\r\n  onDeleteMail = () => {\r\n    const mails = this.state.allMail.map(mail =>\r\n      mail.selected && (mail.folder === this.state.selectedFolder) ?\r\n        {...mail, folder: 4, selected: false,} : mail\r\n    );\r\n    this.setState({\r\n      alertMessage: 'Mail Deleted Successfully',\r\n      showMessage: true,\r\n      selectedMails: 0,\r\n      allMail: mails,\r\n      folderMails: mails.filter(mail => mail.folder === this.state.selectedFolder)\r\n    });\r\n  };\r\n  getNavFolders = () => {\r\n    return folders.map((folder, index) =>\r\n      <li key={index} onClick={() => {\r\n        const filterMails = this.state.allMail.filter(mail => mail.folder === folder.id);\r\n        this.setState({\r\n          selectedFolder: folder.id,\r\n          noContentFoundMessage: 'No mail found in selected folder',\r\n          currentMail: null,\r\n          loader: true,\r\n          folderMails: filterMails\r\n        });\r\n        setTimeout(() => {\r\n          this.setState({loader: false});\r\n        }, 1500);\r\n      }\r\n      }>\r\n        <span className={`jr-link ${this.state.selectedFolder === folder.id ? 'active' : ''}`}>\r\n          <i className={`zmdi zmdi-${folder.icon}`}/>\r\n          <span>{folder.title}</span>\r\n        </span>\r\n      </li>\r\n    )\r\n  };\r\n  onFolderMenuItemSelect = (folderId) => {\r\n    this.handleRequestClose();\r\n    const mails = this.state.allMail.map(mail =>\r\n      mail.selected && (mail.folder === this.state.selectedFolder) ?\r\n        {...mail, folder: folderId, selected: false,} : mail\r\n    );\r\n    this.setState({\r\n      selectedMails: 0,\r\n      allMail: mails,\r\n      noContentFoundMessage: 'No mail found in selected folder',\r\n      alertMessage: 'Mail has been moved successfully',\r\n      showMessage: true,\r\n      folderMails: mails.filter(mail => mail.folder === this.state.selectedFolder)\r\n    });\r\n  };\r\n  onLabelMenuItemSelect = (label) => {\r\n    this.handleRequestClose();\r\n    const mails = this.state.allMail.map(mail => {\r\n        if (mail.selected && (mail.folder === this.state.selectedFolder)) {\r\n          if (mail.labels.includes(label.id)) {\r\n            return {...mail, labels: this.removeLabel(mail, label.id)};\r\n          } else {\r\n            return {...mail, labels: this.addLabel(mail, label.id)};\r\n          }\r\n        } else {\r\n          return mail;\r\n        }\r\n      }\r\n    );\r\n    this.setState({\r\n      noContentFoundMessage: 'No mail found in selected label',\r\n      alertMessage: 'Label Updated Successfully',\r\n      showMessage: true,\r\n      allMail: mails,\r\n      folderMails: mails.filter(mail => mail.folder === this.state.selectedFolder)\r\n    });\r\n  };\r\n  handleRequestClose = () => {\r\n    this.setState({\r\n      composeMail: false,\r\n      showMessage: false,\r\n      folderMenuState: false,\r\n      labelMenuState: false,\r\n      optionMenuState: false\r\n    });\r\n  };\r\n  getNavFilters = () => {\r\n    return filters.map((filter, index) =>\r\n      <li key={index} onClick={() => {\r\n        const filterMails = this.state.allMail.filter(mail => {\r\n          if (filter.id === 0 && mail.starred) {\r\n            return mail\r\n          } else if (filter.id === 1 && mail.important) {\r\n            return mail\r\n          }\r\n          return null;\r\n        });\r\n        this.setState({\r\n          noContentFoundMessage: 'No mail found in selected filter',\r\n          loader: true,\r\n          folderMails: filterMails\r\n        });\r\n        setTimeout(() => {\r\n          this.setState({loader: false});\r\n        }, 1500);\r\n      }\r\n      }>\r\n        <span className=\"jr-link\">\r\n          <i className={`zmdi zmdi-${filter.icon}`}/>\r\n          <span>{filter.title}</span>\r\n        </span>\r\n      </li>\r\n    )\r\n  };\r\n  onFolderSelect = event => {\r\n    this.setState({\r\n      anchorEl: event.currentTarget,\r\n      folderMenuState: !this.state.folderMenuState\r\n    })\r\n  };\r\n  onLabelSelect = event => {\r\n    this.setState({\r\n      anchorEl: event.currentTarget,\r\n      labelMenuState: !this.state.labelMenuState\r\n    })\r\n  };\r\n  onOptionMenuSelect = event => {\r\n    this.setState({\r\n      anchorEl: event.currentTarget,\r\n      optionMenuState: !this.state.optionMenuState\r\n    })\r\n  };\r\n  onOptionMenuItemSelect = (option) => {\r\n    switch (option.title) {\r\n      case 'All':\r\n        this.handleRequestClose();\r\n        this.getAllMail();\r\n        break;\r\n      case 'None':\r\n        this.handleRequestClose();\r\n        this.getUnselectedAllMail();\r\n        break;\r\n      case 'Read':\r\n        this.handleRequestClose();\r\n        this.getReadMail();\r\n        break;\r\n      case 'Unread':\r\n        this.handleRequestClose();\r\n        this.getUnreadMail();\r\n        break;\r\n      case 'Starred':\r\n        this.handleRequestClose();\r\n        this.getStarredMail();\r\n        break;\r\n      case 'Unstarred':\r\n        this.handleRequestClose();\r\n        this.getUnStarredMail();\r\n        break;\r\n      case 'Important':\r\n        this.handleRequestClose();\r\n        this.getImportantMail();\r\n        break;\r\n      case 'Unimportant':\r\n        this.handleRequestClose();\r\n        this.getUnimportantMail();\r\n        break;\r\n      default:\r\n        this.handleRequestClose();\r\n        this.getAllMail();\r\n    }\r\n  };\r\n  getAllMail = () => {\r\n    let mails = this.state.allMail.map((mail) => mail.folder === this.state.selectedFolder ? {\r\n      ...mail,\r\n      selected: true\r\n    } : mail);\r\n    this.setState({\r\n      selectedMails: mails.length,\r\n      allMail: mails,\r\n      optionName: 'All',\r\n      folderMails: mails.filter(mail => mail.folder === this.state.selectedFolder)\r\n    });\r\n  };\r\n  getUnselectedAllMail = () => {\r\n    let mails = this.state.allMail.map((mail) => mail.folder === this.state.selectedFolder ? {\r\n      ...mail,\r\n      selected: false\r\n    } : mail);\r\n    this.setState({\r\n      selectedMails: 0,\r\n      allMail: mails,\r\n      optionName: 'None',\r\n      folderMails: mails.filter(mail => mail.folder === this.state.selectedFolder)\r\n    });\r\n  };\r\n  getReadMail = () => {\r\n    let selectedMail = 0;\r\n    let mails = this.state.allMail.filter(mail => mail.folder === this.state.selectedFolder);\r\n    mails = mails.map((mail) => {\r\n      if (mail.read) {\r\n        selectedMail++;\r\n        return {...mail, selected: true};\r\n      }\r\n      return {...mail, selected: false}\r\n    });\r\n    this.setState({\r\n      selectedMails: selectedMail,\r\n      allMail: mails,\r\n      optionName: 'Read',\r\n      folderMails: mails.filter(mail => mail.folder === this.state.selectedFolder)\r\n    });\r\n    return mails;\r\n  };\r\n  getUnreadMail = () => {\r\n    let selectedMail = 0;\r\n    let mails = this.state.allMail.filter(mail => mail.folder === this.state.selectedFolder);\r\n    mails = mails.map((mail) => {\r\n      if (!mail.read) {\r\n        selectedMail++;\r\n        return {...mail, selected: true};\r\n      }\r\n      return {...mail, selected: false}\r\n    });\r\n    this.setState({\r\n      selectedMails: selectedMail,\r\n      allMail: mails,\r\n      optionName: 'Unread',\r\n      folderMails: mails.filter(mail => mail.folder === this.state.selectedFolder)\r\n    });\r\n    return mails;\r\n  };\r\n  getStarredMail = () => {\r\n    let selectedMail = 0;\r\n    let mails = this.state.allMail.filter(mail => mail.folder === this.state.selectedFolder);\r\n    mails = mails.map((mail) => {\r\n      if (mail.starred) {\r\n        selectedMail++;\r\n        return {...mail, selected: true};\r\n      }\r\n      return {...mail, selected: false}\r\n    });\r\n    this.setState({\r\n      selectedMails: selectedMail,\r\n      allMail: mails,\r\n      optionName: 'Starred',\r\n      folderMails: mails.filter(mail => mail.folder === this.state.selectedFolder)\r\n    });\r\n    return mails;\r\n  };\r\n  getUnStarredMail = () => {\r\n    let selectedMail = 0;\r\n    let mails = this.state.allMail.filter(mail => mail.folder === this.state.selectedFolder);\r\n    mails = mails.map((mail) => {\r\n      if (!mail.starred) {\r\n        selectedMail++;\r\n        return {...mail, selected: true};\r\n      }\r\n      return {...mail, selected: false}\r\n    });\r\n    this.setState({\r\n      selectedMails: selectedMail,\r\n      allMail: mails,\r\n      optionName: 'UnStarred',\r\n      folderMails: mails.filter(mail => mail.folder === this.state.selectedFolder)\r\n    });\r\n    return mails;\r\n  };\r\n  getImportantMail = () => {\r\n    let selectedMail = 0;\r\n    let mails = this.state.allMail.filter(mail => mail.folder === this.state.selectedFolder);\r\n    mails = mails.map((mail) => {\r\n      if (mail.important) {\r\n        selectedMail++;\r\n        return {...mail, selected: true};\r\n      }\r\n      return {...mail, selected: false}\r\n    });\r\n    this.setState({\r\n      selectedMails: selectedMail,\r\n      allMail: mails,\r\n      optionName: 'Important',\r\n      folderMails: mails.filter(mail => mail.folder === this.state.selectedFolder)\r\n    });\r\n    return mails;\r\n  };\r\n  getUnimportantMail = () => {\r\n    let selectedMail = 0;\r\n    let mails = this.state.allMail.filter(mail => mail.folder === this.state.selectedFolder);\r\n    mails = mails.map((mail) => {\r\n      if (!mail.important) {\r\n        selectedMail++;\r\n        return {...mail, selected: true};\r\n      }\r\n      return {...mail, selected: false}\r\n    });\r\n    this.setState({\r\n      selectedMails: selectedMail,\r\n      optionName: 'Unimportant',\r\n      allMail: mails,\r\n      noContentFoundMessage: 'No Mail found in selected Label',\r\n      folderMails: mails.filter(mail => mail.folder === this.state.selectedFolder)\r\n    });\r\n    return mails;\r\n  };\r\n  getNavLabels = () => {\r\n    return labels.map((label, index) =>\r\n      <li key={index} onClick={() => {\r\n        const filterMails = this.state.allMail.filter(mail => mail.labels.includes(label.id));\r\n        this.setState({\r\n          loader: true,\r\n          noContentFoundMessage: 'No mail found in selected label',\r\n          folderMails: filterMails\r\n        });\r\n        setTimeout(() => {\r\n          this.setState({loader: false});\r\n        }, 1500);\r\n      }\r\n      }>\r\n        <span className=\"jr-link\">\r\n          <i className={`zmdi zmdi-circle text-${label.color}`}/>\r\n          <span>{label.title}</span>\r\n        </span>\r\n      </li>\r\n    )\r\n  };\r\n  searchMail = (searchText) => {\r\n    if (searchText === '') {\r\n      this.setState({folderMails: this.state.allMail.filter((mail) => !mail.deleted)});\r\n    } else {\r\n      const searchMails = this.state.allMail.filter((mail) =>\r\n        !mail.deleted && mail.subject.toLowerCase().indexOf(searchText.toLowerCase()) > -1);\r\n      this.setState({\r\n        folderMails: searchMails\r\n      });\r\n    }\r\n  };\r\n  displayMail = (currentMail, folderMails, noContentFoundMessage) => {\r\n    return (<div className=\"module-box-column\">\r\n      {currentMail === null ?\r\n        folderMails.length === 0 ?\r\n          <div className=\"d-flex align-items-center justify-content-center\"\r\n               style={{height: this.props.width >= 1200 ? 'calc(100vh - 259px)' : 'calc(100vh - 238px)'}}>\r\n            {noContentFoundMessage}\r\n          </div>\r\n          :\r\n          <MailList mails={folderMails} onStartSelect={this.onStartSelect.bind(this)}\r\n                    onMailSelect={this.onMailSelect.bind(this)}\r\n                    width={this.props.width}\r\n                    onMailChecked={this.onMailChecked.bind(this)}/>\r\n        :\r\n        <MailDetail mail={currentMail} onStartSelect={this.onStartSelect.bind(this)}\r\n                    width={this.props.width}\r\n                    onImportantSelect={this.onImportantSelect.bind(this)}/>}\r\n    </div>)\r\n  };\r\n  getMailActions = () => {\r\n    return <div>\r\n      <IconButton onClick={this.onFolderSelect.bind(this)} className=\"icon-btn\">\r\n        <i className=\"zmdi zmdi-folder\"/>\r\n      </IconButton>\r\n\r\n      <IconButton onClick={this.onDeleteMail.bind(this)} className=\"icon-btn\">\r\n        <i className=\"zmdi zmdi-delete\"/>\r\n      </IconButton>\r\n\r\n      <IconButton\r\n        onClick={this.onLabelSelect.bind(this)} className=\"icon-btn\">\r\n        <i className=\"zmdi zmdi-label-alt\"/>\r\n      </IconButton>\r\n    </div>\r\n  };\r\n\r\n  constructor() {\r\n    super();\r\n    this.state = {\r\n      searchMail: '',\r\n      noContentFoundMessage: 'No mail found in selected folder',\r\n      alertMessage: '',\r\n      showMessage: false,\r\n      drawerState: false,\r\n      optionName: 'None',\r\n      anchorEl: null,\r\n      allMail: mails,\r\n      loader: true,\r\n      currentMail: null,\r\n      user: {\r\n        name: 'Robert Johnson',\r\n        email: 'robert@example.com',\r\n        avatar: require('assets/images/userAvatar/domnic-harris.jpg')\r\n      },\r\n      selectedMails: 0,\r\n      selectedFolder: 0,\r\n      composeMail: false,\r\n      labelMenuState: false,\r\n      folderMenuState: false,\r\n      optionMenuState: false,\r\n      folderMails: mails.filter(mail => mail.folder === 0)\r\n    }\r\n  }\r\n\r\n  componentDidMount() {\r\n    setTimeout(() => {\r\n      this.setState({loader: false});\r\n    }, 1500);\r\n  }\r\n\r\n  onMailChecked(data) {\r\n    data.selected = !data.selected;\r\n    let selectedMail = 0;\r\n    const mails = this.state.folderMails.map(mail => {\r\n        if (mail.selected) {\r\n          selectedMail++;\r\n        }\r\n        if (mail.id === data.id) {\r\n          if (mail.selected) {\r\n            selectedMail++;\r\n          }\r\n          return data;\r\n        } else {\r\n          return mail;\r\n        }\r\n      }\r\n    );\r\n    this.setState({\r\n      selectedMails: selectedMail,\r\n      folderMails: mails\r\n    });\r\n  }\r\n\r\n  onAllMailSelect() {\r\n    const selectAll = this.state.selectedMails <= this.state.folderMails.length;\r\n    if (selectAll) {\r\n      this.getAllMail();\r\n    } else {\r\n      this.getUnselectedAllMail();\r\n    }\r\n  }\r\n\r\n  removeLabel(mail, label) {\r\n    mail.labels.splice(mail.labels.indexOf(label), 1);\r\n    if (this.state.currentMail !== null && mail.id === this.state.currentMail.id) {\r\n      this.setState({\r\n        currentMail: {...mail, labels: mail.labels}\r\n      })\r\n    }\r\n    return mail.labels;\r\n  }\r\n\r\n  onStartSelect(data) {\r\n    data.starred = !data.starred;\r\n    this.setState({\r\n      alertMessage: data.starred ? 'Mail Mark as Star' : 'Mail Remove as Star',\r\n      showMessage: true,\r\n      folderMails: this.state.folderMails.map(mail =>\r\n        mail.id === data.id ?\r\n          data : mail\r\n      )\r\n    });\r\n  }\r\n\r\n  onImportantSelect(data) {\r\n    data.important = !data.important;\r\n    this.setState({\r\n      alertMessage: data.important ? 'Mail Mark as Important' : 'Mail Remove as Important',\r\n      showMessage: true,\r\n      folderMails: this.state.folderMails.map(mail =>\r\n        mail.id === data.id ?\r\n          data : mail\r\n      )\r\n    });\r\n  }\r\n\r\n  onMailSend(data) {\r\n    this.setState(\r\n      {\r\n        alertMessage: 'Mail Sent Successfully',\r\n        showMessage: true,\r\n        folderMails: this.state.allMail.concat(data),\r\n        allMail: this.state.allMail.concat(data)\r\n      }\r\n    );\r\n  }\r\n\r\n  onMailSelect(mail) {\r\n    this.setState({\r\n      loader: true,\r\n      currentMail: mail,\r\n    });\r\n    setTimeout(() => {\r\n      this.setState({loader: false});\r\n    }, 1500);\r\n  }\r\n\r\n  addLabel(mail, label) {\r\n    if (this.state.currentMail !== null && mail.id === this.state.currentMail.id) {\r\n      this.setState({\r\n        currentMail: {...mail, labels: mail.labels.concat(label)}\r\n      })\r\n    }\r\n    return mail.labels.concat(label)\r\n  }\r\n\r\n  updateSearch(evt) {\r\n    this.setState({\r\n      searchMail: evt.target.value,\r\n    });\r\n    this.searchMail(evt.target.value)\r\n  }\r\n\r\n  onToggleDrawer() {\r\n    this.setState({\r\n      drawerState: !this.state.drawerState\r\n    });\r\n  }\r\n\r\n  render() {\r\n    const {selectedMails, loader, currentMail, folderMails, composeMail, user, alertMessage, showMessage, noContentFoundMessage} = this.state;\r\n    return (\r\n\r\n      <div className=\"app-wrapper\">\r\n        <div className=\"animated slideInUpTiny animation-duration-3\">\r\n          <div className=\"app-module\">\r\n\r\n            <div className=\"d-block d-xl-none\">\r\n              <Drawer\r\n                open={this.state.drawerState}\r\n                onClose={this.onToggleDrawer.bind(this)}>\r\n                {this.MailSideBar()}\r\n              </Drawer>\r\n            </div>\r\n            <div className=\"app-module-sidenav d-none d-xl-flex\">\r\n              {this.MailSideBar()}\r\n            </div>\r\n\r\n            <div className=\"module-box\">\r\n\r\n              <div className=\"module-box-header\">\r\n\r\n                <IconButton className=\"drawer-btn d-block d-xl-none\" aria-label=\"Menu\"\r\n                            onClick={this.onToggleDrawer.bind(this)}>\r\n                  <i className=\"zmdi zmdi-menu\"/>\r\n                </IconButton>\r\n                <AppModuleHeader placeholder=\"Search mails\" user={this.state.user}\r\n                                 onChange={this.updateSearch.bind(this)}\r\n                                 value={this.state.searchMail}/>\r\n\r\n              </div>\r\n\r\n              <div className=\"module-box-content\">\r\n                <div className=\"module-box-topbar\">\r\n                  {this.state.currentMail === null ?\r\n                    <div className=\"d-flex\">\r\n                      <Checkbox color=\"primary\"\r\n                                indeterminate={selectedMails > 0 && selectedMails < folderMails.length}\r\n                                checked={selectedMails > 0}\r\n                                onChange={this.onAllMailSelect.bind(this)}\r\n                                value=\"SelectMail\"/>\r\n                      <div className=\"d-flex align-items-center\" onClick={this.onOptionMenuSelect.bind(this)}>\r\n                        <span className=\"px-2\"> {this.state.optionName}</span>\r\n                        <IconButton className=\"icon-btn-sm\">\r\n                          <i className=\"zmdi zmdi-caret-down\"/>\r\n                        </IconButton>\r\n                      </div>\r\n                    </div>\r\n                    :\r\n                    <IconButton className=\"icon-btn\"\r\n                                onClick={() => {\r\n                                  this.setState({\r\n                                    currentMail: null\r\n                                  })\r\n                                }}>\r\n                      <i className=\"zmdi zmdi-arrow-back\"/>\r\n                    </IconButton>\r\n                  }\r\n\r\n                  {(selectedMails > 0) && this.getMailActions()}\r\n\r\n\r\n                  <Menu id=\"option-menu\"\r\n                        anchorEl={this.state.anchorEl}\r\n                        open={this.state.optionMenuState}\r\n                        onClose={this.handleRequestClose}\r\n                        MenuListProps={{\r\n                          style: {\r\n                            width: 150,\r\n                          },\r\n                        }}>\r\n                    {options.map(option =>\r\n                      <MenuItem key={option.title}\r\n                                onClick={this.onOptionMenuItemSelect.bind(this, option)}>\r\n                        {option.title}\r\n                      </MenuItem>,\r\n                    )}\r\n                  </Menu>\r\n\r\n                  <Menu id=\"folder-menu\"\r\n                        anchorEl={this.state.anchorEl}\r\n                        open={this.state.folderMenuState}\r\n                        onClose={this.handleRequestClose}\r\n                        MenuListProps={{\r\n                          style: {\r\n                            width: 150,\r\n                          },\r\n                        }}>\r\n                    {folders.map(folder =>\r\n                      <MenuItem key={folder.id}\r\n                                onClick={this.onFolderMenuItemSelect.bind(this, folder.id)}>\r\n                        {folder.title}\r\n                      </MenuItem>,\r\n                    )}\r\n                  </Menu>\r\n                  <Menu id=\"label-menu\"\r\n                        anchorEl={this.state.anchorEl}\r\n                        open={this.state.labelMenuState}\r\n                        onClose={this.handleRequestClose}\r\n                        MenuListProps={{\r\n                          style: {\r\n                            width: 150,\r\n                          },\r\n                        }}>\r\n                    {labels.map(label =>\r\n                      <MenuItem key={label.id}\r\n                                onClick={this.onLabelMenuItemSelect.bind(this, label)}>\r\n                        {label.title}\r\n                      </MenuItem>,\r\n                    )}\r\n                  </Menu>\r\n                </div>\r\n\r\n                {loader ?\r\n                  <div className=\"loader-view\"\r\n                       style={{height: this.props.width >= 1200 ? 'calc(100vh - 259px)' : 'calc(100vh - 238px)'}}>\r\n                    <CircularProgress/>\r\n                  </div> : this.displayMail(currentMail, folderMails, noContentFoundMessage)}\r\n\r\n                <ComposeMail open={composeMail} user={user}\r\n                             onClose={this.handleRequestClose.bind(this)}\r\n                             onMailSend={this.onMailSend.bind(this)}/>\r\n\r\n              </div>\r\n            </div>\r\n          </div>\r\n          <Snackbar\r\n            anchorOrigin={{vertical: 'top', horizontal: 'center'}}\r\n            open={showMessage}\r\n            autoHideDuration={3000}\r\n            onClose={this.handleRequestClose}\r\n            ContentProps={{\r\n              'aria-describedby': 'message-id',\r\n            }}\r\n            message={<span id=\"message-id\">{alertMessage}</span>}\r\n          />\r\n        </div>\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\nconst mapStateToProps = ({settings}) => {\r\n  const {width} = settings;\r\n  return {width}\r\n};\r\nexport default connect(mapStateToProps)(Mail);"],"sourceRoot":""}