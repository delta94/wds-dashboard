{"version":3,"sources":["components/chatPanel/Conversation/ReceivedMessageCell/index.js","components/chatPanel/Conversation/SentMessageCell/index.js","components/chatPanel/Conversation/index.js","components/chatPanel/ChatUserList/UserCell/index.js","components/chatPanel/ChatUserList/index.js","components/chatPanel/ContactList/UserCell/index.js","components/chatPanel/ContactList/index.js","app/routes/chatPanel/basic/index.js"],"names":["ReceivedMessageCell","_ref","conversation","user","react_default","a","createElement","className","src","thumb","alt","message","sentAt","SentMessageCell","require","name","Conversation","conversationData","selectedUser","map","index","type","Conversation_SentMessageCell","key","Conversation_ReceivedMessageCell","UserCell","chat","selectedSectionId","onSelectUser","id","concat","onClick","status","lastMessage","substring","lastMessageTime","unreadMessage","ChatUserList","chatUsers","ChatUserList_UserCell","mood","ContactList","contactList","ContactList_UserCell","ChatPanel","_this","Object","D_gaxon_product_jumbo_react_3_x_x_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_classCallCheck__WEBPACK_IMPORTED_MODULE_1__","this","D_gaxon_product_jumbo_react_3_x_x_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_possibleConstructorReturn__WEBPACK_IMPORTED_MODULE_3__","D_gaxon_product_jumbo_react_3_x_x_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_getPrototypeOf__WEBPACK_IMPORTED_MODULE_4__","call","filterContact","userName","users","filter","recent","toLowerCase","indexOf","filterUsers","Communication","_this$state","state","react__WEBPACK_IMPORTED_MODULE_7___default","_material_ui_core_IconButton__WEBPACK_IMPORTED_MODULE_16__","aria-label","onToggleDrawer","bind","D_gaxon_product_jumbo_react_3_x_x_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_assertThisInitialized__WEBPACK_IMPORTED_MODULE_5__","util_CustomScrollbars__WEBPACK_IMPORTED_MODULE_26__","style","height","props","width","components_chatPanel_Conversation_index__WEBPACK_IMPORTED_MODULE_21__","maxHeight","onKeyUp","_handleKeyPress","onChange","updateMessageValue","value","placeholder","submitComment","AppUsersInfo","setState","userState","_material_ui_core_Input__WEBPACK_IMPORTED_MODULE_17__","fullWidth","multiline","rows","defaultValue","margin","ChatUsers","components_SearchBox_index__WEBPACK_IMPORTED_MODULE_24__","updateSearchChatUser","searchChatUser","_material_ui_core_AppBar__WEBPACK_IMPORTED_MODULE_12__","position","_material_ui_core_Tabs__WEBPACK_IMPORTED_MODULE_13__","selectedTabIndex","handleChange","indicatorColor","textColor","variant","_material_ui_core_Tab__WEBPACK_IMPORTED_MODULE_14__","label","util_IntlMessages__WEBPACK_IMPORTED_MODULE_25__","react_swipeable_views__WEBPACK_IMPORTED_MODULE_11___default","onChangeIndex","handleChangeIndex","length","userNotFound","components_chatPanel_ChatUserList__WEBPACK_IMPORTED_MODULE_19__","components_chatPanel_ContactList_index__WEBPACK_IMPORTED_MODULE_23__","e","event","loader","drawerState","conversationList","find","data","setTimeout","showCommunication","_material_ui_core_Button__WEBPACK_IMPORTED_MODULE_8__","color","_this2","updatedConversation","Moment","format","D_gaxon_product_jumbo_react_3_x_x_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_objectSpread__WEBPACK_IMPORTED_MODULE_0__","evt","target","_this$state2","_material_ui_core_Drawer__WEBPACK_IMPORTED_MODULE_9__","open","onClose","_material_ui_core_CircularProgress__WEBPACK_IMPORTED_MODULE_15__","Component","connect","settings"],"mappings":"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","file":"static/js/121.36909408.chunk.js","sourcesContent":["import React from 'react';\r\n\r\nconst ReceivedMessageCell = ({conversation, user}) => {\r\n  return (\r\n    <div className=\"d-flex flex-nowrap chat-item\">\r\n\r\n      <img className=\"rounded-circle avatar size-40 align-self-end\" src={user.thumb}\r\n           alt=\"\"/>\r\n\r\n      <div className=\"bubble\">\r\n        <div className=\"message\">{conversation.message}</div>\r\n        <div className=\"time text-muted text-right mt-2\">{conversation.sentAt}</div>\r\n      </div>\r\n\r\n    </div>\r\n  )\r\n};\r\n\r\nexport default ReceivedMessageCell;","import React from 'react';\r\n\r\nconst SentMessageCell = ({conversation}) => {\r\n  return (\r\n    <div className=\"d-flex flex-nowrap chat-item flex-row-reverse\">\r\n\r\n      <img className=\"rounded-circle avatar size-40 align-self-end\"\r\n           src={require(\"assets/images/userAvatar/domnic-harris.jpg\")}\r\n           alt={conversation.name}/>\r\n\r\n      <div className=\"bubble jambo-card\">\r\n        <div className=\"message\">{conversation.message}</div>\r\n        <div className=\"time text-muted text-right mt-2\">{conversation.sentAt}</div>\r\n      </div>\r\n\r\n    </div>\r\n  )\r\n};\r\n\r\nexport default SentMessageCell;","import React from 'react';\r\nimport ReceivedMessageCell from \"./ReceivedMessageCell/index\";\r\nimport SentMessageCell from \"./SentMessageCell/index\";\r\n\r\nconst Conversation = ({conversationData, selectedUser}) => {\r\n\r\n  return (\r\n    <div className=\"chat-main-content\">\r\n      {conversationData.map((conversation, index) => conversation.type === 'sent' ?\r\n        <SentMessageCell key={index} conversation={conversation}/> :\r\n        <ReceivedMessageCell key={index} conversation={conversation} user={selectedUser}/>\r\n      )}\r\n    </div>\r\n  )\r\n};\r\n\r\nexport default Conversation;","import React from 'react';\r\n\r\nconst UserCell = ({chat, selectedSectionId, onSelectUser}) => {\r\n  return (\r\n    <div key={chat.id} className={`chat-user-item ${selectedSectionId === chat.id ? 'active' : ''}`} onClick={() => {\r\n      onSelectUser(chat);\r\n    }}>\r\n      <div className=\"chat-user-row row\">\r\n        <div className=\"chat-avatar col-xl-2 col-3\">\r\n          <div className=\"chat-avatar-mode\">\r\n            <img src={chat.thumb} className=\"rounded-circle size-40\" alt={chat.name}/>\r\n            <span className={`chat-mode small ${chat.status}`}/>\r\n          </div>\r\n        </div>\r\n\r\n        <div className=\"chat-info col-xl-8 col-6\">\r\n          <span className=\"name h4\">{chat.name}</span>\r\n          <div className=\"chat-info-des\">{chat.lastMessage.substring(0, 25) + \"...\"}</div>\r\n          <div className=\"last-message-time\">{chat.lastMessageTime}</div>\r\n        </div>\r\n\r\n        <div className=\"chat-date col-xl-2 col-3\">\r\n          <div className=\"bg-primary rounded-circle badge text-white\">{chat.unreadMessage}</div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  )\r\n};\r\n\r\nexport default UserCell;","import React from 'react';\r\nimport UserCell from \"./UserCell/index\";\r\n\r\nconst ChatUserList = ({chatUsers, selectedSectionId, onSelectUser}) => {\r\n  return (\r\n    <div className=\"chat-user\">\r\n      {chatUsers.map((chat, index) =>\r\n        <UserCell key={index} chat={chat} selectedSectionId={selectedSectionId} onSelectUser={onSelectUser}/>\r\n      )}\r\n    </div>\r\n  )\r\n};\r\n\r\nexport default ChatUserList;","import React from 'react';\r\n\r\nconst UserCell = ({onSelectUser, selectedSectionId, user}) => {\r\n  return (\r\n    <div className={`chat-user-item ${selectedSectionId === user.id ? 'active' : ''}`} onClick={() => {\r\n      onSelectUser(user);\r\n    }}>\r\n      <div className=\"chat-user-row row\">\r\n        <div className=\"chat-avatar col-xl-2 col-3\">\r\n          <div className=\"chat-avatar-mode\">\r\n            <img src={user.thumb} className=\"rounded-circle size-40\" alt=\"Abbott\"/>\r\n            <span className={`chat-mode smallcal ${user.status}`}/>\r\n          </div>\r\n        </div>\r\n\r\n        <div className=\"chat-contact-col col-xl-10 col-9\">\r\n          <div className=\"h4 name\">{user.name}</div>\r\n          <div className=\"chat-info-des\">{user.mood.substring(0, 30) + \"...\"}</div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  )\r\n};\r\n\r\nexport default UserCell;","import React from 'react';\r\nimport UserCell from \"./UserCell/index\";\r\n\r\nconst ContactList = ({onSelectUser, selectedSectionId, contactList}) => {\r\n  return (\r\n    <div className=\"chat-user\">\r\n      {contactList.map((user, index) =>\r\n        <UserCell key={index} user={user} selectedSectionId={selectedSectionId} onSelectUser={onSelectUser}/>\r\n      )}\r\n    </div>\r\n  )\r\n};\r\n\r\nexport default ContactList;","import React, {Component} from 'react';\r\nimport Button from '@material-ui/core/Button';\r\nimport Drawer from '@material-ui/core/Drawer';\r\nimport {connect} from 'react-redux'\r\nimport SwipeableViews from 'react-swipeable-views';\r\nimport AppBar from '@material-ui/core/AppBar';\r\nimport Tabs from '@material-ui/core/Tabs';\r\nimport Tab from '@material-ui/core/Tab';\r\nimport CircularProgress from '@material-ui/core/CircularProgress';\r\nimport IconButton from '@material-ui/core/IconButton'\r\nimport Input from '@material-ui/core/Input'\r\nimport Moment from 'moment';\r\nimport ChatUserList from 'components/chatPanel/ChatUserList';\r\nimport conversationList from '../data/conversationList';\r\nimport Conversation from 'components/chatPanel/Conversation/index';\r\nimport users from '../data/chatUsers';\r\nimport ContactList from 'components/chatPanel/ContactList/index';\r\nimport SearchBox from 'components/SearchBox/index';\r\nimport IntlMessages from 'util/IntlMessages';\r\nimport CustomScrollbars from 'util/CustomScrollbars';\r\n\r\nclass ChatPanel extends Component {\r\n  filterContact = (userName) => {\r\n    if (userName === '') {\r\n      return users.filter(user => !user.recent);\r\n    }\r\n    return users.filter((user) =>\r\n      !user.recent && user.name.toLowerCase().indexOf(userName.toLowerCase()) > -1\r\n    );\r\n  };\r\n  filterUsers = (userName) => {\r\n    if (userName === '') {\r\n      return users.filter(user => user.recent);\r\n    }\r\n    return users.filter((user) =>\r\n      user.recent && user.name.toLowerCase().indexOf(userName.toLowerCase()) > -1\r\n    );\r\n  };\r\n  Communication = () => {\r\n    const {message, selectedUser, conversation} = this.state;\r\n    const {conversationData} = conversation;\r\n    return <div className=\"chat-main\">\r\n      <div className=\"chat-main-header\">\r\n        <IconButton className=\"d-block d-xl-none chat-btn\" aria-label=\"Menu\"\r\n                    onClick={this.onToggleDrawer.bind(this)}>\r\n          <i className=\"zmdi zmdi-comment-text\"/>\r\n        </IconButton>\r\n        <div className=\"chat-main-header-info\">\r\n\r\n          <div className=\"chat-avatar mr-2\">\r\n            <div className=\"chat-avatar-mode\">\r\n              <img src={selectedUser.thumb}\r\n                   className=\"rounded-circle size-60\"\r\n                   alt=\"\"/>\r\n\r\n              <span className={`chat-mode ${selectedUser.status}`}/>\r\n            </div>\r\n          </div>\r\n\r\n          <div className=\"chat-contact-name\">\r\n            {selectedUser.name}\r\n          </div>\r\n        </div>\r\n\r\n      </div>\r\n\r\n      <CustomScrollbars className=\"chat-list-scroll scrollbar\"\r\n                        style={{height: this.props.width >= 1200 ? 'calc(100vh - 300px)' : 'calc(100vh - 269px)'}}>\r\n        <Conversation conversationData={conversationData}\r\n                      selectedUser={selectedUser}/>\r\n      </CustomScrollbars>\r\n\r\n      <div className=\"chat-main-footer\">\r\n        <div className=\"d-flex flex-row align-items-center\" style={{maxHeight: 51}}>\r\n          <div className=\"col\">\r\n            <div className=\"form-group\">\r\n                            <textarea\r\n                              id=\"required\" className=\"border-0 form-control chat-textarea\"\r\n                              onKeyUp={this._handleKeyPress.bind(this)}\r\n                              onChange={this.updateMessageValue.bind(this)}\r\n                              value={message}\r\n                              placeholder=\"Type and hit enter to send message\"\r\n                            />\r\n            </div>\r\n          </div>\r\n          <div className=\"chat-sent\">\r\n            <IconButton\r\n              onClick={this.submitComment.bind(this)}\r\n              aria-label=\"Send message\">\r\n              <i className=\"zmdi  zmdi-mail-send\"/>\r\n            </IconButton>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  };\r\n\r\n  AppUsersInfo = () => {\r\n    return <div className=\"chat-sidenav-main\">\r\n      <div className=\"bg-grey lighten-5 chat-sidenav-header\">\r\n\r\n        <div className=\"chat-user-hd mb-0\">\r\n          <IconButton className=\"back-to-chats-button\" aria-label=\"back button\"\r\n                      onClick={() => {\r\n                        this.setState({\r\n                          userState: 1\r\n                        });\r\n                      }}>\r\n            <i className=\"zmdi zmdi-arrow-back\"/>\r\n          </IconButton>\r\n        </div>\r\n        <div className=\"chat-user chat-user-center\">\r\n          <div className=\"chat-avatar mx-auto\">\r\n            <img src={require(\"assets/images/userAvatar/domnic-harris.jpg\")}\r\n                 className=\"avatar avatar-shadow rounded-circle size-60 huge\" alt=\"John Doe\"/>\r\n          </div>\r\n\r\n          <div className=\"user-name h4 my-2\">Robert Johnson</div>\r\n\r\n        </div>\r\n      </div>\r\n      <div className=\"chat-sidenav-content\">\r\n\r\n        <CustomScrollbars className=\"chat-sidenav-scroll scrollbar\"\r\n                          style={{height: this.props.width >= 1200 ? 'calc(100vh - 328px)' : 'calc(100vh - 162px)'}}>\r\n          <form className=\"p-4\">\r\n            <div className=\"form-group mt-4\">\r\n              <label>Mood</label>\r\n\r\n              <Input\r\n                fullWidth={true}\r\n                id=\"exampleTextarea\"\r\n                multiline\r\n                rows={3}\r\n                onKeyUp={this._handleKeyPress.bind(this)}\r\n                onChange={this.updateMessageValue.bind(this)}\r\n                defaultValue=\"it's a status....not your diary...\"\r\n                placeholder=\"Status\"\r\n                margin=\"none\"/>\r\n\r\n            </div>\r\n          </form>\r\n        </CustomScrollbars>\r\n\r\n      </div>\r\n    </div>\r\n  };\r\n  ChatUsers = () => {\r\n    return <div className=\"chat-sidenav-main\">\r\n\r\n      <div className=\"chat-sidenav-header\">\r\n\r\n        <div className=\"chat-user-hd\">\r\n\r\n          <div className=\"chat-avatar mr-3\" onClick={() => {\r\n            this.setState({\r\n              userState: 2\r\n            });\r\n          }}>\r\n            <div className=\"chat-avatar-mode\">\r\n              <img id=\"user-avatar-button\" src={require(\"assets/images/userAvatar/domnic-harris.jpg\")}\r\n                   className=\"rounded-circle size-50\"\r\n                   alt=\"\"/>\r\n              <span className=\"chat-mode online\"/>\r\n            </div>\r\n          </div>\r\n\r\n          <div className=\"module-user-info d-flex flex-column justify-content-center\">\r\n            <div className=\"module-title\">\r\n              <h5 className=\"mb-0\">Robert Johnson</h5>\r\n            </div>\r\n            <div className=\"module-user-detail\">\r\n              <span className=\"jr-link text-grey\">robert@example.com</span>\r\n            </div>\r\n          </div>\r\n        </div>\r\n\r\n        <div className=\"search-wrapper\">\r\n\r\n          <SearchBox placeholder=\"Search or start new chat\"\r\n                     onChange={this.updateSearchChatUser.bind(this)}\r\n                     value={this.state.searchChatUser}/>\r\n\r\n        </div>\r\n      </div>\r\n\r\n      <div className=\"chat-sidenav-content\">\r\n        <AppBar position=\"static\" className=\"no-shadow chat-tabs-header\">\r\n          <Tabs\r\n            className=\"chat-tabs\"\r\n            value={this.state.selectedTabIndex}\r\n            onChange={this.handleChange}\r\n            indicatorColor=\"primary\"\r\n            textColor=\"primary\"\r\n            variant=\"fullWidth\">\r\n            <Tab label={<IntlMessages id=\"chat.chatUser\"/>}/>\r\n            <Tab label={<IntlMessages id=\"chat.contacts\"/>}/>\r\n          </Tabs>\r\n        </AppBar>\r\n        <SwipeableViews\r\n          index={this.state.selectedTabIndex}\r\n          onChangeIndex={this.handleChangeIndex}\r\n        >\r\n          <CustomScrollbars className=\"chat-sidenav-scroll scrollbar\"\r\n                            style={{height: this.props.width >= 1200 ? 'calc(100vh - 328px)' : 'calc(100vh - 202px)'}}>\r\n            {this.state.chatUsers.length === 0 ?\r\n              <div className=\"p-5\">{this.state.userNotFound}</div>\r\n              :\r\n              <ChatUserList chatUsers={this.state.chatUsers}\r\n                            selectedSectionId={this.state.selectedSectionId}\r\n                            onSelectUser={this.onSelectUser.bind(this)}/>\r\n            }\r\n          </CustomScrollbars>\r\n\r\n          <CustomScrollbars className=\"chat-sidenav-scroll scrollbar\"\r\n                            style={{height: this.props.width >= 1200 ? 'calc(100vh - 328px)' : 'calc(100vh - 202px)'}}>\r\n            {\r\n              this.state.contactList.length === 0 ?\r\n                <div className=\"p-5\">{this.state.userNotFound}</div>\r\n                :\r\n                <ContactList contactList={this.state.contactList}\r\n                             selectedSectionId={this.state.selectedSectionId}\r\n                             onSelectUser={this.onSelectUser.bind(this)}/>\r\n            }\r\n          </CustomScrollbars>\r\n        </SwipeableViews>\r\n\r\n      </div>\r\n    </div>\r\n  };\r\n  _handleKeyPress = (e) => {\r\n    if (e.key === 'Enter') {\r\n      this.submitComment();\r\n    }\r\n  };\r\n\r\n  handleChange = (event, value) => {\r\n    this.setState({selectedTabIndex: value});\r\n  };\r\n\r\n  handleChangeIndex = index => {\r\n    this.setState({selectedTabIndex: index});\r\n  };\r\n  onSelectUser = (user) => {\r\n    this.setState({\r\n      loader: true,\r\n      selectedSectionId: user.id,\r\n      drawerState: this.props.drawerState,\r\n      selectedUser: user,\r\n      conversation: this.state.conversationList.find((data) => data.id === user.id)\r\n    });\r\n    setTimeout(() => {\r\n      this.setState({loader: false});\r\n    }, 1500);\r\n  };\r\n  showCommunication = () => {\r\n    return (\r\n      <div className=\"chat-box\">\r\n        <div className=\"chat-box-main\">{\r\n          this.state.selectedUser === null ?\r\n            <div className=\"loader-view\" style={{height: 'calc(100vh - 120px)'}}>\r\n              <i className=\"zmdi zmdi-comment s-128 text-muted\"/>\r\n              <h1 className=\"text-muted\">{<IntlMessages id=\"chat.selectUserChat\"/>}</h1>\r\n              <Button className=\"d-block d-xl-none\" color=\"primary\"\r\n                      onClick={this.onToggleDrawer.bind(this)}>{<IntlMessages\r\n                id=\"chat.selectContactChat\"/>}</Button>\r\n            </div>\r\n            : this.Communication()}\r\n        </div>\r\n      </div>)\r\n  };\r\n\r\n  constructor() {\r\n    super();\r\n    this.state = {\r\n      loader: false,\r\n      userNotFound: 'No user found',\r\n      drawerState: false,\r\n      selectedSectionId: '',\r\n      selectedTabIndex: 0,\r\n      userState: 1,\r\n      searchChatUser: '',\r\n      contactList: users.filter((user) => !user.recent),\r\n      selectedUser: null,\r\n      message: '',\r\n      chatUsers: users.filter((user) => user.recent),\r\n      conversationList: conversationList,\r\n      conversation: null\r\n    }\r\n  }\r\n\r\n  submitComment() {\r\n    if (this.state.message !== '') {\r\n      const updatedConversation = this.state.conversation.conversationData.concat({\r\n        'type': 'sent',\r\n        'message': this.state.message,\r\n        'sentAt': Moment().format('hh:mm:ss A'),\r\n      });\r\n      this.setState({\r\n        conversation: {\r\n          ...this.state.conversation, conversationData: updatedConversation\r\n        },\r\n        message: '',\r\n        conversationList: this.state.conversationList.map(conversationData => {\r\n          if (conversationData.id === this.state.conversation.id) {\r\n            return {...this.state.conversation, conversationData: updatedConversation};\r\n          } else {\r\n            return conversationData;\r\n          }\r\n        })\r\n      });\r\n    }\r\n  }\r\n\r\n  updateMessageValue(evt) {\r\n    this.setState({\r\n      message: evt.target.value\r\n    });\r\n  }\r\n\r\n  updateSearchChatUser(evt) {\r\n    this.setState({\r\n      searchChatUser: evt.target.value,\r\n      contactList: this.filterContact(evt.target.value),\r\n      chatUsers: this.filterUsers(evt.target.value)\r\n    });\r\n  }\r\n\r\n  onToggleDrawer() {\r\n    this.setState({\r\n      drawerState: !this.state.drawerState\r\n    });\r\n  }\r\n\r\n  render() {\r\n    const {loader, userState, drawerState} = this.state;\r\n    return (\r\n      <div className=\"app-wrapper app-wrapper-module\">\r\n        <div className=\"app-module chat-module animated slideInUpTiny animation-duration-3\">\r\n          <div className=\"chat-module-box\">\r\n            <div className=\"d-block d-xl-none\">\r\n              <Drawer open={drawerState}\r\n                      onClose={this.onToggleDrawer.bind(this)}>\r\n                {userState === 1 ? this.ChatUsers() : this.AppUsersInfo()}\r\n              </Drawer>\r\n            </div>\r\n            <div className=\"chat-sidenav d-none d-xl-flex\">\r\n              {userState === 1 ? this.ChatUsers() : this.AppUsersInfo()}\r\n            </div>\r\n            {loader ?\r\n              <div className=\"loader-view w-100\"\r\n                   style={{height: 'calc(100vh - 120px)'}}>\r\n                <CircularProgress/>\r\n              </div> : this.showCommunication()\r\n            }\r\n          </div>\r\n        </div>\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\nconst mapStateToProps = ({settings}) => {\r\n  const {width} = settings;\r\n  return {width}\r\n};\r\n\r\nexport default connect(mapStateToProps)(ChatPanel);"],"sourceRoot":""}