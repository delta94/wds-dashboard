{"version":3,"sources":["app/routes/mail/redux/index.js"],"names":["MailWithRedux","_this","Object","D_gaxon_product_jumbo_react_3_x_x_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_classCallCheck__WEBPACK_IMPORTED_MODULE_0__","this","D_gaxon_product_jumbo_react_3_x_x_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_possibleConstructorReturn__WEBPACK_IMPORTED_MODULE_2__","D_gaxon_product_jumbo_react_3_x_x_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_getPrototypeOf__WEBPACK_IMPORTED_MODULE_3__","call","MailSideBar","react__WEBPACK_IMPORTED_MODULE_6___default","a","createElement","className","util_IntlMessages__WEBPACK_IMPORTED_MODULE_25__","id","util_CustomScrollbars__WEBPACK_IMPORTED_MODULE_26__","style","height","props","width","_material_ui_core_Button__WEBPACK_IMPORTED_MODULE_8__","variant","color","onClick","onComposeMail","getNavFolders","getNavFilters","getNavLabels","onDeleteMail","folders","map","folder","index","key","setTimeout","hideMailLoader","concat","selectedFolder","icon","title","onFolderMenuItemSelect","folderId","handleMailRequestClose","onLabelMenuItemSelect","label","onMailLabelMenuItemSelect","handleRequestClose","filters","filter","getMailNavFilters","onFolderSelect","event","setState","anchorEl","currentTarget","onLabelSelect","onMailLabelSelect","onOptionMenuSelect","onMailOptionMenuSelect","onOptionMenuItemSelect","option","getAllMail","getUnselectedAllMail","getReadMail","getUnreadMail","getStarredMail","getUnStarredMail","getImportantMail","getUnimportantMail","labels","getMailNavLabels","searchMail","searchText","onSearchMail","displayMail","currentMail","folderMails","noContentFoundMessage","length","components_mail_MailList__WEBPACK_IMPORTED_MODULE_20__","mails","onStartSelect","bind","D_gaxon_product_jumbo_react_3_x_x_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_assertThisInitialized__WEBPACK_IMPORTED_MODULE_4__","onMailSelect","onMailChecked","components_mail_MailDetail_index__WEBPACK_IMPORTED_MODULE_23__","mail","onImportantSelect","getMailActions","_material_ui_core_IconButton__WEBPACK_IMPORTED_MODULE_12__","state","fetchMails","data","selectedMails","onMailSend","_this2","evt","updateMailSearch","target","value","onMailToggleDrawer","_this3","_this$props","loader","composeMail","user","alertMessage","showMessage","_material_ui_core_Drawer__WEBPACK_IMPORTED_MODULE_9__","open","drawerState","onClose","onToggleDrawer","aria-label","components_AppModuleHeader_index__WEBPACK_IMPORTED_MODULE_22__","placeholder","onChange","updateSearch","_material_ui_core_Checkbox__WEBPACK_IMPORTED_MODULE_10__","indeterminate","checked","onAllMailSelect","optionName","setCurrentMailNull","_material_ui_core_Menu__WEBPACK_IMPORTED_MODULE_13__","optionMenuState","MenuListProps","options","_material_ui_core_MenuItem__WEBPACK_IMPORTED_MODULE_14__","folderMenuState","labelMenuState","_material_ui_core_CircularProgress__WEBPACK_IMPORTED_MODULE_15__","components_mail_Compose_index__WEBPACK_IMPORTED_MODULE_21__","_material_ui_core_Snackbar__WEBPACK_IMPORTED_MODULE_11__","anchorOrigin","vertical","horizontal","autoHideDuration","ContentProps","aria-describedby","message","Component","connect","_ref","settings","allMail"],"mappings":"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","file":"static/js/161.b7e6cf2b.chunk.js","sourcesContent":["import React, {Component} from 'react';\r\nimport {connect} from 'react-redux'\r\nimport Button from '@material-ui/core/Button';\r\nimport Drawer from '@material-ui/core/Drawer';\r\nimport Checkbox from '@material-ui/core/Checkbox';\r\nimport Snackbar from '@material-ui/core/Snackbar';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport Menu from '@material-ui/core/Menu';\r\nimport MenuItem from '@material-ui/core/MenuItem';\r\nimport CircularProgress from '@material-ui/core/CircularProgress';\r\nimport folders from '../data/folders';\r\nimport filters from '../data/filters';\r\nimport labels from '../data/labels';\r\nimport options from '../data/options';\r\nimport MailList from 'components/mail/MailList';\r\n\r\nimport ComposeMail from 'components/mail/Compose/index';\r\nimport AppModuleHeader from 'components/AppModuleHeader/index';\r\nimport MailDetail from 'components/mail/MailDetail/index';\r\nimport {\r\n  fetchMails,\r\n  getAllMail,\r\n  getImportantMail,\r\n  getMailNavFilters,\r\n  getMailNavLabels,\r\n  getNavFolders,\r\n  getReadMail,\r\n  getStarredMail,\r\n  getUnimportantMail,\r\n  getUnreadMail,\r\n  getUnselectedAllMail,\r\n  getUnStarredMail,\r\n  handleMailRequestClose,\r\n  hideMailLoader,\r\n  onAllMailSelect,\r\n  onComposeMail,\r\n  onDeleteMail,\r\n  onFolderMenuItemSelect,\r\n  onFolderSelect,\r\n  onImportantSelect,\r\n  onMailChecked,\r\n  onMailLabelMenuItemSelect,\r\n  onMailLabelSelect,\r\n  onMailOptionMenuSelect,\r\n  onMailSelect,\r\n  onMailSend,\r\n  onMailToggleDrawer,\r\n  onOptionMenuItemSelect,\r\n  onSearchMail,\r\n  onStartSelect,\r\n  setCurrentMailNull,\r\n  updateMailSearch\r\n} from 'actions/Mail';\r\nimport IntlMessages from 'util/IntlMessages';\r\nimport CustomScrollbars from 'util/CustomScrollbars';\r\n\r\n\r\nclass MailWithRedux extends Component {\r\n\r\n  MailSideBar = () => {\r\n    return <div className=\"module-side\">\r\n\r\n      <div className=\"module-side-header\">\r\n        <div className=\"module-logo\">\r\n          <i className=\"zmdi zmdi-email mr-4\"/>\r\n          <span><IntlMessages id=\"mail.mailbox\"/></span>\r\n        </div>\r\n\r\n      </div>\r\n\r\n      <div className=\"module-side-content\">\r\n        <CustomScrollbars className=\"module-side-scroll scrollbar\"\r\n                          style={{height: this.props.width >= 1200 ? 'calc(100vh - 200px)' : 'calc(100vh - 80px)'}}>\r\n          <div className=\"module-add-task\">\r\n            <Button variant=\"contained\" color=\"primary\" className=\"btn-block\"\r\n                    onClick={() => {\r\n                      this.props.onComposeMail();\r\n                    }}>\r\n              <i className=\"zmdi zmdi-edit mr-3\"/>\r\n              <IntlMessages id=\"mail.compose\"/> </Button>\r\n          </div>\r\n\r\n          <ul className=\"module-nav\">\r\n\r\n            {this.getNavFolders()}\r\n\r\n            <li className=\"module-nav-label\">\r\n              <IntlMessages id=\"mail.filters\"/>\r\n            </li>\r\n\r\n            {this.getNavFilters()}\r\n\r\n            <li className=\"module-nav-label\">\r\n              <IntlMessages id=\"mail.labels\"/>\r\n            </li>\r\n\r\n            {this.getNavLabels()}\r\n\r\n          </ul>\r\n        </CustomScrollbars>\r\n      </div>\r\n    </div>\r\n  };\r\n\r\n  onDeleteMail = () => {\r\n    this.props.onDeleteMail();\r\n  };\r\n  getNavFolders = () => {\r\n    return folders.map((folder, index) =>\r\n      <li key={index} onClick={() => {\r\n        this.props.getNavFolders(folder);\r\n        setTimeout(() => {\r\n          this.props.hideMailLoader();\r\n        }, 1500);\r\n      }\r\n      }>\r\n        <span className={`jr-link ${this.props.selectedFolder === folder.id ? 'active' : ''}`}>\r\n          <i className={`zmdi zmdi-${folder.icon}`}/>\r\n          <span>{folder.title}</span>\r\n        </span>\r\n      </li>\r\n    )\r\n  };\r\n  onFolderMenuItemSelect = (folderId) => {\r\n    this.props.handleMailRequestClose();\r\n    this.props.onFolderMenuItemSelect(folderId);\r\n  };\r\n  onLabelMenuItemSelect = (label) => {\r\n    this.props.handleMailRequestClose();\r\n    this.props.onMailLabelMenuItemSelect(label);\r\n  };\r\n  handleRequestClose = () => {\r\n    this.props.handleMailRequestClose();\r\n  };\r\n  getNavFilters = () => {\r\n    return filters.map((filter, index) =>\r\n      <li key={index} onClick={() => {\r\n        this.props.getMailNavFilters(filter);\r\n        setTimeout(() => {\r\n          this.props.hideMailLoader();\r\n        }, 1500);\r\n      }\r\n      }>\r\n        <span className=\"jr-link\">\r\n          <i className={`zmdi zmdi-${filter.icon}`}/>\r\n          <span>{filter.title}</span>\r\n        </span>\r\n      </li>\r\n    )\r\n  };\r\n\r\n  onFolderSelect = event => {\r\n    this.props.onFolderSelect();\r\n    this.setState({\r\n      anchorEl: event.currentTarget\r\n    })\r\n  };\r\n  onLabelSelect = event => {\r\n    this.props.onMailLabelSelect();\r\n    this.setState({\r\n      anchorEl: event.currentTarget\r\n    })\r\n  };\r\n  onOptionMenuSelect = event => {\r\n    this.props.onMailOptionMenuSelect();\r\n    this.setState({\r\n      anchorEl: event.currentTarget\r\n    })\r\n  };\r\n  onOptionMenuItemSelect = (option) => {\r\n    switch (option.title) {\r\n      case 'All':\r\n        this.props.handleMailRequestClose();\r\n        this.props.getAllMail();\r\n        break;\r\n      case 'None':\r\n        this.props.handleMailRequestClose();\r\n        this.props.getUnselectedAllMail();\r\n        break;\r\n      case 'Read':\r\n        this.props.handleMailRequestClose();\r\n        this.props.getReadMail();\r\n        break;\r\n      case 'Unread':\r\n        this.props.handleMailRequestClose();\r\n        this.props.getUnreadMail();\r\n        break;\r\n      case 'Starred':\r\n        this.props.handleMailRequestClose();\r\n        this.props.getStarredMail();\r\n        break;\r\n      case 'Unstarred':\r\n        this.props.handleMailRequestClose();\r\n        this.props.getUnStarredMail();\r\n        break;\r\n      case 'Important':\r\n        this.props.handleMailRequestClose();\r\n        this.props.getImportantMail();\r\n        break;\r\n      case 'Unimportant':\r\n        this.props.handleMailRequestClose();\r\n        this.props.getUnimportantMail();\r\n        break;\r\n      default:\r\n        this.props.handleMailRequestClose();\r\n        this.props.getAllMail();\r\n    }\r\n  };\r\n  getAllMail = () => {\r\n    this.props.getAllMail();\r\n  };\r\n  getUnselectedAllMail = () => {\r\n    this.props.getUnselectedAllMail();\r\n  };\r\n  getReadMail = () => {\r\n    this.props.getReadMail();\r\n  };\r\n  getUnreadMail = () => {\r\n    this.props.getUnreadMail();\r\n  };\r\n  getStarredMail = () => {\r\n    this.props.getStarredMail();\r\n  };\r\n  getUnStarredMail = () => {\r\n    this.props.getUnStarredMail();\r\n  };\r\n  getImportantMail = () => {\r\n    this.props.getImportantMail();\r\n  };\r\n  getUnimportantMail = () => {\r\n    this.props.getUnimportantMail();\r\n  };\r\n  getNavLabels = () => {\r\n    return labels.map((label, index) =>\r\n      <li key={index} onClick={() => {\r\n        this.props.getMailNavLabels(label);\r\n        setTimeout(() => {\r\n          this.props.hideMailLoader();\r\n        }, 1500);\r\n      }\r\n      }>\r\n        <span className=\"jr-link\">\r\n          <i className={`zmdi zmdi-label-alt text-${label.color}`}/>\r\n          <span>{label.title}</span>\r\n        </span>\r\n      </li>\r\n    )\r\n  };\r\n  searchMail = (searchText) => {\r\n    this.props.onSearchMail(searchText);\r\n  };\r\n  displayMail = (currentMail, folderMails, noContentFoundMessage) => {\r\n    return (<div className=\"module-box-column\">\r\n      {currentMail === null ?\r\n        folderMails.length === 0 ?\r\n          <div className=\"d-flex align-items-center justify-content-center\"\r\n               style={{height: this.props.width >= 1200 ? 'calc(100vh - 259px)' : 'calc(100vh - 238px)'}}>\r\n            {noContentFoundMessage}\r\n          </div>\r\n          :\r\n          <MailList mails={folderMails} onStartSelect={this.onStartSelect.bind(this)}\r\n                    onMailSelect={this.onMailSelect.bind(this)}\r\n                    width={this.props.width}\r\n                    onMailChecked={this.onMailChecked.bind(this)}/>\r\n        :\r\n        <MailDetail mail={currentMail} onStartSelect={this.onStartSelect.bind(this)}\r\n                    width={this.props.width}\r\n                    onImportantSelect={this.onImportantSelect.bind(this)}/>}\r\n    </div>)\r\n  };\r\n  getMailActions = () => {\r\n    return <div>\r\n      <IconButton onClick={this.onFolderSelect.bind(this)} className=\"icon-btn\">\r\n        <i className=\"zmdi zmdi-folder\"/>\r\n      </IconButton>\r\n\r\n      <IconButton onClick={this.onDeleteMail.bind(this)} className=\"icon-btn\">\r\n        <i className=\"zmdi zmdi-delete\"/>\r\n      </IconButton>\r\n\r\n      <IconButton\r\n        onClick={this.onLabelSelect.bind(this)} className=\"icon-btn\">\r\n        <i className=\"zmdi zmdi-label-alt\"/>\r\n      </IconButton>\r\n    </div>\r\n  };\r\n\r\n  constructor() {\r\n    super();\r\n    this.state = {\r\n      anchorEl: null\r\n    }\r\n  }\r\n\r\n  componentWillMount() {\r\n    this.props.fetchMails();\r\n  }\r\n\r\n  onMailChecked(data) {\r\n    this.props.onMailChecked(data);\r\n  }\r\n\r\n  onAllMailSelect() {\r\n    const selectAll = this.props.selectedMails <= this.props.folderMails.length;\r\n    if (selectAll) {\r\n      this.getAllMail();\r\n    } else {\r\n      this.getUnselectedAllMail();\r\n    }\r\n  }\r\n\r\n  onStartSelect(data) {\r\n    this.props.onStartSelect(data);\r\n  }\r\n\r\n  onImportantSelect(data) {\r\n    this.props.onImportantSelect(data);\r\n  }\r\n\r\n  onMailSend(data) {\r\n    this.props.onMailSend(data);\r\n  }\r\n\r\n  onMailSelect(mail) {\r\n    this.props.onMailSelect(mail);\r\n    setTimeout(() => {\r\n      this.props.hideMailLoader();\r\n    }, 1500);\r\n  }\r\n\r\n  updateSearch(evt) {\r\n    this.props.updateMailSearch(evt.target.value);\r\n    this.props.onSearchMail(evt.target.value)\r\n  }\r\n\r\n  onToggleDrawer() {\r\n    this.props.onMailToggleDrawer()\r\n  }\r\n\r\n  render() {\r\n    const {selectedMails, loader, currentMail, folderMails, composeMail, user, alertMessage, showMessage, noContentFoundMessage} = this.props;\r\n    return (\r\n\r\n      <div className=\"app-wrapper\">\r\n        <div className=\"animated slideInUpTiny animation-duration-3\">\r\n          <div className=\"app-module\">\r\n\r\n            <div className=\"d-block d-xl-none\">\r\n              <Drawer\r\n                open={this.props.drawerState}\r\n                onClose={this.onToggleDrawer.bind(this)}>\r\n                {this.MailSideBar()}\r\n              </Drawer>\r\n            </div>\r\n            <div className=\"app-module-sidenav d-none d-xl-flex\">\r\n              {this.MailSideBar()}\r\n            </div>\r\n\r\n            <div className=\"module-box\">\r\n\r\n              <div className=\"module-box-header\">\r\n\r\n                <IconButton className=\"drawer-btn d-block d-xl-none\" aria-label=\"Menu\"\r\n                            onClick={this.onToggleDrawer.bind(this)}>\r\n                  <i className=\"zmdi zmdi-menu\"/>\r\n                </IconButton>\r\n                <AppModuleHeader placeholder=\"Search mails\" user={this.props.user}\r\n                                 onChange={this.updateSearch.bind(this)}\r\n                                 value={this.props.searchMail}/>\r\n\r\n              </div>\r\n\r\n              <div className=\"module-box-content\">\r\n                <div className=\"module-box-topbar\">\r\n                  {this.props.currentMail === null ?\r\n                    <div className=\"d-flex\">\r\n                      <Checkbox color=\"primary\"\r\n                                indeterminate={selectedMails > 0 && selectedMails < folderMails.length}\r\n                                checked={selectedMails > 0}\r\n                                onChange={this.onAllMailSelect.bind(this)}\r\n                                value=\"SelectMail\"/>\r\n\r\n                      <div className=\"d-flex align-items-center\" onClick={this.onOptionMenuSelect.bind(this)}>\r\n                        <span className=\"px-2\"> {this.props.optionName}</span>\r\n                        <IconButton className=\"icon-btn-sm\">\r\n\r\n                          <i className=\"zmdi zmdi-caret-down\"/>\r\n                        </IconButton>\r\n                      </div>\r\n                    </div>\r\n                    :\r\n                    <IconButton className=\"icon-btn\"\r\n                                onClick={() => {\r\n                                  this.props.setCurrentMailNull();\r\n                                }}>\r\n                      <i className=\"zmdi zmdi-arrow-back\"/>\r\n                    </IconButton>\r\n                  }\r\n\r\n                  {(selectedMails > 0) && this.getMailActions()}\r\n\r\n\r\n                  <Menu id=\"option-menu\"\r\n                        anchorEl={this.state.anchorEl}\r\n                        open={this.props.optionMenuState}\r\n                        onClose={this.handleRequestClose}\r\n\r\n                        MenuListProps={{\r\n                          style: {\r\n                            width: 150,\r\n                          },\r\n                        }}>\r\n                    {options.map(option =>\r\n                      <MenuItem key={option.title}\r\n                                onClick={this.onOptionMenuItemSelect.bind(this, option)}>\r\n                        {option.title}\r\n                      </MenuItem>,\r\n                    )}\r\n                  </Menu>\r\n\r\n                  <Menu id=\"folder-menu\"\r\n                        anchorEl={this.state.anchorEl}\r\n                        open={this.props.folderMenuState}\r\n                        onClose={this.handleRequestClose}\r\n\r\n                        MenuListProps={{\r\n                          style: {\r\n                            width: 150,\r\n                          },\r\n                        }}>\r\n                    {folders.map(folder =>\r\n                      <MenuItem key={folder.id}\r\n                                onClick={this.onFolderMenuItemSelect.bind(this, folder.id)}>\r\n                        {folder.title}\r\n                      </MenuItem>,\r\n                    )}\r\n                  </Menu>\r\n                  <Menu id=\"label-menu\"\r\n                        anchorEl={this.state.anchorEl}\r\n                        open={this.props.labelMenuState}\r\n                        onClose={this.handleRequestClose}\r\n\r\n                        MenuListProps={{\r\n                          style: {\r\n                            width: 150,\r\n                          },\r\n                        }}>\r\n                    {labels.map(label =>\r\n                      <MenuItem key={label.id}\r\n                                onClick={this.onLabelMenuItemSelect.bind(this, label)}>\r\n                        {label.title}\r\n                      </MenuItem>,\r\n                    )}\r\n                  </Menu>\r\n                </div>\r\n\r\n                {loader ?\r\n                  <div className=\"loader-view\"\r\n                       style={{height: this.props.width >= 1200 ? 'calc(100vh - 259px)' : 'calc(100vh - 238px)'}}>\r\n                    <CircularProgress/>\r\n                  </div> : this.displayMail(currentMail, folderMails, noContentFoundMessage)}\r\n\r\n                <ComposeMail open={composeMail} user={user}\r\n                             onClose={this.handleRequestClose.bind(this)}\r\n                             onMailSend={this.onMailSend.bind(this)}/>\r\n\r\n              </div>\r\n            </div>\r\n          </div>\r\n          <Snackbar\r\n            anchorOrigin={{vertical: 'top', horizontal: 'center'}}\r\n            open={showMessage}\r\n            autoHideDuration={3000}\r\n            onClose={this.handleRequestClose}\r\n            ContentProps={{\r\n              'aria-describedby': 'message-id',\r\n            }}\r\n            message={<span id=\"message-id\">{alertMessage}</span>}\r\n          />\r\n        </div>\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\n\r\nconst mapStateToProps = ({mail, settings}) => {\r\n  const {width} = settings;\r\n  const {\r\n    searchMail,\r\n    noContentFoundMessage,\r\n    alertMessage,\r\n    showMessage,\r\n    drawerState,\r\n    anchorEl,\r\n    allMail,\r\n    optionName,\r\n    loader,\r\n    currentMail,\r\n    user,\r\n    selectedMails,\r\n    selectedFolder,\r\n    composeMail,\r\n    labelMenuState,\r\n    folderMenuState,\r\n    optionMenuState,\r\n    folderMails\r\n  } = mail;\r\n\r\n  return {\r\n    width,\r\n    searchMail,\r\n    noContentFoundMessage,\r\n    alertMessage,\r\n    showMessage,\r\n    drawerState,\r\n    anchorEl,\r\n    allMail,\r\n    optionName,\r\n    loader,\r\n    currentMail,\r\n    user,\r\n    selectedMails,\r\n    selectedFolder,\r\n    composeMail,\r\n    labelMenuState,\r\n    folderMenuState,\r\n    optionMenuState,\r\n    folderMails\r\n  }\r\n};\r\n\r\n\r\nexport default connect(mapStateToProps, {\r\n  getAllMail,\r\n  fetchMails,\r\n  getImportantMail,\r\n  getMailNavFilters,\r\n  getMailNavLabels,\r\n  getNavFolders,\r\n  getReadMail,\r\n  getStarredMail,\r\n  getUnimportantMail,\r\n  getUnreadMail,\r\n  getUnselectedAllMail,\r\n  getUnStarredMail,\r\n  handleMailRequestClose,\r\n  hideMailLoader,\r\n  onAllMailSelect,\r\n  onComposeMail,\r\n  onDeleteMail,\r\n  onFolderMenuItemSelect,\r\n  onFolderSelect,\r\n  onImportantSelect,\r\n  onMailChecked,\r\n  onMailLabelMenuItemSelect,\r\n  onMailLabelSelect,\r\n  onMailOptionMenuSelect,\r\n  onMailSelect,\r\n  onMailSend,\r\n  onMailToggleDrawer,\r\n  onOptionMenuItemSelect,\r\n  onSearchMail,\r\n  onStartSelect,\r\n  setCurrentMailNull,\r\n  updateMailSearch\r\n})(MailWithRedux);"],"sourceRoot":""}