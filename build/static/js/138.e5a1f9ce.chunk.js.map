{"version":3,"sources":["../node_modules/rgbcolor/index.js","../node_modules/stackblur-canvas/src/stackblur.js","../node_modules/canvg/dist/browser/canvg.min.js"],"names":["module","exports","color_string","this","ok","alpha","charAt","substr","replace","toLowerCase","simple_colors","aliceblue","antiquewhite","aqua","aquamarine","azure","beige","bisque","black","blanchedalmond","blue","blueviolet","brown","burlywood","cadetblue","chartreuse","chocolate","coral","cornflowerblue","cornsilk","crimson","cyan","darkblue","darkcyan","darkgoldenrod","darkgray","darkgreen","darkkhaki","darkmagenta","darkolivegreen","darkorange","darkorchid","darkred","darksalmon","darkseagreen","darkslateblue","darkslategray","darkturquoise","darkviolet","deeppink","deepskyblue","dimgray","dodgerblue","feldspar","firebrick","floralwhite","forestgreen","fuchsia","gainsboro","ghostwhite","gold","goldenrod","gray","green","greenyellow","honeydew","hotpink","indianred","indigo","ivory","khaki","lavender","lavenderblush","lawngreen","lemonchiffon","lightblue","lightcoral","lightcyan","lightgoldenrodyellow","lightgrey","lightgreen","lightpink","lightsalmon","lightseagreen","lightskyblue","lightslateblue","lightslategray","lightsteelblue","lightyellow","lime","limegreen","linen","magenta","maroon","mediumaquamarine","mediumblue","mediumorchid","mediumpurple","mediumseagreen","mediumslateblue","mediumspringgreen","mediumturquoise","mediumvioletred","midnightblue","mintcream","mistyrose","moccasin","navajowhite","navy","oldlace","olive","olivedrab","orange","orangered","orchid","palegoldenrod","palegreen","paleturquoise","palevioletred","papayawhip","peachpuff","peru","pink","plum","powderblue","purple","rebeccapurple","red","rosybrown","royalblue","saddlebrown","salmon","sandybrown","seagreen","seashell","sienna","silver","skyblue","slateblue","slategray","snow","springgreen","steelblue","tan","teal","thistle","tomato","turquoise","violet","violetred","wheat","white","whitesmoke","yellow","yellowgreen","color_defs","re","example","process","bits","parseInt","parseFloat","i","length","processor","exec","channels","r","g","b","isNaN","toRGB","toRGBA","toHex","toString","getHelpXML","examples","Array","j","sc","xml","document","createElement","setAttribute","list_item","list_color","RGBColor","example_div","style","cssText","appendChild","createTextNode","list_item_value","e","mul_table","shg_table","getImageDataFromCanvas","canvas","top_x","top_y","width","height","getElementById","HTMLCanvasElement","imageData","context","getContext","getImageData","Error","processCanvasRGBA","radius","processImageDataRGBA","putImageData","x","y","p","yp","yi","yw","r_sum","g_sum","b_sum","a_sum","r_out_sum","g_out_sum","b_out_sum","a_out_sum","r_in_sum","g_in_sum","b_in_sum","a_in_sum","pr","pg","pb","pa","rbs","pixels","data","div","widthMinus1","heightMinus1","radiusPlus1","sumFactor","stackStart","BlurStack","stack","next","stackEnd","stackIn","stackOut","mul_sum","shg_sum","a","processCanvasRGB","processImageDataRGB","image","img","blurAlphaChannel","HTMLImageElement","w","naturalWidth","h","naturalHeight","clearRect","drawImage","canvasRGBA","canvasRGB","imageDataRGBA","imageDataRGB","m","d","t","hasOwnProperty","default","u","window","DOMParser","f","c","n","s","A","opts","FRAMERATE","MAX_VIRTUAL_PIXELS","rootEmSize","emSize","log","console","init","UniqueId","Definitions","Styles","StylesSpecificity","Animations","Images","ctx","ViewPort","viewPorts","Clear","SetCurrent","push","RemoveCurrent","pop","Current","ComputeSize","Math","sqrt","pow","ImagesLoaded","loaded","trim","compressSpaces","ajax","XMLHttpRequest","ActiveXObject","open","send","responseText","parseXml","Windows","Data","Xml","Dom","XmlDocument","XmlLoadSettings","prohibitDtd","loadXml","async","loadXML","xmldom","parseFromString","Property","name","value","prototype","getValue","hasValue","numValue","match","valueOrDefault","numValueOrDefault","addOpacity","getDefinition","isUrlDefinition","indexOf","getFillStyleDefinition","createGradient","createPattern","getHrefAttribute","attribute","getDPI","getREM","getEM","getUnits","isPixels","toPixels","toMilliseconds","toRadians","PI","baseline","before-edge","text-before-edge","middle","central","after-edge","text-after-edge","ideographic","alphabetic","hanging","mathematical","toTextBaseline","Font","Variants","Weights","CreateFont","Parse","font","fontFamily","fontSize","fontStyle","fontWeight","fontVariant","join","split","ToNumberArray","Point","angleTo","atan2","applyTransform","CreatePoint","CreatePath","BoundingBox","x1","Number","NaN","y1","x2","y2","addPoint","addX","addY","addBoundingBox","addQuadraticCurve","o","l","addBezierCurve","v","isPointInBox","Transform","Type","translate","apply","unapply","applyToPoint","rotate","angle","cx","cy","cos","sin","scale","matrix","transform","SkewBase","base","skewX","skewY","transforms","type","AspectRatio","min","max","Element","EmptyProperty","ElementBase","attributes","styles","stylesSpecificity","children","parent","render","save","setContext","renderChildren","clearContext","restore","addChild","CreateElement","addStylesFromStyleDefinition","RegExp","nodeType","nodeName","test","childNodes","captureTextNodes","text","textContent","tspan","RenderedElementBase","calculateOpacity","fillStyle","strokeStyle","lineWidth","lineCap","lineJoin","miterLimit","paintOrder","setLineDash","webkitLineDash","mozDash","lineDashOffset","webkitLineDashOffset","mozDashOffset","globalAlpha","PathElementBase","path","beginPath","Mouse","checkPath","fill","stroke","getMarkers","getBoundingBox","svg","baseClearContext","baseSetContext","getComputedStyle","getPropertyValue","root","moveTo","lineTo","closePath","clip","rect","bezierCurveTo","circle","arc","ellipse","line","getPoints","polyline","points","polygon","basePath","PathParser","tokens","reset","command","previousCommand","start","control","current","angles","isEnd","isCommandOrEnd","isRelativeCommand","getToken","getScalar","nextCommand","getPoint","makeAbsolute","getAsControlPoint","getAsCurrentPoint","getReflectedControlPoint","addMarker","addMarkerAngle","getMarkerPoints","getMarkerAngles","quadraticCurveTo","P","E","acos","B","C","T","V","M","S","k","D","pattern","viewBox","marker","baseRender","refX","refY","defs","GradientBase","stops","getGradient","gradientUnits","attributesToInherit","inheritStopContainer","color","addColorStop","offset","linearGradient","createLinearGradient","radialGradient","createRadialGradient","stop","AnimateBase","duration","begin","maxDuration","getProperty","initialValue","initialUnits","removed","calcValue","update","frozen","animationFrozen","animationFrozenValue","from","to","values","progress","floor","ceil","animate","animateColor","animateTransform","horizAdvX","isRTL","isArabic","fontFace","missingGlyph","glyphs","arabicForm","unicode","fontface","ascent","descent","unitsPerEm","missingglyph","glyph","textBaseline","initializeCoordinates","getAnchorDelta","getChildBoundingBox","renderChild","measureTextRecursive","adjustChildCoordinates","measureText","TextElementBase","getGlyph","strokeText","getText","fillText","reverse","tref","hasText","baseRenderChildren","checkBoundingBox","onclick","onmousemove","cursor","useCORS","crossOrigin","onload","onerror","src","drawSvg","complete","symbol","getElementsByTagName","use","elementTransform","preserveAspectRatio","overflow","mask","globalCompositeOperation","fillRect","clipPath","CanvasRenderingContext2D","call","filter","extraFilterDistance","feMorphology","feComposite","feColorMatrix","_i","feGaussianBlur","blurRadius","id","display","body","removeChild","title","desc","MISSING","load","loadXmlDoc","offsetLeft","offsetTop","offsetParent","scrollX","scrollY","ignoreMouse","clientX","event","clientY","documentElement","parentNode","clientWidth","clientHeight","ignoreDimensions","offsetX","offsetY","scaleWidth","scaleHeight","ignoreClear","renderCallback","intervalID","setInterval","hasEvents","ignoreAnimation","forceRedraw","runEvents","clearInterval","events","run","eventElements","isPointInPath","querySelectorAll","insertBefore","innerHTML","matches","webkitMatchesSelector","mozMatchesSelector","msMatchesSelector","oMatchesSelector","jQuery","Zepto","$","is","Sizzle","matchesSelector","_t","__webpack_require__"],"mappings":"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","file":"static/js/138.e5a1f9ce.chunk.js","sourcesContent":["/*\n\tBased on rgbcolor.js by Stoyan Stefanov <sstoo@gmail.com>\n\thttp://www.phpied.com/rgb-color-parser-in-javascript/\n*/\nmodule.exports = function (color_string) {\n  this.ok = false;\n  this.alpha = 1.0; // strip any leading #\n\n  if (color_string.charAt(0) == '#') {\n    // remove # if any\n    color_string = color_string.substr(1, 6);\n  }\n\n  color_string = color_string.replace(/ /g, '');\n  color_string = color_string.toLowerCase(); // before getting into regexps, try simple matches\n  // and overwrite the input\n\n  var simple_colors = {\n    aliceblue: 'f0f8ff',\n    antiquewhite: 'faebd7',\n    aqua: '00ffff',\n    aquamarine: '7fffd4',\n    azure: 'f0ffff',\n    beige: 'f5f5dc',\n    bisque: 'ffe4c4',\n    black: '000000',\n    blanchedalmond: 'ffebcd',\n    blue: '0000ff',\n    blueviolet: '8a2be2',\n    brown: 'a52a2a',\n    burlywood: 'deb887',\n    cadetblue: '5f9ea0',\n    chartreuse: '7fff00',\n    chocolate: 'd2691e',\n    coral: 'ff7f50',\n    cornflowerblue: '6495ed',\n    cornsilk: 'fff8dc',\n    crimson: 'dc143c',\n    cyan: '00ffff',\n    darkblue: '00008b',\n    darkcyan: '008b8b',\n    darkgoldenrod: 'b8860b',\n    darkgray: 'a9a9a9',\n    darkgreen: '006400',\n    darkkhaki: 'bdb76b',\n    darkmagenta: '8b008b',\n    darkolivegreen: '556b2f',\n    darkorange: 'ff8c00',\n    darkorchid: '9932cc',\n    darkred: '8b0000',\n    darksalmon: 'e9967a',\n    darkseagreen: '8fbc8f',\n    darkslateblue: '483d8b',\n    darkslategray: '2f4f4f',\n    darkturquoise: '00ced1',\n    darkviolet: '9400d3',\n    deeppink: 'ff1493',\n    deepskyblue: '00bfff',\n    dimgray: '696969',\n    dodgerblue: '1e90ff',\n    feldspar: 'd19275',\n    firebrick: 'b22222',\n    floralwhite: 'fffaf0',\n    forestgreen: '228b22',\n    fuchsia: 'ff00ff',\n    gainsboro: 'dcdcdc',\n    ghostwhite: 'f8f8ff',\n    gold: 'ffd700',\n    goldenrod: 'daa520',\n    gray: '808080',\n    green: '008000',\n    greenyellow: 'adff2f',\n    honeydew: 'f0fff0',\n    hotpink: 'ff69b4',\n    indianred: 'cd5c5c',\n    indigo: '4b0082',\n    ivory: 'fffff0',\n    khaki: 'f0e68c',\n    lavender: 'e6e6fa',\n    lavenderblush: 'fff0f5',\n    lawngreen: '7cfc00',\n    lemonchiffon: 'fffacd',\n    lightblue: 'add8e6',\n    lightcoral: 'f08080',\n    lightcyan: 'e0ffff',\n    lightgoldenrodyellow: 'fafad2',\n    lightgrey: 'd3d3d3',\n    lightgreen: '90ee90',\n    lightpink: 'ffb6c1',\n    lightsalmon: 'ffa07a',\n    lightseagreen: '20b2aa',\n    lightskyblue: '87cefa',\n    lightslateblue: '8470ff',\n    lightslategray: '778899',\n    lightsteelblue: 'b0c4de',\n    lightyellow: 'ffffe0',\n    lime: '00ff00',\n    limegreen: '32cd32',\n    linen: 'faf0e6',\n    magenta: 'ff00ff',\n    maroon: '800000',\n    mediumaquamarine: '66cdaa',\n    mediumblue: '0000cd',\n    mediumorchid: 'ba55d3',\n    mediumpurple: '9370d8',\n    mediumseagreen: '3cb371',\n    mediumslateblue: '7b68ee',\n    mediumspringgreen: '00fa9a',\n    mediumturquoise: '48d1cc',\n    mediumvioletred: 'c71585',\n    midnightblue: '191970',\n    mintcream: 'f5fffa',\n    mistyrose: 'ffe4e1',\n    moccasin: 'ffe4b5',\n    navajowhite: 'ffdead',\n    navy: '000080',\n    oldlace: 'fdf5e6',\n    olive: '808000',\n    olivedrab: '6b8e23',\n    orange: 'ffa500',\n    orangered: 'ff4500',\n    orchid: 'da70d6',\n    palegoldenrod: 'eee8aa',\n    palegreen: '98fb98',\n    paleturquoise: 'afeeee',\n    palevioletred: 'd87093',\n    papayawhip: 'ffefd5',\n    peachpuff: 'ffdab9',\n    peru: 'cd853f',\n    pink: 'ffc0cb',\n    plum: 'dda0dd',\n    powderblue: 'b0e0e6',\n    purple: '800080',\n    rebeccapurple: '663399',\n    red: 'ff0000',\n    rosybrown: 'bc8f8f',\n    royalblue: '4169e1',\n    saddlebrown: '8b4513',\n    salmon: 'fa8072',\n    sandybrown: 'f4a460',\n    seagreen: '2e8b57',\n    seashell: 'fff5ee',\n    sienna: 'a0522d',\n    silver: 'c0c0c0',\n    skyblue: '87ceeb',\n    slateblue: '6a5acd',\n    slategray: '708090',\n    snow: 'fffafa',\n    springgreen: '00ff7f',\n    steelblue: '4682b4',\n    tan: 'd2b48c',\n    teal: '008080',\n    thistle: 'd8bfd8',\n    tomato: 'ff6347',\n    turquoise: '40e0d0',\n    violet: 'ee82ee',\n    violetred: 'd02090',\n    wheat: 'f5deb3',\n    white: 'ffffff',\n    whitesmoke: 'f5f5f5',\n    yellow: 'ffff00',\n    yellowgreen: '9acd32'\n  };\n  color_string = simple_colors[color_string] || color_string; // emd of simple type-in colors\n  // array of color definition objects\n\n  var color_defs = [{\n    re: /^rgba\\((\\d{1,3}),\\s*(\\d{1,3}),\\s*(\\d{1,3}),\\s*((?:\\d?\\.)?\\d)\\)$/,\n    example: ['rgba(123, 234, 45, 0.8)', 'rgba(255,234,245,1.0)'],\n    process: function process(bits) {\n      return [parseInt(bits[1]), parseInt(bits[2]), parseInt(bits[3]), parseFloat(bits[4])];\n    }\n  }, {\n    re: /^rgb\\((\\d{1,3}),\\s*(\\d{1,3}),\\s*(\\d{1,3})\\)$/,\n    example: ['rgb(123, 234, 45)', 'rgb(255,234,245)'],\n    process: function process(bits) {\n      return [parseInt(bits[1]), parseInt(bits[2]), parseInt(bits[3])];\n    }\n  }, {\n    re: /^([0-9a-fA-F]{2})([0-9a-fA-F]{2})([0-9a-fA-F]{2})$/,\n    example: ['#00ff00', '336699'],\n    process: function process(bits) {\n      return [parseInt(bits[1], 16), parseInt(bits[2], 16), parseInt(bits[3], 16)];\n    }\n  }, {\n    re: /^([0-9a-fA-F]{1})([0-9a-fA-F]{1})([0-9a-fA-F]{1})$/,\n    example: ['#fb0', 'f0f'],\n    process: function process(bits) {\n      return [parseInt(bits[1] + bits[1], 16), parseInt(bits[2] + bits[2], 16), parseInt(bits[3] + bits[3], 16)];\n    }\n  }]; // search through the definitions to find a match\n\n  for (var i = 0; i < color_defs.length; i++) {\n    var re = color_defs[i].re;\n    var processor = color_defs[i].process;\n    var bits = re.exec(color_string);\n\n    if (bits) {\n      var channels = processor(bits);\n      this.r = channels[0];\n      this.g = channels[1];\n      this.b = channels[2];\n\n      if (channels.length > 3) {\n        this.alpha = channels[3];\n      }\n\n      this.ok = true;\n    }\n  } // validate/cleanup values\n\n\n  this.r = this.r < 0 || isNaN(this.r) ? 0 : this.r > 255 ? 255 : this.r;\n  this.g = this.g < 0 || isNaN(this.g) ? 0 : this.g > 255 ? 255 : this.g;\n  this.b = this.b < 0 || isNaN(this.b) ? 0 : this.b > 255 ? 255 : this.b;\n  this.alpha = this.alpha < 0 ? 0 : this.alpha > 1.0 || isNaN(this.alpha) ? 1.0 : this.alpha; // some getters\n\n  this.toRGB = function () {\n    return 'rgb(' + this.r + ', ' + this.g + ', ' + this.b + ')';\n  };\n\n  this.toRGBA = function () {\n    return 'rgba(' + this.r + ', ' + this.g + ', ' + this.b + ', ' + this.alpha + ')';\n  };\n\n  this.toHex = function () {\n    var r = this.r.toString(16);\n    var g = this.g.toString(16);\n    var b = this.b.toString(16);\n    if (r.length == 1) r = '0' + r;\n    if (g.length == 1) g = '0' + g;\n    if (b.length == 1) b = '0' + b;\n    return '#' + r + g + b;\n  }; // help\n\n\n  this.getHelpXML = function () {\n    var examples = new Array(); // add regexps\n\n    for (var i = 0; i < color_defs.length; i++) {\n      var example = color_defs[i].example;\n\n      for (var j = 0; j < example.length; j++) {\n        examples[examples.length] = example[j];\n      }\n    } // add type-in colors\n\n\n    for (var sc in simple_colors) {\n      examples[examples.length] = sc;\n    }\n\n    var xml = document.createElement('ul');\n    xml.setAttribute('id', 'rgbcolor-examples');\n\n    for (var i = 0; i < examples.length; i++) {\n      try {\n        var list_item = document.createElement('li');\n        var list_color = new RGBColor(examples[i]);\n        var example_div = document.createElement('div');\n        example_div.style.cssText = 'margin: 3px; ' + 'border: 1px solid black; ' + 'background:' + list_color.toHex() + '; ' + 'color:' + list_color.toHex();\n        example_div.appendChild(document.createTextNode('test'));\n        var list_item_value = document.createTextNode(' ' + examples[i] + ' -> ' + list_color.toRGB() + ' -> ' + list_color.toHex());\n        list_item.appendChild(example_div);\n        list_item.appendChild(list_item_value);\n        xml.appendChild(list_item);\n      } catch (e) {}\n    }\n\n    return xml;\n  };\n};","/*\n    StackBlur - a fast almost Gaussian Blur For Canvas\n\n    Version:     0.5\n    Author:        Mario Klingemann\n    Contact:     mario@quasimondo.com\n    Website:    http://www.quasimondo.com/StackBlurForCanvas\n    Twitter:    @quasimondo\n\n    In case you find this class useful - especially in commercial projects -\n    I am not totally unhappy for a small donation to my PayPal account\n    mario@quasimondo.de\n\n    Or support me on flattr:\n    https://flattr.com/thing/72791/StackBlur-a-fast-almost-Gaussian-Blur-Effect-for-CanvasJavascript\n\n    Copyright (c) 2010 Mario Klingemann\n\n    Permission is hereby granted, free of charge, to any person\n    obtaining a copy of this software and associated documentation\n    files (the \"Software\"), to deal in the Software without\n    restriction, including without limitation the rights to use,\n    copy, modify, merge, publish, distribute, sublicense, and/or sell\n    copies of the Software, and to permit persons to whom the\n    Software is furnished to do so, subject to the following\n    conditions:\n\n    The above copyright notice and this permission notice shall be\n    included in all copies or substantial portions of the Software.\n\n    THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND,\n    EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES\n    OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND\n    NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT\n    HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY,\n    WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING\n    FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR\n    OTHER DEALINGS IN THE SOFTWARE.\n    */\nvar mul_table = [512, 512, 456, 512, 328, 456, 335, 512, 405, 328, 271, 456, 388, 335, 292, 512, 454, 405, 364, 328, 298, 271, 496, 456, 420, 388, 360, 335, 312, 292, 273, 512, 482, 454, 428, 405, 383, 364, 345, 328, 312, 298, 284, 271, 259, 496, 475, 456, 437, 420, 404, 388, 374, 360, 347, 335, 323, 312, 302, 292, 282, 273, 265, 512, 497, 482, 468, 454, 441, 428, 417, 405, 394, 383, 373, 364, 354, 345, 337, 328, 320, 312, 305, 298, 291, 284, 278, 271, 265, 259, 507, 496, 485, 475, 465, 456, 446, 437, 428, 420, 412, 404, 396, 388, 381, 374, 367, 360, 354, 347, 341, 335, 329, 323, 318, 312, 307, 302, 297, 292, 287, 282, 278, 273, 269, 265, 261, 512, 505, 497, 489, 482, 475, 468, 461, 454, 447, 441, 435, 428, 422, 417, 411, 405, 399, 394, 389, 383, 378, 373, 368, 364, 359, 354, 350, 345, 341, 337, 332, 328, 324, 320, 316, 312, 309, 305, 301, 298, 294, 291, 287, 284, 281, 278, 274, 271, 268, 265, 262, 259, 257, 507, 501, 496, 491, 485, 480, 475, 470, 465, 460, 456, 451, 446, 442, 437, 433, 428, 424, 420, 416, 412, 408, 404, 400, 396, 392, 388, 385, 381, 377, 374, 370, 367, 363, 360, 357, 354, 350, 347, 344, 341, 338, 335, 332, 329, 326, 323, 320, 318, 315, 312, 310, 307, 304, 302, 299, 297, 294, 292, 289, 287, 285, 282, 280, 278, 275, 273, 271, 269, 267, 265, 263, 261, 259];\nvar shg_table = [9, 11, 12, 13, 13, 14, 14, 15, 15, 15, 15, 16, 16, 16, 16, 17, 17, 17, 17, 17, 17, 17, 18, 18, 18, 18, 18, 18, 18, 18, 18, 19, 19, 19, 19, 19, 19, 19, 19, 19, 19, 19, 19, 19, 19, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 22, 22, 22, 22, 22, 22, 22, 22, 22, 22, 22, 22, 22, 22, 22, 22, 22, 22, 22, 22, 22, 22, 22, 22, 22, 22, 22, 22, 22, 22, 22, 22, 22, 22, 22, 22, 22, 23, 23, 23, 23, 23, 23, 23, 23, 23, 23, 23, 23, 23, 23, 23, 23, 23, 23, 23, 23, 23, 23, 23, 23, 23, 23, 23, 23, 23, 23, 23, 23, 23, 23, 23, 23, 23, 23, 23, 23, 23, 23, 23, 23, 23, 23, 23, 23, 23, 23, 23, 23, 23, 23, 24, 24, 24, 24, 24, 24, 24, 24, 24, 24, 24, 24, 24, 24, 24, 24, 24, 24, 24, 24, 24, 24, 24, 24, 24, 24, 24, 24, 24, 24, 24, 24, 24, 24, 24, 24, 24, 24, 24, 24, 24, 24, 24, 24, 24, 24, 24, 24, 24, 24, 24, 24, 24, 24, 24, 24, 24, 24, 24, 24, 24, 24, 24, 24, 24, 24, 24, 24, 24, 24, 24, 24, 24, 24];\n\nfunction processImage(img, canvas, radius, blurAlphaChannel) {\n  if (typeof img == 'string') {\n    var img = document.getElementById(img);\n  } else if (typeof HTMLImageElement !== 'undefined' && !img instanceof HTMLImageElement) {\n    return;\n  }\n\n  var w = img.naturalWidth;\n  var h = img.naturalHeight;\n\n  if (typeof canvas == 'string') {\n    var canvas = document.getElementById(canvas);\n  } else if (typeof HTMLCanvasElement !== 'undefined' && !canvas instanceof HTMLCanvasElement) {\n    return;\n  }\n\n  canvas.style.width = w + 'px';\n  canvas.style.height = h + 'px';\n  canvas.width = w;\n  canvas.height = h;\n  var context = canvas.getContext('2d');\n  context.clearRect(0, 0, w, h);\n  context.drawImage(img, 0, 0);\n  if (isNaN(radius) || radius < 1) return;\n  if (blurAlphaChannel) processCanvasRGBA(canvas, 0, 0, w, h, radius);else processCanvasRGB(canvas, 0, 0, w, h, radius);\n}\n\nfunction getImageDataFromCanvas(canvas, top_x, top_y, width, height) {\n  if (typeof canvas == 'string') var canvas = document.getElementById(canvas);else if (typeof HTMLCanvasElement !== 'undefined' && !canvas instanceof HTMLCanvasElement) return;\n  var context = canvas.getContext('2d');\n  var imageData;\n\n  try {\n    try {\n      imageData = context.getImageData(top_x, top_y, width, height);\n    } catch (e) {\n      throw new Error(\"unable to access local image data: \" + e);\n      return;\n    }\n  } catch (e) {\n    throw new Error(\"unable to access image data: \" + e);\n  }\n\n  return imageData;\n}\n\nfunction processCanvasRGBA(canvas, top_x, top_y, width, height, radius) {\n  if (isNaN(radius) || radius < 1) return;\n  radius |= 0;\n  var imageData = getImageDataFromCanvas(canvas, top_x, top_y, width, height);\n  imageData = processImageDataRGBA(imageData, top_x, top_y, width, height, radius);\n  canvas.getContext('2d').putImageData(imageData, top_x, top_y);\n}\n\nfunction processImageDataRGBA(imageData, top_x, top_y, width, height, radius) {\n  var pixels = imageData.data;\n  var x, y, i, p, yp, yi, yw, r_sum, g_sum, b_sum, a_sum, r_out_sum, g_out_sum, b_out_sum, a_out_sum, r_in_sum, g_in_sum, b_in_sum, a_in_sum, pr, pg, pb, pa, rbs;\n  var div = radius + radius + 1;\n  var w4 = width << 2;\n  var widthMinus1 = width - 1;\n  var heightMinus1 = height - 1;\n  var radiusPlus1 = radius + 1;\n  var sumFactor = radiusPlus1 * (radiusPlus1 + 1) / 2;\n  var stackStart = new BlurStack();\n  var stack = stackStart;\n\n  for (i = 1; i < div; i++) {\n    stack = stack.next = new BlurStack();\n    if (i == radiusPlus1) var stackEnd = stack;\n  }\n\n  stack.next = stackStart;\n  var stackIn = null;\n  var stackOut = null;\n  yw = yi = 0;\n  var mul_sum = mul_table[radius];\n  var shg_sum = shg_table[radius];\n\n  for (y = 0; y < height; y++) {\n    r_in_sum = g_in_sum = b_in_sum = a_in_sum = r_sum = g_sum = b_sum = a_sum = 0;\n    r_out_sum = radiusPlus1 * (pr = pixels[yi]);\n    g_out_sum = radiusPlus1 * (pg = pixels[yi + 1]);\n    b_out_sum = radiusPlus1 * (pb = pixels[yi + 2]);\n    a_out_sum = radiusPlus1 * (pa = pixels[yi + 3]);\n    r_sum += sumFactor * pr;\n    g_sum += sumFactor * pg;\n    b_sum += sumFactor * pb;\n    a_sum += sumFactor * pa;\n    stack = stackStart;\n\n    for (i = 0; i < radiusPlus1; i++) {\n      stack.r = pr;\n      stack.g = pg;\n      stack.b = pb;\n      stack.a = pa;\n      stack = stack.next;\n    }\n\n    for (i = 1; i < radiusPlus1; i++) {\n      p = yi + ((widthMinus1 < i ? widthMinus1 : i) << 2);\n      r_sum += (stack.r = pr = pixels[p]) * (rbs = radiusPlus1 - i);\n      g_sum += (stack.g = pg = pixels[p + 1]) * rbs;\n      b_sum += (stack.b = pb = pixels[p + 2]) * rbs;\n      a_sum += (stack.a = pa = pixels[p + 3]) * rbs;\n      r_in_sum += pr;\n      g_in_sum += pg;\n      b_in_sum += pb;\n      a_in_sum += pa;\n      stack = stack.next;\n    }\n\n    stackIn = stackStart;\n    stackOut = stackEnd;\n\n    for (x = 0; x < width; x++) {\n      pixels[yi + 3] = pa = a_sum * mul_sum >> shg_sum;\n\n      if (pa != 0) {\n        pa = 255 / pa;\n        pixels[yi] = (r_sum * mul_sum >> shg_sum) * pa;\n        pixels[yi + 1] = (g_sum * mul_sum >> shg_sum) * pa;\n        pixels[yi + 2] = (b_sum * mul_sum >> shg_sum) * pa;\n      } else {\n        pixels[yi] = pixels[yi + 1] = pixels[yi + 2] = 0;\n      }\n\n      r_sum -= r_out_sum;\n      g_sum -= g_out_sum;\n      b_sum -= b_out_sum;\n      a_sum -= a_out_sum;\n      r_out_sum -= stackIn.r;\n      g_out_sum -= stackIn.g;\n      b_out_sum -= stackIn.b;\n      a_out_sum -= stackIn.a;\n      p = yw + ((p = x + radius + 1) < widthMinus1 ? p : widthMinus1) << 2;\n      r_in_sum += stackIn.r = pixels[p];\n      g_in_sum += stackIn.g = pixels[p + 1];\n      b_in_sum += stackIn.b = pixels[p + 2];\n      a_in_sum += stackIn.a = pixels[p + 3];\n      r_sum += r_in_sum;\n      g_sum += g_in_sum;\n      b_sum += b_in_sum;\n      a_sum += a_in_sum;\n      stackIn = stackIn.next;\n      r_out_sum += pr = stackOut.r;\n      g_out_sum += pg = stackOut.g;\n      b_out_sum += pb = stackOut.b;\n      a_out_sum += pa = stackOut.a;\n      r_in_sum -= pr;\n      g_in_sum -= pg;\n      b_in_sum -= pb;\n      a_in_sum -= pa;\n      stackOut = stackOut.next;\n      yi += 4;\n    }\n\n    yw += width;\n  }\n\n  for (x = 0; x < width; x++) {\n    g_in_sum = b_in_sum = a_in_sum = r_in_sum = g_sum = b_sum = a_sum = r_sum = 0;\n    yi = x << 2;\n    r_out_sum = radiusPlus1 * (pr = pixels[yi]);\n    g_out_sum = radiusPlus1 * (pg = pixels[yi + 1]);\n    b_out_sum = radiusPlus1 * (pb = pixels[yi + 2]);\n    a_out_sum = radiusPlus1 * (pa = pixels[yi + 3]);\n    r_sum += sumFactor * pr;\n    g_sum += sumFactor * pg;\n    b_sum += sumFactor * pb;\n    a_sum += sumFactor * pa;\n    stack = stackStart;\n\n    for (i = 0; i < radiusPlus1; i++) {\n      stack.r = pr;\n      stack.g = pg;\n      stack.b = pb;\n      stack.a = pa;\n      stack = stack.next;\n    }\n\n    yp = width;\n\n    for (i = 1; i <= radius; i++) {\n      yi = yp + x << 2;\n      r_sum += (stack.r = pr = pixels[yi]) * (rbs = radiusPlus1 - i);\n      g_sum += (stack.g = pg = pixels[yi + 1]) * rbs;\n      b_sum += (stack.b = pb = pixels[yi + 2]) * rbs;\n      a_sum += (stack.a = pa = pixels[yi + 3]) * rbs;\n      r_in_sum += pr;\n      g_in_sum += pg;\n      b_in_sum += pb;\n      a_in_sum += pa;\n      stack = stack.next;\n\n      if (i < heightMinus1) {\n        yp += width;\n      }\n    }\n\n    yi = x;\n    stackIn = stackStart;\n    stackOut = stackEnd;\n\n    for (y = 0; y < height; y++) {\n      p = yi << 2;\n      pixels[p + 3] = pa = a_sum * mul_sum >> shg_sum;\n\n      if (pa > 0) {\n        pa = 255 / pa;\n        pixels[p] = (r_sum * mul_sum >> shg_sum) * pa;\n        pixels[p + 1] = (g_sum * mul_sum >> shg_sum) * pa;\n        pixels[p + 2] = (b_sum * mul_sum >> shg_sum) * pa;\n      } else {\n        pixels[p] = pixels[p + 1] = pixels[p + 2] = 0;\n      }\n\n      r_sum -= r_out_sum;\n      g_sum -= g_out_sum;\n      b_sum -= b_out_sum;\n      a_sum -= a_out_sum;\n      r_out_sum -= stackIn.r;\n      g_out_sum -= stackIn.g;\n      b_out_sum -= stackIn.b;\n      a_out_sum -= stackIn.a;\n      p = x + ((p = y + radiusPlus1) < heightMinus1 ? p : heightMinus1) * width << 2;\n      r_sum += r_in_sum += stackIn.r = pixels[p];\n      g_sum += g_in_sum += stackIn.g = pixels[p + 1];\n      b_sum += b_in_sum += stackIn.b = pixels[p + 2];\n      a_sum += a_in_sum += stackIn.a = pixels[p + 3];\n      stackIn = stackIn.next;\n      r_out_sum += pr = stackOut.r;\n      g_out_sum += pg = stackOut.g;\n      b_out_sum += pb = stackOut.b;\n      a_out_sum += pa = stackOut.a;\n      r_in_sum -= pr;\n      g_in_sum -= pg;\n      b_in_sum -= pb;\n      a_in_sum -= pa;\n      stackOut = stackOut.next;\n      yi += width;\n    }\n  }\n\n  return imageData;\n}\n\nfunction processCanvasRGB(canvas, top_x, top_y, width, height, radius) {\n  if (isNaN(radius) || radius < 1) return;\n  radius |= 0;\n  var imageData = getImageDataFromCanvas(canvas, top_x, top_y, width, height);\n  imageData = processImageDataRGB(imageData, top_x, top_y, width, height, radius);\n  canvas.getContext('2d').putImageData(imageData, top_x, top_y);\n}\n\nfunction processImageDataRGB(imageData, top_x, top_y, width, height, radius) {\n  var pixels = imageData.data;\n  var x, y, i, p, yp, yi, yw, r_sum, g_sum, b_sum, r_out_sum, g_out_sum, b_out_sum, r_in_sum, g_in_sum, b_in_sum, pr, pg, pb, rbs;\n  var div = radius + radius + 1;\n  var w4 = width << 2;\n  var widthMinus1 = width - 1;\n  var heightMinus1 = height - 1;\n  var radiusPlus1 = radius + 1;\n  var sumFactor = radiusPlus1 * (radiusPlus1 + 1) / 2;\n  var stackStart = new BlurStack();\n  var stack = stackStart;\n\n  for (i = 1; i < div; i++) {\n    stack = stack.next = new BlurStack();\n    if (i == radiusPlus1) var stackEnd = stack;\n  }\n\n  stack.next = stackStart;\n  var stackIn = null;\n  var stackOut = null;\n  yw = yi = 0;\n  var mul_sum = mul_table[radius];\n  var shg_sum = shg_table[radius];\n\n  for (y = 0; y < height; y++) {\n    r_in_sum = g_in_sum = b_in_sum = r_sum = g_sum = b_sum = 0;\n    r_out_sum = radiusPlus1 * (pr = pixels[yi]);\n    g_out_sum = radiusPlus1 * (pg = pixels[yi + 1]);\n    b_out_sum = radiusPlus1 * (pb = pixels[yi + 2]);\n    r_sum += sumFactor * pr;\n    g_sum += sumFactor * pg;\n    b_sum += sumFactor * pb;\n    stack = stackStart;\n\n    for (i = 0; i < radiusPlus1; i++) {\n      stack.r = pr;\n      stack.g = pg;\n      stack.b = pb;\n      stack = stack.next;\n    }\n\n    for (i = 1; i < radiusPlus1; i++) {\n      p = yi + ((widthMinus1 < i ? widthMinus1 : i) << 2);\n      r_sum += (stack.r = pr = pixels[p]) * (rbs = radiusPlus1 - i);\n      g_sum += (stack.g = pg = pixels[p + 1]) * rbs;\n      b_sum += (stack.b = pb = pixels[p + 2]) * rbs;\n      r_in_sum += pr;\n      g_in_sum += pg;\n      b_in_sum += pb;\n      stack = stack.next;\n    }\n\n    stackIn = stackStart;\n    stackOut = stackEnd;\n\n    for (x = 0; x < width; x++) {\n      pixels[yi] = r_sum * mul_sum >> shg_sum;\n      pixels[yi + 1] = g_sum * mul_sum >> shg_sum;\n      pixels[yi + 2] = b_sum * mul_sum >> shg_sum;\n      r_sum -= r_out_sum;\n      g_sum -= g_out_sum;\n      b_sum -= b_out_sum;\n      r_out_sum -= stackIn.r;\n      g_out_sum -= stackIn.g;\n      b_out_sum -= stackIn.b;\n      p = yw + ((p = x + radius + 1) < widthMinus1 ? p : widthMinus1) << 2;\n      r_in_sum += stackIn.r = pixels[p];\n      g_in_sum += stackIn.g = pixels[p + 1];\n      b_in_sum += stackIn.b = pixels[p + 2];\n      r_sum += r_in_sum;\n      g_sum += g_in_sum;\n      b_sum += b_in_sum;\n      stackIn = stackIn.next;\n      r_out_sum += pr = stackOut.r;\n      g_out_sum += pg = stackOut.g;\n      b_out_sum += pb = stackOut.b;\n      r_in_sum -= pr;\n      g_in_sum -= pg;\n      b_in_sum -= pb;\n      stackOut = stackOut.next;\n      yi += 4;\n    }\n\n    yw += width;\n  }\n\n  for (x = 0; x < width; x++) {\n    g_in_sum = b_in_sum = r_in_sum = g_sum = b_sum = r_sum = 0;\n    yi = x << 2;\n    r_out_sum = radiusPlus1 * (pr = pixels[yi]);\n    g_out_sum = radiusPlus1 * (pg = pixels[yi + 1]);\n    b_out_sum = radiusPlus1 * (pb = pixels[yi + 2]);\n    r_sum += sumFactor * pr;\n    g_sum += sumFactor * pg;\n    b_sum += sumFactor * pb;\n    stack = stackStart;\n\n    for (i = 0; i < radiusPlus1; i++) {\n      stack.r = pr;\n      stack.g = pg;\n      stack.b = pb;\n      stack = stack.next;\n    }\n\n    yp = width;\n\n    for (i = 1; i <= radius; i++) {\n      yi = yp + x << 2;\n      r_sum += (stack.r = pr = pixels[yi]) * (rbs = radiusPlus1 - i);\n      g_sum += (stack.g = pg = pixels[yi + 1]) * rbs;\n      b_sum += (stack.b = pb = pixels[yi + 2]) * rbs;\n      r_in_sum += pr;\n      g_in_sum += pg;\n      b_in_sum += pb;\n      stack = stack.next;\n\n      if (i < heightMinus1) {\n        yp += width;\n      }\n    }\n\n    yi = x;\n    stackIn = stackStart;\n    stackOut = stackEnd;\n\n    for (y = 0; y < height; y++) {\n      p = yi << 2;\n      pixels[p] = r_sum * mul_sum >> shg_sum;\n      pixels[p + 1] = g_sum * mul_sum >> shg_sum;\n      pixels[p + 2] = b_sum * mul_sum >> shg_sum;\n      r_sum -= r_out_sum;\n      g_sum -= g_out_sum;\n      b_sum -= b_out_sum;\n      r_out_sum -= stackIn.r;\n      g_out_sum -= stackIn.g;\n      b_out_sum -= stackIn.b;\n      p = x + ((p = y + radiusPlus1) < heightMinus1 ? p : heightMinus1) * width << 2;\n      r_sum += r_in_sum += stackIn.r = pixels[p];\n      g_sum += g_in_sum += stackIn.g = pixels[p + 1];\n      b_sum += b_in_sum += stackIn.b = pixels[p + 2];\n      stackIn = stackIn.next;\n      r_out_sum += pr = stackOut.r;\n      g_out_sum += pg = stackOut.g;\n      b_out_sum += pb = stackOut.b;\n      r_in_sum -= pr;\n      g_in_sum -= pg;\n      b_in_sum -= pb;\n      stackOut = stackOut.next;\n      yi += width;\n    }\n  }\n\n  return imageData;\n}\n\nfunction BlurStack() {\n  this.r = 0;\n  this.g = 0;\n  this.b = 0;\n  this.a = 0;\n  this.next = null;\n}\n\nmodule.exports = {\n  image: processImage,\n  canvasRGBA: processCanvasRGBA,\n  canvasRGB: processCanvasRGB,\n  imageDataRGBA: processImageDataRGBA,\n  imageDataRGB: processImageDataRGB\n};","!function (t, e) {\n  \"object\" == typeof exports && \"undefined\" != typeof module ? module.exports = e(require(\"rgbcolor\"), require(\"stackblur-canvas\")) : \"function\" == typeof define && define.amd ? define([\"rgbcolor\", \"stackblur-canvas\"], e) : t.canvg = e(t.RGBColor, t.StackBlur);\n}(this, function (m, d) {\n  \"use strict\";\n\n  var t;\n  return m = m && m.hasOwnProperty(\"default\") ? m.default : m, d = d && d.hasOwnProperty(\"default\") ? d.default : d, function (t) {\n    var u;\n    t.exports;\n    (u = window).DOMParser = window.DOMParser;\n\n    function p() {\n      return document.createElement(\"canvas\");\n    }\n\n    var f,\n        c = function c(t, e, i) {\n      if (null != t || null != e || null != i) {\n        var n = function (s) {\n          var A = {\n            opts: s,\n            FRAMERATE: 30,\n            MAX_VIRTUAL_PIXELS: 3e4,\n            rootEmSize: 12,\n            emSize: 12,\n            log: function log(t) {}\n          };\n          1 == A.opts.log && \"undefined\" != typeof console && (A.log = function (t) {\n            console.log(t);\n          });\n          A.init = function (t) {\n            var e = 0;\n            A.UniqueId = function () {\n              return \"canvg\" + ++e;\n            }, A.Definitions = {}, A.Styles = {}, A.StylesSpecificity = {}, A.Animations = [], A.Images = [], A.ctx = t, A.ViewPort = new function () {\n              this.viewPorts = [], this.Clear = function () {\n                this.viewPorts = [];\n              }, this.SetCurrent = function (t, e) {\n                this.viewPorts.push({\n                  width: t,\n                  height: e\n                });\n              }, this.RemoveCurrent = function () {\n                this.viewPorts.pop();\n              }, this.Current = function () {\n                return this.viewPorts[this.viewPorts.length - 1];\n              }, this.width = function () {\n                return this.Current().width;\n              }, this.height = function () {\n                return this.Current().height;\n              }, this.ComputeSize = function (t) {\n                return null != t && \"number\" == typeof t ? t : \"x\" == t ? this.width() : \"y\" == t ? this.height() : Math.sqrt(Math.pow(this.width(), 2) + Math.pow(this.height(), 2)) / Math.sqrt(2);\n              };\n            }();\n          }, A.init(), A.ImagesLoaded = function () {\n            for (var t = 0; t < A.Images.length; t++) {\n              if (!A.Images[t].loaded) return !1;\n            }\n\n            return !0;\n          }, A.trim = function (t) {\n            return t.replace(/^\\s+|\\s+$/g, \"\");\n          }, A.compressSpaces = function (t) {\n            return t.replace(/(?!\\u3000)\\s+/gm, \" \");\n          }, A.ajax = function (t) {\n            var e;\n            return (e = u.XMLHttpRequest ? new u.XMLHttpRequest() : new ActiveXObject(\"Microsoft.XMLHTTP\")) ? (e.open(\"GET\", t, !1), e.send(null), e.responseText) : null;\n          }, A.parseXml = function (e) {\n            if (\"undefined\" != typeof Windows && void 0 !== Windows.Data && void 0 !== Windows.Data.Xml) {\n              var t = new Windows.Data.Xml.Dom.XmlDocument(),\n                  i = new Windows.Data.Xml.Dom.XmlLoadSettings();\n              return i.prohibitDtd = !1, t.loadXml(e, i), t;\n            }\n\n            if (!u.DOMParser) {\n              e = e.replace(/<!DOCTYPE svg[^>]*>/, \"\");\n              var t = new ActiveXObject(\"Microsoft.XMLDOM\");\n              return t.async = \"false\", t.loadXML(e), t;\n            }\n\n            try {\n              var n = s.xmldom ? new u.DOMParser(s.xmldom) : new u.DOMParser();\n              return n.parseFromString(e, \"image/svg+xml\");\n            } catch (t) {\n              return (n = s.xmldom ? new u.DOMParser(s.xmldom) : new u.DOMParser()).parseFromString(e, \"text/xml\");\n            }\n          }, A.Property = function (t, e) {\n            this.name = t, this.value = e;\n          }, A.Property.prototype.getValue = function () {\n            return this.value;\n          }, A.Property.prototype.hasValue = function () {\n            return null != this.value && \"\" !== this.value;\n          }, A.Property.prototype.numValue = function () {\n            if (!this.hasValue()) return 0;\n            var t = parseFloat(this.value);\n            return (this.value + \"\").match(/%$/) && (t /= 100), t;\n          }, A.Property.prototype.valueOrDefault = function (t) {\n            return this.hasValue() ? this.value : t;\n          }, A.Property.prototype.numValueOrDefault = function (t) {\n            return this.hasValue() ? this.numValue() : t;\n          }, A.Property.prototype.addOpacity = function (t) {\n            var e = this.value;\n\n            if (null != t.value && \"\" != t.value && \"string\" == typeof this.value) {\n              var i = new m(this.value);\n              i.ok && (e = \"rgba(\" + i.r + \", \" + i.g + \", \" + i.b + \", \" + t.numValue() + \")\");\n            }\n\n            return new A.Property(this.name, e);\n          }, A.Property.prototype.getDefinition = function () {\n            var t = this.value.match(/#([^\\)'\"]+)/);\n            return t && (t = t[1]), t || (t = this.value), A.Definitions[t];\n          }, A.Property.prototype.isUrlDefinition = function () {\n            return 0 == this.value.indexOf(\"url(\");\n          }, A.Property.prototype.getFillStyleDefinition = function (t, e) {\n            var i = this.getDefinition();\n            if (null != i && i.createGradient) return i.createGradient(A.ctx, t, e);\n\n            if (null != i && i.createPattern) {\n              if (i.getHrefAttribute().hasValue()) {\n                var n = i.attribute(\"patternTransform\");\n                i = i.getHrefAttribute().getDefinition(), n.hasValue() && (i.attribute(\"patternTransform\", !0).value = n.value);\n              }\n\n              return i.createPattern(A.ctx, t);\n            }\n\n            return null;\n          }, A.Property.prototype.getDPI = function (t) {\n            return 96;\n          }, A.Property.prototype.getREM = function (t) {\n            return A.rootEmSize;\n          }, A.Property.prototype.getEM = function (t) {\n            return A.emSize;\n          }, A.Property.prototype.getUnits = function () {\n            var t = this.value + \"\";\n            return t.replace(/[0-9\\.\\-]/g, \"\");\n          }, A.Property.prototype.isPixels = function () {\n            if (!this.hasValue()) return !1;\n            var t = this.value + \"\";\n            return !!t.match(/px$/) || !!t.match(/^[0-9]+$/);\n          }, A.Property.prototype.toPixels = function (t, e) {\n            if (!this.hasValue()) return 0;\n            var i = this.value + \"\";\n            if (i.match(/rem$/)) return this.numValue() * this.getREM(t);\n            if (i.match(/em$/)) return this.numValue() * this.getEM(t);\n            if (i.match(/ex$/)) return this.numValue() * this.getEM(t) / 2;\n            if (i.match(/px$/)) return this.numValue();\n            if (i.match(/pt$/)) return this.numValue() * this.getDPI(t) * (1 / 72);\n            if (i.match(/pc$/)) return 15 * this.numValue();\n            if (i.match(/cm$/)) return this.numValue() * this.getDPI(t) / 2.54;\n            if (i.match(/mm$/)) return this.numValue() * this.getDPI(t) / 25.4;\n            if (i.match(/in$/)) return this.numValue() * this.getDPI(t);\n            if (i.match(/%$/)) return this.numValue() * A.ViewPort.ComputeSize(t);\n            var n = this.numValue();\n            return e && n < 1 ? n * A.ViewPort.ComputeSize(t) : n;\n          }, A.Property.prototype.toMilliseconds = function () {\n            if (!this.hasValue()) return 0;\n            var t = this.value + \"\";\n            return t.match(/s$/) ? 1e3 * this.numValue() : (t.match(/ms$/), this.numValue());\n          }, A.Property.prototype.toRadians = function () {\n            if (!this.hasValue()) return 0;\n            var t = this.value + \"\";\n            return t.match(/deg$/) ? this.numValue() * (Math.PI / 180) : t.match(/grad$/) ? this.numValue() * (Math.PI / 200) : t.match(/rad$/) ? this.numValue() : this.numValue() * (Math.PI / 180);\n          };\n          var t = {\n            baseline: \"alphabetic\",\n            \"before-edge\": \"top\",\n            \"text-before-edge\": \"top\",\n            middle: \"middle\",\n            central: \"middle\",\n            \"after-edge\": \"bottom\",\n            \"text-after-edge\": \"bottom\",\n            ideographic: \"ideographic\",\n            alphabetic: \"alphabetic\",\n            hanging: \"hanging\",\n            mathematical: \"alphabetic\"\n          };\n          return A.Property.prototype.toTextBaseline = function () {\n            return this.hasValue() ? t[this.value] : null;\n          }, A.Font = new function () {\n            this.Styles = \"normal|italic|oblique|inherit\", this.Variants = \"normal|small-caps|inherit\", this.Weights = \"normal|bold|bolder|lighter|100|200|300|400|500|600|700|800|900|inherit\", this.CreateFont = function (t, e, i, n, s, a) {\n              var r = null != a ? this.Parse(a) : this.CreateFont(\"\", \"\", \"\", \"\", \"\", A.ctx.font);\n              return {\n                fontFamily: s = s || r.fontFamily,\n                fontSize: n || r.fontSize,\n                fontStyle: t || r.fontStyle,\n                fontWeight: i || r.fontWeight,\n                fontVariant: e || r.fontVariant,\n                toString: function toString() {\n                  return [this.fontStyle, this.fontVariant, this.fontWeight, this.fontSize, this.fontFamily].join(\" \");\n                }\n              };\n            };\n            var r = this;\n\n            this.Parse = function (t) {\n              for (var e = {}, i = A.trim(A.compressSpaces(t || \"\")).split(\" \"), n = {\n                fontSize: !1,\n                fontStyle: !1,\n                fontWeight: !1,\n                fontVariant: !1\n              }, s = \"\", a = 0; a < i.length; a++) {\n                n.fontStyle || -1 == r.Styles.indexOf(i[a]) ? n.fontVariant || -1 == r.Variants.indexOf(i[a]) ? n.fontWeight || -1 == r.Weights.indexOf(i[a]) ? n.fontSize ? \"inherit\" != i[a] && (s += i[a]) : (\"inherit\" != i[a] && (e.fontSize = i[a].split(\"/\")[0]), n.fontStyle = n.fontVariant = n.fontWeight = n.fontSize = !0) : (\"inherit\" != i[a] && (e.fontWeight = i[a]), n.fontStyle = n.fontVariant = n.fontWeight = !0) : (\"inherit\" != i[a] && (e.fontVariant = i[a]), n.fontStyle = n.fontVariant = !0) : (\"inherit\" != i[a] && (e.fontStyle = i[a]), n.fontStyle = !0);\n              }\n\n              return \"\" != s && (e.fontFamily = s), e;\n            };\n          }(), A.ToNumberArray = function (t) {\n            for (var e = A.trim(A.compressSpaces((t || \"\").replace(/,/g, \" \"))).split(\" \"), i = 0; i < e.length; i++) {\n              e[i] = parseFloat(e[i]);\n            }\n\n            return e;\n          }, A.Point = function (t, e) {\n            this.x = t, this.y = e;\n          }, A.Point.prototype.angleTo = function (t) {\n            return Math.atan2(t.y - this.y, t.x - this.x);\n          }, A.Point.prototype.applyTransform = function (t) {\n            var e = this.x * t[0] + this.y * t[2] + t[4],\n                i = this.x * t[1] + this.y * t[3] + t[5];\n            this.x = e, this.y = i;\n          }, A.CreatePoint = function (t) {\n            var e = A.ToNumberArray(t);\n            return new A.Point(e[0], e[1]);\n          }, A.CreatePath = function (t) {\n            for (var e = A.ToNumberArray(t), i = [], n = 0; n < e.length; n += 2) {\n              i.push(new A.Point(e[n], e[n + 1]));\n            }\n\n            return i;\n          }, A.BoundingBox = function (t, e, i, n) {\n            this.x1 = Number.NaN, this.y1 = Number.NaN, this.x2 = Number.NaN, this.y2 = Number.NaN, this.x = function () {\n              return this.x1;\n            }, this.y = function () {\n              return this.y1;\n            }, this.width = function () {\n              return this.x2 - this.x1;\n            }, this.height = function () {\n              return this.y2 - this.y1;\n            }, this.addPoint = function (t, e) {\n              null != t && ((isNaN(this.x1) || isNaN(this.x2)) && (this.x1 = t, this.x2 = t), t < this.x1 && (this.x1 = t), t > this.x2 && (this.x2 = t)), null != e && ((isNaN(this.y1) || isNaN(this.y2)) && (this.y1 = e, this.y2 = e), e < this.y1 && (this.y1 = e), e > this.y2 && (this.y2 = e));\n            }, this.addX = function (t) {\n              this.addPoint(t, null);\n            }, this.addY = function (t) {\n              this.addPoint(null, t);\n            }, this.addBoundingBox = function (t) {\n              this.addPoint(t.x1, t.y1), this.addPoint(t.x2, t.y2);\n            }, this.addQuadraticCurve = function (t, e, i, n, s, a) {\n              var r = t + 2 / 3 * (i - t),\n                  o = e + 2 / 3 * (n - e),\n                  l = r + 1 / 3 * (s - t),\n                  h = o + 1 / 3 * (a - e);\n              this.addBezierCurve(t, e, r, l, o, h, s, a);\n            }, this.addBezierCurve = function (t, e, i, n, s, a, r, o) {\n              var l = [t, e],\n                  h = [i, n],\n                  u = [s, a],\n                  c = [r, o];\n              this.addPoint(l[0], l[1]), this.addPoint(c[0], c[1]);\n\n              for (var f = 0; f <= 1; f++) {\n                var m = function m(t) {\n                  return Math.pow(1 - t, 3) * l[f] + 3 * Math.pow(1 - t, 2) * t * h[f] + 3 * (1 - t) * Math.pow(t, 2) * u[f] + Math.pow(t, 3) * c[f];\n                },\n                    p = 6 * l[f] - 12 * h[f] + 6 * u[f],\n                    d = -3 * l[f] + 9 * h[f] - 9 * u[f] + 3 * c[f],\n                    y = 3 * h[f] - 3 * l[f];\n\n                if (0 != d) {\n                  var v = Math.pow(p, 2) - 4 * y * d;\n\n                  if (!(v < 0)) {\n                    var g = (-p + Math.sqrt(v)) / (2 * d);\n                    0 < g && g < 1 && (0 == f && this.addX(m(g)), 1 == f && this.addY(m(g)));\n                    var x = (-p - Math.sqrt(v)) / (2 * d);\n                    0 < x && x < 1 && (0 == f && this.addX(m(x)), 1 == f && this.addY(m(x)));\n                  }\n                } else {\n                  if (0 == p) continue;\n                  var b = -y / p;\n                  0 < b && b < 1 && (0 == f && this.addX(m(b)), 1 == f && this.addY(m(b)));\n                }\n              }\n            }, this.isPointInBox = function (t, e) {\n              return this.x1 <= t && t <= this.x2 && this.y1 <= e && e <= this.y2;\n            }, this.addPoint(t, e), this.addPoint(i, n);\n          }, A.Transform = function (t) {\n            var e = this;\n            this.Type = {}, this.Type.translate = function (t) {\n              this.p = A.CreatePoint(t), this.apply = function (t) {\n                t.translate(this.p.x || 0, this.p.y || 0);\n              }, this.unapply = function (t) {\n                t.translate(-1 * this.p.x || 0, -1 * this.p.y || 0);\n              }, this.applyToPoint = function (t) {\n                t.applyTransform([1, 0, 0, 1, this.p.x || 0, this.p.y || 0]);\n              };\n            }, this.Type.rotate = function (t) {\n              var e = A.ToNumberArray(t);\n              this.angle = new A.Property(\"angle\", e[0]), this.cx = e[1] || 0, this.cy = e[2] || 0, this.apply = function (t) {\n                t.translate(this.cx, this.cy), t.rotate(this.angle.toRadians()), t.translate(-this.cx, -this.cy);\n              }, this.unapply = function (t) {\n                t.translate(this.cx, this.cy), t.rotate(-1 * this.angle.toRadians()), t.translate(-this.cx, -this.cy);\n              }, this.applyToPoint = function (t) {\n                var e = this.angle.toRadians();\n                t.applyTransform([1, 0, 0, 1, this.p.x || 0, this.p.y || 0]), t.applyTransform([Math.cos(e), Math.sin(e), -Math.sin(e), Math.cos(e), 0, 0]), t.applyTransform([1, 0, 0, 1, -this.p.x || 0, -this.p.y || 0]);\n              };\n            }, this.Type.scale = function (t) {\n              this.p = A.CreatePoint(t), this.apply = function (t) {\n                t.scale(this.p.x || 1, this.p.y || this.p.x || 1);\n              }, this.unapply = function (t) {\n                t.scale(1 / this.p.x || 1, 1 / this.p.y || this.p.x || 1);\n              }, this.applyToPoint = function (t) {\n                t.applyTransform([this.p.x || 0, 0, 0, this.p.y || 0, 0, 0]);\n              };\n            }, this.Type.matrix = function (t) {\n              this.m = A.ToNumberArray(t), this.apply = function (t) {\n                t.transform(this.m[0], this.m[1], this.m[2], this.m[3], this.m[4], this.m[5]);\n              }, this.unapply = function (t) {\n                var e = this.m[0],\n                    i = this.m[2],\n                    n = this.m[4],\n                    s = this.m[1],\n                    a = this.m[3],\n                    r = this.m[5],\n                    o = 1 / (e * (1 * a - 0 * r) - i * (1 * s - 0 * r) + n * (0 * s - 0 * a));\n                t.transform(o * (1 * a - 0 * r), o * (0 * r - 1 * s), o * (0 * n - 1 * i), o * (1 * e - 0 * n), o * (i * r - n * a), o * (n * s - e * r));\n              }, this.applyToPoint = function (t) {\n                t.applyTransform(this.m);\n              };\n            }, this.Type.SkewBase = function (t) {\n              this.base = e.Type.matrix, this.base(t), this.angle = new A.Property(\"angle\", t);\n            }, this.Type.SkewBase.prototype = new this.Type.matrix(), this.Type.skewX = function (t) {\n              this.base = e.Type.SkewBase, this.base(t), this.m = [1, 0, Math.tan(this.angle.toRadians()), 1, 0, 0];\n            }, this.Type.skewX.prototype = new this.Type.SkewBase(), this.Type.skewY = function (t) {\n              this.base = e.Type.SkewBase, this.base(t), this.m = [1, Math.tan(this.angle.toRadians()), 0, 1, 0, 0];\n            }, this.Type.skewY.prototype = new this.Type.SkewBase(), this.transforms = [], this.apply = function (t) {\n              for (var e = 0; e < this.transforms.length; e++) {\n                this.transforms[e].apply(t);\n              }\n            }, this.unapply = function (t) {\n              for (var e = this.transforms.length - 1; 0 <= e; e--) {\n                this.transforms[e].unapply(t);\n              }\n            }, this.applyToPoint = function (t) {\n              for (var e = 0; e < this.transforms.length; e++) {\n                this.transforms[e].applyToPoint(t);\n              }\n            };\n\n            for (var i = A.trim(A.compressSpaces(t)).replace(/\\)([a-zA-Z])/g, \") $1\").replace(/\\)(\\s?,\\s?)/g, \") \").split(/\\s(?=[a-z])/), n = 0; n < i.length; n++) {\n              if (\"none\" !== i[n]) {\n                var s = A.trim(i[n].split(\"(\")[0]),\n                    a = i[n].split(\"(\")[1].replace(\")\", \"\"),\n                    r = this.Type[s];\n\n                if (void 0 !== r) {\n                  var o = new r(a);\n                  o.type = s, this.transforms.push(o);\n                }\n              }\n            }\n          }, A.AspectRatio = function (t, e, i, n, s, a, r, o, l, h) {\n            var u = (e = (e = A.compressSpaces(e)).replace(/^defer\\s/, \"\")).split(\" \")[0] || \"xMidYMid\",\n                c = e.split(\" \")[1] || \"meet\",\n                f = i / n,\n                m = s / a,\n                p = Math.min(f, m),\n                d = Math.max(f, m);\n            \"meet\" == c && (n *= p, a *= p), \"slice\" == c && (n *= d, a *= d), l = new A.Property(\"refX\", l), h = new A.Property(\"refY\", h), l.hasValue() && h.hasValue() ? t.translate(-p * l.toPixels(\"x\"), -p * h.toPixels(\"y\")) : (u.match(/^xMid/) && (\"meet\" == c && p == m || \"slice\" == c && d == m) && t.translate(i / 2 - n / 2, 0), u.match(/YMid$/) && (\"meet\" == c && p == f || \"slice\" == c && d == f) && t.translate(0, s / 2 - a / 2), u.match(/^xMax/) && (\"meet\" == c && p == m || \"slice\" == c && d == m) && t.translate(i - n, 0), u.match(/YMax$/) && (\"meet\" == c && p == f || \"slice\" == c && d == f) && t.translate(0, s - a)), \"none\" == u ? t.scale(f, m) : \"meet\" == c ? t.scale(p, p) : \"slice\" == c && t.scale(d, d), t.translate(null == r ? 0 : -r, null == o ? 0 : -o);\n          }, A.Element = {}, A.EmptyProperty = new A.Property(\"EMPTY\", \"\"), A.Element.ElementBase = function (a) {\n            this.attributes = {}, this.styles = {}, this.stylesSpecificity = {}, this.children = [], this.attribute = function (t, e) {\n              var i = this.attributes[t];\n              return null != i ? i : (1 == e && (i = new A.Property(t, \"\"), this.attributes[t] = i), i || A.EmptyProperty);\n            }, this.getHrefAttribute = function () {\n              for (var t in this.attributes) {\n                if (\"href\" == t || t.match(/:href$/)) return this.attributes[t];\n              }\n\n              return A.EmptyProperty;\n            }, this.style = function (t, e, i) {\n              var n = this.styles[t];\n              if (null != n) return n;\n              var s = this.attribute(t);\n              if (null != s && s.hasValue()) return this.styles[t] = s;\n\n              if (1 != i) {\n                var a = this.parent;\n\n                if (null != a) {\n                  var r = a.style(t);\n                  if (null != r && r.hasValue()) return r;\n                }\n              }\n\n              return 1 == e && (n = new A.Property(t, \"\"), this.styles[t] = n), n || A.EmptyProperty;\n            }, this.render = function (t) {\n              if (\"none\" != this.style(\"display\").value && \"hidden\" != this.style(\"visibility\").value) {\n                if (t.save(), this.style(\"mask\").hasValue()) {\n                  var e = this.style(\"mask\").getDefinition();\n                  null != e && e.apply(t, this);\n                } else if (this.style(\"filter\").hasValue()) {\n                  var i = this.style(\"filter\").getDefinition();\n                  null != i && i.apply(t, this);\n                } else this.setContext(t), this.renderChildren(t), this.clearContext(t);\n\n                t.restore();\n              }\n            }, this.setContext = function (t) {}, this.clearContext = function (t) {}, this.renderChildren = function (t) {\n              for (var e = 0; e < this.children.length; e++) {\n                this.children[e].render(t);\n              }\n            }, this.addChild = function (t, e) {\n              var i = t;\n              e && (i = A.CreateElement(t)), i.parent = this, \"title\" != i.type && this.children.push(i);\n            }, this.addStylesFromStyleDefinition = function () {\n              for (var t in A.Styles) {\n                if (\"@\" != t[0] && f(a, t)) {\n                  var e = A.Styles[t],\n                      i = A.StylesSpecificity[t];\n                  if (null != e) for (var n in e) {\n                    var s = this.stylesSpecificity[n];\n                    void 0 === s && (s = \"000\"), s < i && (this.styles[n] = e[n], this.stylesSpecificity[n] = i);\n                  }\n                }\n              }\n            };\n            var t,\n                e = new RegExp(\"^[A-Z-]+$\");\n\n            if (null != a && 1 == a.nodeType) {\n              for (var i = 0; i < a.attributes.length; i++) {\n                var n = a.attributes[i],\n                    s = (t = n.nodeName, e.test(t) ? t.toLowerCase() : t);\n                this.attributes[s] = new A.Property(s, n.value);\n              }\n\n              if (this.addStylesFromStyleDefinition(), this.attribute(\"style\").hasValue()) {\n                var r = this.attribute(\"style\").value.split(\";\");\n\n                for (i = 0; i < r.length; i++) {\n                  if (\"\" != A.trim(r[i])) {\n                    var o = r[i].split(\":\"),\n                        l = A.trim(o[0]),\n                        h = A.trim(o[1]);\n                    this.styles[l] = new A.Property(l, h);\n                  }\n                }\n              }\n\n              for (this.attribute(\"id\").hasValue() && null == A.Definitions[this.attribute(\"id\").value] && (A.Definitions[this.attribute(\"id\").value] = this), i = 0; i < a.childNodes.length; i++) {\n                var u = a.childNodes[i];\n\n                if (1 == u.nodeType && this.addChild(u, !0), this.captureTextNodes && (3 == u.nodeType || 4 == u.nodeType)) {\n                  var c = u.value || u.text || u.textContent || \"\";\n                  \"\" != A.compressSpaces(c) && this.addChild(new A.Element.tspan(u), !1);\n                }\n              }\n            }\n          }, A.Element.RenderedElementBase = function (t) {\n            this.base = A.Element.ElementBase, this.base(t), this.calculateOpacity = function () {\n              for (var t = 1, e = this; null != e;) {\n                var i = e.style(\"opacity\", !1, !0);\n                i.hasValue() && (t *= i.numValue()), e = e.parent;\n              }\n\n              return t;\n            }, this.setContext = function (t, e) {\n              if (!e) {\n                var i;\n                if (this.style(\"fill\").isUrlDefinition()) null != (i = this.style(\"fill\").getFillStyleDefinition(this, this.style(\"fill-opacity\"))) && (t.fillStyle = i);else if (this.style(\"fill\").hasValue()) {\n                  var n;\n                  \"currentColor\" == (n = this.style(\"fill\")).value && (n.value = this.style(\"color\").value), \"inherit\" != n.value && (t.fillStyle = \"none\" == n.value ? \"rgba(0,0,0,0)\" : n.value);\n                }\n                if (this.style(\"fill-opacity\").hasValue() && (n = (n = new A.Property(\"fill\", t.fillStyle)).addOpacity(this.style(\"fill-opacity\")), t.fillStyle = n.value), this.style(\"stroke\").isUrlDefinition()) null != (i = this.style(\"stroke\").getFillStyleDefinition(this, this.style(\"stroke-opacity\"))) && (t.strokeStyle = i);else if (this.style(\"stroke\").hasValue()) {\n                  var s;\n                  \"currentColor\" == (s = this.style(\"stroke\")).value && (s.value = this.style(\"color\").value), \"inherit\" != s.value && (t.strokeStyle = \"none\" == s.value ? \"rgba(0,0,0,0)\" : s.value);\n                }\n\n                if (this.style(\"stroke-opacity\").hasValue() && (s = (s = new A.Property(\"stroke\", t.strokeStyle)).addOpacity(this.style(\"stroke-opacity\")), t.strokeStyle = s.value), this.style(\"stroke-width\").hasValue()) {\n                  var a = this.style(\"stroke-width\").toPixels();\n                  t.lineWidth = 0 == a ? .001 : a;\n                }\n\n                if (this.style(\"stroke-linecap\").hasValue() && (t.lineCap = this.style(\"stroke-linecap\").value), this.style(\"stroke-linejoin\").hasValue() && (t.lineJoin = this.style(\"stroke-linejoin\").value), this.style(\"stroke-miterlimit\").hasValue() && (t.miterLimit = this.style(\"stroke-miterlimit\").value), this.style(\"paint-order\").hasValue() && (t.paintOrder = this.style(\"paint-order\").value), this.style(\"stroke-dasharray\").hasValue() && \"none\" != this.style(\"stroke-dasharray\").value) {\n                  var r = A.ToNumberArray(this.style(\"stroke-dasharray\").value);\n                  void 0 !== t.setLineDash ? t.setLineDash(r) : void 0 !== t.webkitLineDash ? t.webkitLineDash = r : void 0 === t.mozDash || 1 == r.length && 0 == r[0] || (t.mozDash = r);\n                  var o = this.style(\"stroke-dashoffset\").toPixels();\n                  void 0 !== t.lineDashOffset ? t.lineDashOffset = o : void 0 !== t.webkitLineDashOffset ? t.webkitLineDashOffset = o : void 0 !== t.mozDashOffset && (t.mozDashOffset = o);\n                }\n              }\n\n              if (void 0 !== t.font) {\n                t.font = A.Font.CreateFont(this.style(\"font-style\").value, this.style(\"font-variant\").value, this.style(\"font-weight\").value, this.style(\"font-size\").hasValue() ? this.style(\"font-size\").toPixels() + \"px\" : \"\", this.style(\"font-family\").value).toString();\n                var l = this.style(\"font-size\", !1, !1);\n                l.isPixels() && (A.emSize = l.toPixels());\n              }\n\n              if (this.style(\"transform\", !1, !0).hasValue() && new A.Transform(this.style(\"transform\", !1, !0).value).apply(t), this.style(\"clip-path\", !1, !0).hasValue()) {\n                var h = this.style(\"clip-path\", !1, !0).getDefinition();\n                null != h && h.apply(t);\n              }\n\n              t.globalAlpha = this.calculateOpacity();\n            };\n          }, A.Element.RenderedElementBase.prototype = new A.Element.ElementBase(), A.Element.PathElementBase = function (t) {\n            this.base = A.Element.RenderedElementBase, this.base(t), this.path = function (t) {\n              return null != t && t.beginPath(), new A.BoundingBox();\n            }, this.renderChildren = function (t) {\n              this.path(t), A.Mouse.checkPath(this, t), \"\" != t.fillStyle && (\"inherit\" != this.style(\"fill-rule\").valueOrDefault(\"inherit\") ? t.fill(this.style(\"fill-rule\").value) : t.fill()), \"\" != t.strokeStyle && t.stroke();\n              var e = this.getMarkers();\n\n              if (null != e) {\n                if (this.style(\"marker-start\").isUrlDefinition() && (i = this.style(\"marker-start\").getDefinition()).render(t, e[0][0], e[0][1]), this.style(\"marker-mid\").isUrlDefinition()) for (var i = this.style(\"marker-mid\").getDefinition(), n = 1; n < e.length - 1; n++) {\n                  i.render(t, e[n][0], e[n][1]);\n                }\n                this.style(\"marker-end\").isUrlDefinition() && (i = this.style(\"marker-end\").getDefinition()).render(t, e[e.length - 1][0], e[e.length - 1][1]);\n              }\n            }, this.getBoundingBox = function () {\n              return this.path();\n            }, this.getMarkers = function () {\n              return null;\n            };\n          }, A.Element.PathElementBase.prototype = new A.Element.RenderedElementBase(), A.Element.svg = function (t) {\n            this.base = A.Element.RenderedElementBase, this.base(t), this.baseClearContext = this.clearContext, this.clearContext = function (t) {\n              this.baseClearContext(t), A.ViewPort.RemoveCurrent();\n            }, this.baseSetContext = this.setContext, this.setContext = function (t) {\n              if (t.strokeStyle = \"rgba(0,0,0,0)\", t.lineCap = \"butt\", t.lineJoin = \"miter\", t.miterLimit = 4, t.canvas.style && void 0 !== t.font && void 0 !== u.getComputedStyle) {\n                t.font = u.getComputedStyle(t.canvas).getPropertyValue(\"font\");\n                var e = new A.Property(\"fontSize\", A.Font.Parse(t.font).fontSize);\n                e.hasValue() && (A.rootEmSize = A.emSize = e.toPixels(\"y\"));\n              }\n\n              this.baseSetContext(t), this.attribute(\"x\").hasValue() || (this.attribute(\"x\", !0).value = 0), this.attribute(\"y\").hasValue() || (this.attribute(\"y\", !0).value = 0), t.translate(this.attribute(\"x\").toPixels(\"x\"), this.attribute(\"y\").toPixels(\"y\"));\n              var i = A.ViewPort.width(),\n                  n = A.ViewPort.height();\n\n              if (this.attribute(\"width\").hasValue() || (this.attribute(\"width\", !0).value = \"100%\"), this.attribute(\"height\").hasValue() || (this.attribute(\"height\", !0).value = \"100%\"), void 0 === this.root) {\n                i = this.attribute(\"width\").toPixels(\"x\"), n = this.attribute(\"height\").toPixels(\"y\");\n                var s = 0,\n                    a = 0;\n                this.attribute(\"refX\").hasValue() && this.attribute(\"refY\").hasValue() && (s = -this.attribute(\"refX\").toPixels(\"x\"), a = -this.attribute(\"refY\").toPixels(\"y\")), \"visible\" != this.attribute(\"overflow\").valueOrDefault(\"hidden\") && (t.beginPath(), t.moveTo(s, a), t.lineTo(i, a), t.lineTo(i, n), t.lineTo(s, n), t.closePath(), t.clip());\n              }\n\n              if (A.ViewPort.SetCurrent(i, n), this.attribute(\"viewBox\").hasValue()) {\n                var r = A.ToNumberArray(this.attribute(\"viewBox\").value),\n                    o = r[0],\n                    l = r[1];\n                i = r[2], n = r[3], A.AspectRatio(t, this.attribute(\"preserveAspectRatio\").value, A.ViewPort.width(), i, A.ViewPort.height(), n, o, l, this.attribute(\"refX\").value, this.attribute(\"refY\").value), A.ViewPort.RemoveCurrent(), A.ViewPort.SetCurrent(r[2], r[3]);\n              }\n            };\n          }, A.Element.svg.prototype = new A.Element.RenderedElementBase(), A.Element.rect = function (t) {\n            this.base = A.Element.PathElementBase, this.base(t), this.path = function (t) {\n              var e = this.attribute(\"x\").toPixels(\"x\"),\n                  i = this.attribute(\"y\").toPixels(\"y\"),\n                  n = this.attribute(\"width\").toPixels(\"x\"),\n                  s = this.attribute(\"height\").toPixels(\"y\"),\n                  a = this.attribute(\"rx\").toPixels(\"x\"),\n                  r = this.attribute(\"ry\").toPixels(\"y\");\n\n              if (this.attribute(\"rx\").hasValue() && !this.attribute(\"ry\").hasValue() && (r = a), this.attribute(\"ry\").hasValue() && !this.attribute(\"rx\").hasValue() && (a = r), a = Math.min(a, n / 2), r = Math.min(r, s / 2), null != t) {\n                var o = (Math.sqrt(2) - 1) / 3 * 4;\n                t.beginPath(), t.moveTo(e + a, i), t.lineTo(e + n - a, i), t.bezierCurveTo(e + n - a + o * a, i, e + n, i + r - o * r, e + n, i + r), t.lineTo(e + n, i + s - r), t.bezierCurveTo(e + n, i + s - r + o * r, e + n - a + o * a, i + s, e + n - a, i + s), t.lineTo(e + a, i + s), t.bezierCurveTo(e + a - o * a, i + s, e, i + s - r + o * r, e, i + s - r), t.lineTo(e, i + r), t.bezierCurveTo(e, i + r - o * r, e + a - o * a, i, e + a, i), t.closePath();\n              }\n\n              return new A.BoundingBox(e, i, e + n, i + s);\n            };\n          }, A.Element.rect.prototype = new A.Element.PathElementBase(), A.Element.circle = function (t) {\n            this.base = A.Element.PathElementBase, this.base(t), this.path = function (t) {\n              var e = this.attribute(\"cx\").toPixels(\"x\"),\n                  i = this.attribute(\"cy\").toPixels(\"y\"),\n                  n = this.attribute(\"r\").toPixels();\n              return null != t && (t.beginPath(), t.arc(e, i, n, 0, 2 * Math.PI, !1), t.closePath()), new A.BoundingBox(e - n, i - n, e + n, i + n);\n            };\n          }, A.Element.circle.prototype = new A.Element.PathElementBase(), A.Element.ellipse = function (t) {\n            this.base = A.Element.PathElementBase, this.base(t), this.path = function (t) {\n              var e = (Math.sqrt(2) - 1) / 3 * 4,\n                  i = this.attribute(\"rx\").toPixels(\"x\"),\n                  n = this.attribute(\"ry\").toPixels(\"y\"),\n                  s = this.attribute(\"cx\").toPixels(\"x\"),\n                  a = this.attribute(\"cy\").toPixels(\"y\");\n              return null != t && (t.beginPath(), t.moveTo(s + i, a), t.bezierCurveTo(s + i, a + e * n, s + e * i, a + n, s, a + n), t.bezierCurveTo(s - e * i, a + n, s - i, a + e * n, s - i, a), t.bezierCurveTo(s - i, a - e * n, s - e * i, a - n, s, a - n), t.bezierCurveTo(s + e * i, a - n, s + i, a - e * n, s + i, a), t.closePath()), new A.BoundingBox(s - i, a - n, s + i, a + n);\n            };\n          }, A.Element.ellipse.prototype = new A.Element.PathElementBase(), A.Element.line = function (t) {\n            this.base = A.Element.PathElementBase, this.base(t), this.getPoints = function () {\n              return [new A.Point(this.attribute(\"x1\").toPixels(\"x\"), this.attribute(\"y1\").toPixels(\"y\")), new A.Point(this.attribute(\"x2\").toPixels(\"x\"), this.attribute(\"y2\").toPixels(\"y\"))];\n            }, this.path = function (t) {\n              var e = this.getPoints();\n              return null != t && (t.beginPath(), t.moveTo(e[0].x, e[0].y), t.lineTo(e[1].x, e[1].y)), new A.BoundingBox(e[0].x, e[0].y, e[1].x, e[1].y);\n            }, this.getMarkers = function () {\n              var t = this.getPoints(),\n                  e = t[0].angleTo(t[1]);\n              return [[t[0], e], [t[1], e]];\n            };\n          }, A.Element.line.prototype = new A.Element.PathElementBase(), A.Element.polyline = function (t) {\n            this.base = A.Element.PathElementBase, this.base(t), this.points = A.CreatePath(this.attribute(\"points\").value), this.path = function (t) {\n              var e = new A.BoundingBox(this.points[0].x, this.points[0].y);\n              null != t && (t.beginPath(), t.moveTo(this.points[0].x, this.points[0].y));\n\n              for (var i = 1; i < this.points.length; i++) {\n                e.addPoint(this.points[i].x, this.points[i].y), null != t && t.lineTo(this.points[i].x, this.points[i].y);\n              }\n\n              return e;\n            }, this.getMarkers = function () {\n              for (var t = [], e = 0; e < this.points.length - 1; e++) {\n                t.push([this.points[e], this.points[e].angleTo(this.points[e + 1])]);\n              }\n\n              return 0 < t.length && t.push([this.points[this.points.length - 1], t[t.length - 1][1]]), t;\n            };\n          }, A.Element.polyline.prototype = new A.Element.PathElementBase(), A.Element.polygon = function (t) {\n            this.base = A.Element.polyline, this.base(t), this.basePath = this.path, this.path = function (t) {\n              var e = this.basePath(t);\n              return null != t && (t.lineTo(this.points[0].x, this.points[0].y), t.closePath()), e;\n            };\n          }, A.Element.polygon.prototype = new A.Element.polyline(), A.Element.path = function (t) {\n            this.base = A.Element.PathElementBase, this.base(t);\n            var e = this.attribute(\"d\").value;\n            e = e.replace(/,/gm, \" \");\n\n            for (var i = 0; i < 2; i++) {\n              e = e.replace(/([MmZzLlHhVvCcSsQqTtAa])([^\\s])/gm, \"$1 $2\");\n            }\n\n            for (e = (e = e.replace(/([^\\s])([MmZzLlHhVvCcSsQqTtAa])/gm, \"$1 $2\")).replace(/([0-9])([+\\-])/gm, \"$1 $2\"), i = 0; i < 2; i++) {\n              e = e.replace(/(\\.[0-9]*)(\\.)/gm, \"$1 $2\");\n            }\n\n            e = e.replace(/([Aa](\\s+[0-9]+){3})\\s+([01])\\s*([01])/gm, \"$1 $3 $4 \"), e = A.compressSpaces(e), e = A.trim(e), this.PathParser = new function (t) {\n              this.tokens = t.split(\" \"), this.reset = function () {\n                this.i = -1, this.command = \"\", this.previousCommand = \"\", this.start = new A.Point(0, 0), this.control = new A.Point(0, 0), this.current = new A.Point(0, 0), this.points = [], this.angles = [];\n              }, this.isEnd = function () {\n                return this.i >= this.tokens.length - 1;\n              }, this.isCommandOrEnd = function () {\n                return !!this.isEnd() || null != this.tokens[this.i + 1].match(/^[A-Za-z]$/);\n              }, this.isRelativeCommand = function () {\n                switch (this.command) {\n                  case \"m\":\n                  case \"l\":\n                  case \"h\":\n                  case \"v\":\n                  case \"c\":\n                  case \"s\":\n                  case \"q\":\n                  case \"t\":\n                  case \"a\":\n                  case \"z\":\n                    return !0;\n                }\n\n                return !1;\n              }, this.getToken = function () {\n                return this.i++, this.tokens[this.i];\n              }, this.getScalar = function () {\n                return parseFloat(this.getToken());\n              }, this.nextCommand = function () {\n                this.previousCommand = this.command, this.command = this.getToken();\n              }, this.getPoint = function () {\n                var t = new A.Point(this.getScalar(), this.getScalar());\n                return this.makeAbsolute(t);\n              }, this.getAsControlPoint = function () {\n                var t = this.getPoint();\n                return this.control = t;\n              }, this.getAsCurrentPoint = function () {\n                var t = this.getPoint();\n                return this.current = t;\n              }, this.getReflectedControlPoint = function () {\n                return \"c\" != this.previousCommand.toLowerCase() && \"s\" != this.previousCommand.toLowerCase() && \"q\" != this.previousCommand.toLowerCase() && \"t\" != this.previousCommand.toLowerCase() ? this.current : new A.Point(2 * this.current.x - this.control.x, 2 * this.current.y - this.control.y);\n              }, this.makeAbsolute = function (t) {\n                return this.isRelativeCommand() && (t.x += this.current.x, t.y += this.current.y), t;\n              }, this.addMarker = function (t, e, i) {\n                null != i && 0 < this.angles.length && null == this.angles[this.angles.length - 1] && (this.angles[this.angles.length - 1] = this.points[this.points.length - 1].angleTo(i)), this.addMarkerAngle(t, null == e ? null : e.angleTo(t));\n              }, this.addMarkerAngle = function (t, e) {\n                this.points.push(t), this.angles.push(e);\n              }, this.getMarkerPoints = function () {\n                return this.points;\n              }, this.getMarkerAngles = function () {\n                for (var t = 0; t < this.angles.length; t++) {\n                  if (null == this.angles[t]) for (var e = t + 1; e < this.angles.length; e++) {\n                    if (null != this.angles[e]) {\n                      this.angles[t] = this.angles[e];\n                      break;\n                    }\n                  }\n                }\n\n                return this.angles;\n              };\n            }(e), this.path = function (t) {\n              var e = this.PathParser;\n              e.reset();\n              var i = new A.BoundingBox();\n\n              for (null != t && t.beginPath(); !e.isEnd();) {\n                switch (e.nextCommand(), e.command) {\n                  case \"M\":\n                  case \"m\":\n                    var n = e.getAsCurrentPoint();\n\n                    for (e.addMarker(n), i.addPoint(n.x, n.y), null != t && t.moveTo(n.x, n.y), e.start = e.current; !e.isCommandOrEnd();) {\n                      n = e.getAsCurrentPoint(), e.addMarker(n, e.start), i.addPoint(n.x, n.y), null != t && t.lineTo(n.x, n.y);\n                    }\n\n                    break;\n\n                  case \"L\":\n                  case \"l\":\n                    for (; !e.isCommandOrEnd();) {\n                      var s = e.current;\n                      n = e.getAsCurrentPoint(), e.addMarker(n, s), i.addPoint(n.x, n.y), null != t && t.lineTo(n.x, n.y);\n                    }\n\n                    break;\n\n                  case \"H\":\n                  case \"h\":\n                    for (; !e.isCommandOrEnd();) {\n                      var a = new A.Point((e.isRelativeCommand() ? e.current.x : 0) + e.getScalar(), e.current.y);\n                      e.addMarker(a, e.current), e.current = a, i.addPoint(e.current.x, e.current.y), null != t && t.lineTo(e.current.x, e.current.y);\n                    }\n\n                    break;\n\n                  case \"V\":\n                  case \"v\":\n                    for (; !e.isCommandOrEnd();) {\n                      a = new A.Point(e.current.x, (e.isRelativeCommand() ? e.current.y : 0) + e.getScalar()), e.addMarker(a, e.current), e.current = a, i.addPoint(e.current.x, e.current.y), null != t && t.lineTo(e.current.x, e.current.y);\n                    }\n\n                    break;\n\n                  case \"C\":\n                  case \"c\":\n                    for (; !e.isCommandOrEnd();) {\n                      var r = e.current,\n                          o = e.getPoint(),\n                          l = e.getAsControlPoint(),\n                          h = e.getAsCurrentPoint();\n                      e.addMarker(h, l, o), i.addBezierCurve(r.x, r.y, o.x, o.y, l.x, l.y, h.x, h.y), null != t && t.bezierCurveTo(o.x, o.y, l.x, l.y, h.x, h.y);\n                    }\n\n                    break;\n\n                  case \"S\":\n                  case \"s\":\n                    for (; !e.isCommandOrEnd();) {\n                      r = e.current, o = e.getReflectedControlPoint(), l = e.getAsControlPoint(), h = e.getAsCurrentPoint(), e.addMarker(h, l, o), i.addBezierCurve(r.x, r.y, o.x, o.y, l.x, l.y, h.x, h.y), null != t && t.bezierCurveTo(o.x, o.y, l.x, l.y, h.x, h.y);\n                    }\n\n                    break;\n\n                  case \"Q\":\n                  case \"q\":\n                    for (; !e.isCommandOrEnd();) {\n                      r = e.current, l = e.getAsControlPoint(), h = e.getAsCurrentPoint(), e.addMarker(h, l, l), i.addQuadraticCurve(r.x, r.y, l.x, l.y, h.x, h.y), null != t && t.quadraticCurveTo(l.x, l.y, h.x, h.y);\n                    }\n\n                    break;\n\n                  case \"T\":\n                  case \"t\":\n                    for (; !e.isCommandOrEnd();) {\n                      r = e.current, l = e.getReflectedControlPoint(), e.control = l, h = e.getAsCurrentPoint(), e.addMarker(h, l, l), i.addQuadraticCurve(r.x, r.y, l.x, l.y, h.x, h.y), null != t && t.quadraticCurveTo(l.x, l.y, h.x, h.y);\n                    }\n\n                    break;\n\n                  case \"A\":\n                  case \"a\":\n                    for (; !e.isCommandOrEnd();) {\n                      r = e.current;\n                      var u = e.getScalar(),\n                          c = e.getScalar(),\n                          f = e.getScalar() * (Math.PI / 180),\n                          m = e.getScalar(),\n                          p = e.getScalar(),\n                          d = (h = e.getAsCurrentPoint(), new A.Point(Math.cos(f) * (r.x - h.x) / 2 + Math.sin(f) * (r.y - h.y) / 2, -Math.sin(f) * (r.x - h.x) / 2 + Math.cos(f) * (r.y - h.y) / 2)),\n                          y = Math.pow(d.x, 2) / Math.pow(u, 2) + Math.pow(d.y, 2) / Math.pow(c, 2);\n                      1 < y && (u *= Math.sqrt(y), c *= Math.sqrt(y));\n                      var v = (m == p ? -1 : 1) * Math.sqrt((Math.pow(u, 2) * Math.pow(c, 2) - Math.pow(u, 2) * Math.pow(d.y, 2) - Math.pow(c, 2) * Math.pow(d.x, 2)) / (Math.pow(u, 2) * Math.pow(d.y, 2) + Math.pow(c, 2) * Math.pow(d.x, 2)));\n                      isNaN(v) && (v = 0);\n\n                      var g = new A.Point(v * u * d.y / c, v * -c * d.x / u),\n                          x = new A.Point((r.x + h.x) / 2 + Math.cos(f) * g.x - Math.sin(f) * g.y, (r.y + h.y) / 2 + Math.sin(f) * g.x + Math.cos(f) * g.y),\n                          b = function b(t) {\n                        return Math.sqrt(Math.pow(t[0], 2) + Math.pow(t[1], 2));\n                      },\n                          P = function P(t, e) {\n                        return (t[0] * e[0] + t[1] * e[1]) / (b(t) * b(e));\n                      },\n                          E = function E(t, e) {\n                        return (t[0] * e[1] < t[1] * e[0] ? -1 : 1) * Math.acos(P(t, e));\n                      },\n                          w = E([1, 0], [(d.x - g.x) / u, (d.y - g.y) / c]),\n                          B = [(d.x - g.x) / u, (d.y - g.y) / c],\n                          C = [(-d.x - g.x) / u, (-d.y - g.y) / c],\n                          T = E(B, C);\n\n                      P(B, C) <= -1 && (T = Math.PI), 1 <= P(B, C) && (T = 0);\n                      var V = 1 - p ? 1 : -1,\n                          M = w + V * (T / 2),\n                          S = new A.Point(x.x + u * Math.cos(M), x.y + c * Math.sin(M));\n\n                      if (e.addMarkerAngle(S, M - V * Math.PI / 2), e.addMarkerAngle(h, M - V * Math.PI), i.addPoint(h.x, h.y), null != t) {\n                        P = c < u ? u : c;\n                        var k = c < u ? 1 : u / c,\n                            D = c < u ? c / u : 1;\n                        t.translate(x.x, x.y), t.rotate(f), t.scale(k, D), t.arc(0, 0, P, w, w + T, 1 - p), t.scale(1 / k, 1 / D), t.rotate(-f), t.translate(-x.x, -x.y);\n                      }\n                    }\n\n                    break;\n\n                  case \"Z\":\n                  case \"z\":\n                    null != t && i.x1 !== i.x2 && i.y1 !== i.y2 && t.closePath(), e.current = e.start;\n                }\n              }\n\n              return i;\n            }, this.getMarkers = function () {\n              for (var t = this.PathParser.getMarkerPoints(), e = this.PathParser.getMarkerAngles(), i = [], n = 0; n < t.length; n++) {\n                i.push([t[n], e[n]]);\n              }\n\n              return i;\n            };\n          }, A.Element.path.prototype = new A.Element.PathElementBase(), A.Element.pattern = function (t) {\n            this.base = A.Element.ElementBase, this.base(t), this.createPattern = function (t, e) {\n              var i = this.attribute(\"width\").toPixels(\"x\", !0),\n                  n = this.attribute(\"height\").toPixels(\"y\", !0),\n                  s = new A.Element.svg();\n              s.attributes.viewBox = new A.Property(\"viewBox\", this.attribute(\"viewBox\").value), s.attributes.width = new A.Property(\"width\", i + \"px\"), s.attributes.height = new A.Property(\"height\", n + \"px\"), s.attributes.transform = new A.Property(\"transform\", this.attribute(\"patternTransform\").value), s.children = this.children;\n              var a = p();\n              a.width = i, a.height = n;\n              var r = a.getContext(\"2d\");\n              this.attribute(\"x\").hasValue() && this.attribute(\"y\").hasValue() && r.translate(this.attribute(\"x\").toPixels(\"x\", !0), this.attribute(\"y\").toPixels(\"y\", !0));\n\n              for (var o = -1; o <= 1; o++) {\n                for (var l = -1; l <= 1; l++) {\n                  r.save(), s.attributes.x = new A.Property(\"x\", o * a.width), s.attributes.y = new A.Property(\"y\", l * a.height), s.render(r), r.restore();\n                }\n              }\n\n              return t.createPattern(a, \"repeat\");\n            };\n          }, A.Element.pattern.prototype = new A.Element.ElementBase(), A.Element.marker = function (t) {\n            this.base = A.Element.ElementBase, this.base(t), this.baseRender = this.render, this.render = function (t, e, i) {\n              if (e) {\n                t.translate(e.x, e.y), \"auto\" == this.attribute(\"orient\").valueOrDefault(\"auto\") && t.rotate(i), \"strokeWidth\" == this.attribute(\"markerUnits\").valueOrDefault(\"strokeWidth\") && t.scale(t.lineWidth, t.lineWidth), t.save();\n                var n = new A.Element.svg();\n                n.attributes.viewBox = new A.Property(\"viewBox\", this.attribute(\"viewBox\").value), n.attributes.refX = new A.Property(\"refX\", this.attribute(\"refX\").value), n.attributes.refY = new A.Property(\"refY\", this.attribute(\"refY\").value), n.attributes.width = new A.Property(\"width\", this.attribute(\"markerWidth\").value), n.attributes.height = new A.Property(\"height\", this.attribute(\"markerHeight\").value), n.attributes.fill = new A.Property(\"fill\", this.attribute(\"fill\").valueOrDefault(\"black\")), n.attributes.stroke = new A.Property(\"stroke\", this.attribute(\"stroke\").valueOrDefault(\"none\")), n.children = this.children, n.render(t), t.restore(), \"strokeWidth\" == this.attribute(\"markerUnits\").valueOrDefault(\"strokeWidth\") && t.scale(1 / t.lineWidth, 1 / t.lineWidth), \"auto\" == this.attribute(\"orient\").valueOrDefault(\"auto\") && t.rotate(-i), t.translate(-e.x, -e.y);\n              }\n            };\n          }, A.Element.marker.prototype = new A.Element.ElementBase(), A.Element.defs = function (t) {\n            this.base = A.Element.ElementBase, this.base(t), this.render = function (t) {};\n          }, A.Element.defs.prototype = new A.Element.ElementBase(), A.Element.GradientBase = function (t) {\n            this.base = A.Element.ElementBase, this.base(t), this.stops = [];\n\n            for (var e = 0; e < this.children.length; e++) {\n              var i = this.children[e];\n              \"stop\" == i.type && this.stops.push(i);\n            }\n\n            this.getGradient = function () {}, this.gradientUnits = function () {\n              return this.attribute(\"gradientUnits\").valueOrDefault(\"objectBoundingBox\");\n            }, this.attributesToInherit = [\"gradientUnits\"], this.inheritStopContainer = function (t) {\n              for (var e = 0; e < this.attributesToInherit.length; e++) {\n                var i = this.attributesToInherit[e];\n                !this.attribute(i).hasValue() && t.attribute(i).hasValue() && (this.attribute(i, !0).value = t.attribute(i).value);\n              }\n            }, this.createGradient = function (t, e, i) {\n              var n = this;\n              this.getHrefAttribute().hasValue() && (n = this.getHrefAttribute().getDefinition(), this.inheritStopContainer(n));\n\n              var s = function s(t) {\n                return i.hasValue() ? new A.Property(\"color\", t).addOpacity(i).value : t;\n              },\n                  a = this.getGradient(t, e);\n\n              if (null == a) return s(n.stops[n.stops.length - 1].color);\n\n              for (var r = 0; r < n.stops.length; r++) {\n                a.addColorStop(n.stops[r].offset, s(n.stops[r].color));\n              }\n\n              if (this.attribute(\"gradientTransform\").hasValue()) {\n                var o = A.ViewPort.viewPorts[0],\n                    l = new A.Element.rect();\n                l.attributes.x = new A.Property(\"x\", -A.MAX_VIRTUAL_PIXELS / 3), l.attributes.y = new A.Property(\"y\", -A.MAX_VIRTUAL_PIXELS / 3), l.attributes.width = new A.Property(\"width\", A.MAX_VIRTUAL_PIXELS), l.attributes.height = new A.Property(\"height\", A.MAX_VIRTUAL_PIXELS);\n                var h = new A.Element.g();\n                h.attributes.transform = new A.Property(\"transform\", this.attribute(\"gradientTransform\").value), h.children = [l];\n                var u = new A.Element.svg();\n                u.attributes.x = new A.Property(\"x\", 0), u.attributes.y = new A.Property(\"y\", 0), u.attributes.width = new A.Property(\"width\", o.width), u.attributes.height = new A.Property(\"height\", o.height), u.children = [h];\n                var c = p();\n                c.width = o.width, c.height = o.height;\n                var f = c.getContext(\"2d\");\n                return f.fillStyle = a, u.render(f), f.createPattern(c, \"no-repeat\");\n              }\n\n              return a;\n            };\n          }, A.Element.GradientBase.prototype = new A.Element.ElementBase(), A.Element.linearGradient = function (t) {\n            this.base = A.Element.GradientBase, this.base(t), this.attributesToInherit.push(\"x1\"), this.attributesToInherit.push(\"y1\"), this.attributesToInherit.push(\"x2\"), this.attributesToInherit.push(\"y2\"), this.getGradient = function (t, e) {\n              var i = \"objectBoundingBox\" == this.gradientUnits() ? e.getBoundingBox(t) : null;\n              this.attribute(\"x1\").hasValue() || this.attribute(\"y1\").hasValue() || this.attribute(\"x2\").hasValue() || this.attribute(\"y2\").hasValue() || (this.attribute(\"x1\", !0).value = 0, this.attribute(\"y1\", !0).value = 0, this.attribute(\"x2\", !0).value = 1, this.attribute(\"y2\", !0).value = 0);\n              var n = \"objectBoundingBox\" == this.gradientUnits() ? i.x() + i.width() * this.attribute(\"x1\").numValue() : this.attribute(\"x1\").toPixels(\"x\"),\n                  s = \"objectBoundingBox\" == this.gradientUnits() ? i.y() + i.height() * this.attribute(\"y1\").numValue() : this.attribute(\"y1\").toPixels(\"y\"),\n                  a = \"objectBoundingBox\" == this.gradientUnits() ? i.x() + i.width() * this.attribute(\"x2\").numValue() : this.attribute(\"x2\").toPixels(\"x\"),\n                  r = \"objectBoundingBox\" == this.gradientUnits() ? i.y() + i.height() * this.attribute(\"y2\").numValue() : this.attribute(\"y2\").toPixels(\"y\");\n              return n == a && s == r ? null : t.createLinearGradient(n, s, a, r);\n            };\n          }, A.Element.linearGradient.prototype = new A.Element.GradientBase(), A.Element.radialGradient = function (t) {\n            this.base = A.Element.GradientBase, this.base(t), this.attributesToInherit.push(\"cx\"), this.attributesToInherit.push(\"cy\"), this.attributesToInherit.push(\"r\"), this.attributesToInherit.push(\"fx\"), this.attributesToInherit.push(\"fy\"), this.getGradient = function (t, e) {\n              var i = e.getBoundingBox(t);\n              this.attribute(\"cx\").hasValue() || (this.attribute(\"cx\", !0).value = \"50%\"), this.attribute(\"cy\").hasValue() || (this.attribute(\"cy\", !0).value = \"50%\"), this.attribute(\"r\").hasValue() || (this.attribute(\"r\", !0).value = \"50%\");\n              var n = \"objectBoundingBox\" == this.gradientUnits() ? i.x() + i.width() * this.attribute(\"cx\").numValue() : this.attribute(\"cx\").toPixels(\"x\"),\n                  s = \"objectBoundingBox\" == this.gradientUnits() ? i.y() + i.height() * this.attribute(\"cy\").numValue() : this.attribute(\"cy\").toPixels(\"y\"),\n                  a = n,\n                  r = s;\n              this.attribute(\"fx\").hasValue() && (a = \"objectBoundingBox\" == this.gradientUnits() ? i.x() + i.width() * this.attribute(\"fx\").numValue() : this.attribute(\"fx\").toPixels(\"x\")), this.attribute(\"fy\").hasValue() && (r = \"objectBoundingBox\" == this.gradientUnits() ? i.y() + i.height() * this.attribute(\"fy\").numValue() : this.attribute(\"fy\").toPixels(\"y\"));\n              var o = \"objectBoundingBox\" == this.gradientUnits() ? (i.width() + i.height()) / 2 * this.attribute(\"r\").numValue() : this.attribute(\"r\").toPixels();\n              return t.createRadialGradient(a, r, 0, n, s, o);\n            };\n          }, A.Element.radialGradient.prototype = new A.Element.GradientBase(), A.Element.stop = function (t) {\n            this.base = A.Element.ElementBase, this.base(t), this.offset = this.attribute(\"offset\").numValue(), this.offset < 0 && (this.offset = 0), 1 < this.offset && (this.offset = 1);\n            var e = this.style(\"stop-color\", !0);\n            \"\" === e.value && (e.value = \"#000\"), this.style(\"stop-opacity\").hasValue() && (e = e.addOpacity(this.style(\"stop-opacity\"))), this.color = e.value;\n          }, A.Element.stop.prototype = new A.Element.ElementBase(), A.Element.AnimateBase = function (t) {\n            this.base = A.Element.ElementBase, this.base(t), A.Animations.push(this), this.duration = 0, this.begin = this.attribute(\"begin\").toMilliseconds(), this.maxDuration = this.begin + this.attribute(\"dur\").toMilliseconds(), this.getProperty = function () {\n              var t = this.attribute(\"attributeType\").value,\n                  e = this.attribute(\"attributeName\").value;\n              return \"CSS\" == t ? this.parent.style(e, !0) : this.parent.attribute(e, !0);\n            }, this.initialValue = null, this.initialUnits = \"\", this.removed = !1, this.calcValue = function () {\n              return \"\";\n            }, this.update = function (t) {\n              if (null == this.initialValue && (this.initialValue = this.getProperty().value, this.initialUnits = this.getProperty().getUnits()), this.duration > this.maxDuration) {\n                if (\"indefinite\" == this.attribute(\"repeatCount\").value || \"indefinite\" == this.attribute(\"repeatDur\").value) this.duration = 0;else if (\"freeze\" != this.attribute(\"fill\").valueOrDefault(\"remove\") || this.frozen) {\n                  if (\"remove\" == this.attribute(\"fill\").valueOrDefault(\"remove\") && !this.removed) return this.removed = !0, this.getProperty().value = this.parent.animationFrozen ? this.parent.animationFrozenValue : this.initialValue, !0;\n                } else this.frozen = !0, this.parent.animationFrozen = !0, this.parent.animationFrozenValue = this.getProperty().value;\n                return !1;\n              }\n\n              this.duration = this.duration + t;\n              var e = !1;\n\n              if (this.begin < this.duration) {\n                var i = this.calcValue();\n                this.attribute(\"type\").hasValue() && (i = this.attribute(\"type\").value + \"(\" + i + \")\"), this.getProperty().value = i, e = !0;\n              }\n\n              return e;\n            }, this.from = this.attribute(\"from\"), this.to = this.attribute(\"to\"), this.values = this.attribute(\"values\"), this.values.hasValue() && (this.values.value = this.values.value.split(\";\")), this.progress = function () {\n              var t = {\n                progress: (this.duration - this.begin) / (this.maxDuration - this.begin)\n              };\n\n              if (this.values.hasValue()) {\n                var e = t.progress * (this.values.value.length - 1),\n                    i = Math.floor(e),\n                    n = Math.ceil(e);\n                t.from = new A.Property(\"from\", parseFloat(this.values.value[i])), t.to = new A.Property(\"to\", parseFloat(this.values.value[n])), t.progress = (e - i) / (n - i);\n              } else t.from = this.from, t.to = this.to;\n\n              return t;\n            };\n          }, A.Element.AnimateBase.prototype = new A.Element.ElementBase(), A.Element.animate = function (t) {\n            this.base = A.Element.AnimateBase, this.base(t), this.calcValue = function () {\n              var t = this.progress();\n              return t.from.numValue() + (t.to.numValue() - t.from.numValue()) * t.progress + this.initialUnits;\n            };\n          }, A.Element.animate.prototype = new A.Element.AnimateBase(), A.Element.animateColor = function (t) {\n            this.base = A.Element.AnimateBase, this.base(t), this.calcValue = function () {\n              var t = this.progress(),\n                  e = new m(t.from.value),\n                  i = new m(t.to.value);\n\n              if (e.ok && i.ok) {\n                var n = e.r + (i.r - e.r) * t.progress,\n                    s = e.g + (i.g - e.g) * t.progress,\n                    a = e.b + (i.b - e.b) * t.progress;\n                return \"rgb(\" + parseInt(n, 10) + \",\" + parseInt(s, 10) + \",\" + parseInt(a, 10) + \")\";\n              }\n\n              return this.attribute(\"from\").value;\n            };\n          }, A.Element.animateColor.prototype = new A.Element.AnimateBase(), A.Element.animateTransform = function (t) {\n            this.base = A.Element.AnimateBase, this.base(t), this.calcValue = function () {\n              for (var t = this.progress(), e = A.ToNumberArray(t.from.value), i = A.ToNumberArray(t.to.value), n = \"\", s = 0; s < e.length; s++) {\n                n += e[s] + (i[s] - e[s]) * t.progress + \" \";\n              }\n\n              return n;\n            };\n          }, A.Element.animateTransform.prototype = new A.Element.animate(), A.Element.font = function (t) {\n            this.base = A.Element.ElementBase, this.base(t), this.horizAdvX = this.attribute(\"horiz-adv-x\").numValue(), this.isRTL = !1, this.isArabic = !1, this.fontFace = null, this.missingGlyph = null, this.glyphs = [];\n\n            for (var e = 0; e < this.children.length; e++) {\n              var i = this.children[e];\n              \"font-face\" == i.type ? (this.fontFace = i).style(\"font-family\").hasValue() && (A.Definitions[i.style(\"font-family\").value] = this) : \"missing-glyph\" == i.type ? this.missingGlyph = i : \"glyph\" == i.type && (\"\" != i.arabicForm ? (this.isRTL = !0, this.isArabic = !0, void 0 === this.glyphs[i.unicode] && (this.glyphs[i.unicode] = []), this.glyphs[i.unicode][i.arabicForm] = i) : this.glyphs[i.unicode] = i);\n            }\n          }, A.Element.font.prototype = new A.Element.ElementBase(), A.Element.fontface = function (t) {\n            this.base = A.Element.ElementBase, this.base(t), this.ascent = this.attribute(\"ascent\").value, this.descent = this.attribute(\"descent\").value, this.unitsPerEm = this.attribute(\"units-per-em\").numValue();\n          }, A.Element.fontface.prototype = new A.Element.ElementBase(), A.Element.missingglyph = function (t) {\n            this.base = A.Element.path, this.base(t), this.horizAdvX = 0;\n          }, A.Element.missingglyph.prototype = new A.Element.path(), A.Element.glyph = function (t) {\n            this.base = A.Element.path, this.base(t), this.horizAdvX = this.attribute(\"horiz-adv-x\").numValue(), this.unicode = this.attribute(\"unicode\").value, this.arabicForm = this.attribute(\"arabic-form\").value;\n          }, A.Element.glyph.prototype = new A.Element.path(), A.Element.text = function (t) {\n            this.captureTextNodes = !0, this.base = A.Element.RenderedElementBase, this.base(t), this.baseSetContext = this.setContext, this.setContext = function (t) {\n              this.baseSetContext(t);\n              var e = this.style(\"dominant-baseline\").toTextBaseline();\n              null == e && (e = this.style(\"alignment-baseline\").toTextBaseline()), null != e && (t.textBaseline = e);\n            }, this.initializeCoordinates = function (t) {\n              this.x = this.attribute(\"x\").toPixels(\"x\"), this.y = this.attribute(\"y\").toPixels(\"y\"), this.attribute(\"dx\").hasValue() && (this.x += this.attribute(\"dx\").toPixels(\"x\")), this.attribute(\"dy\").hasValue() && (this.y += this.attribute(\"dy\").toPixels(\"y\")), this.x += this.getAnchorDelta(t, this, 0);\n            }, this.getBoundingBox = function (t) {\n              this.initializeCoordinates(t);\n\n              for (var e = null, i = 0; i < this.children.length; i++) {\n                var n = this.getChildBoundingBox(t, this, this, i);\n                null == e ? e = n : e.addBoundingBox(n);\n              }\n\n              return e;\n            }, this.renderChildren = function (t) {\n              this.initializeCoordinates(t);\n\n              for (var e = 0; e < this.children.length; e++) {\n                this.renderChild(t, this, this, e);\n              }\n            }, this.getAnchorDelta = function (t, e, i) {\n              var n = this.style(\"text-anchor\").valueOrDefault(\"start\");\n\n              if (\"start\" != n) {\n                for (var s = 0, a = i; a < e.children.length; a++) {\n                  var r = e.children[a];\n                  if (i < a && r.attribute(\"x\").hasValue()) break;\n                  s += r.measureTextRecursive(t);\n                }\n\n                return -1 * (\"end\" == n ? s : s / 2);\n              }\n\n              return 0;\n            }, this.adjustChildCoordinates = function (t, e, i, n) {\n              var s = i.children[n];\n              return s.attribute(\"x\").hasValue() ? (s.x = s.attribute(\"x\").toPixels(\"x\") + e.getAnchorDelta(t, i, n), s.attribute(\"dx\").hasValue() && (s.x += s.attribute(\"dx\").toPixels(\"x\"))) : (s.attribute(\"dx\").hasValue() && (e.x += s.attribute(\"dx\").toPixels(\"x\")), s.x = e.x), e.x = s.x + s.measureText(t), s.attribute(\"y\").hasValue() ? (s.y = s.attribute(\"y\").toPixels(\"y\"), s.attribute(\"dy\").hasValue() && (s.y += s.attribute(\"dy\").toPixels(\"y\"))) : (s.attribute(\"dy\").hasValue() && (e.y += s.attribute(\"dy\").toPixels(\"y\")), s.y = e.y), e.y = s.y, s;\n            }, this.getChildBoundingBox = function (t, e, i, n) {\n              var s = this.adjustChildCoordinates(t, e, i, n),\n                  a = s.getBoundingBox(t);\n\n              for (n = 0; n < s.children.length; n++) {\n                var r = e.getChildBoundingBox(t, e, s, n);\n                a.addBoundingBox(r);\n              }\n\n              return a;\n            }, this.renderChild = function (t, e, i, n) {\n              var s = this.adjustChildCoordinates(t, e, i, n);\n\n              for (s.render(t), n = 0; n < s.children.length; n++) {\n                e.renderChild(t, e, s, n);\n              }\n            };\n          }, A.Element.text.prototype = new A.Element.RenderedElementBase(), A.Element.TextElementBase = function (t) {\n            this.base = A.Element.RenderedElementBase, this.base(t), this.getGlyph = function (t, e, i) {\n              var n = e[i],\n                  s = null;\n\n              if (t.isArabic) {\n                var a = \"isolated\";\n                (0 == i || \" \" == e[i - 1]) && i < e.length - 2 && \" \" != e[i + 1] && (a = \"terminal\"), 0 < i && \" \" != e[i - 1] && i < e.length - 2 && \" \" != e[i + 1] && (a = \"medial\"), 0 < i && \" \" != e[i - 1] && (i == e.length - 1 || \" \" == e[i + 1]) && (a = \"initial\"), void 0 !== t.glyphs[n] && null == (s = t.glyphs[n][a]) && \"glyph\" == t.glyphs[n].type && (s = t.glyphs[n]);\n              } else s = t.glyphs[n];\n\n              return null == s && (s = t.missingGlyph), s;\n            }, this.renderChildren = function (t) {\n              var e = this.parent.style(\"font-family\").getDefinition();\n              if (null == e) \"stroke\" == t.paintOrder ? (\"\" != t.strokeStyle && t.strokeText(A.compressSpaces(this.getText()), this.x, this.y), \"\" != t.fillStyle && t.fillText(A.compressSpaces(this.getText()), this.x, this.y)) : (\"\" != t.fillStyle && t.fillText(A.compressSpaces(this.getText()), this.x, this.y), \"\" != t.strokeStyle && t.strokeText(A.compressSpaces(this.getText()), this.x, this.y));else {\n                var i = this.parent.style(\"font-size\").numValueOrDefault(A.Font.Parse(A.ctx.font).fontSize),\n                    n = this.parent.style(\"font-style\").valueOrDefault(A.Font.Parse(A.ctx.font).fontStyle),\n                    s = this.getText();\n                e.isRTL && (s = s.split(\"\").reverse().join(\"\"));\n\n                for (var a = A.ToNumberArray(this.parent.attribute(\"dx\").value), r = 0; r < s.length; r++) {\n                  var o = this.getGlyph(e, s, r),\n                      l = i / e.fontFace.unitsPerEm;\n                  t.translate(this.x, this.y), t.scale(l, -l);\n                  var h = t.lineWidth;\n                  t.lineWidth = t.lineWidth * e.fontFace.unitsPerEm / i, \"italic\" == n && t.transform(1, 0, .4, 1, 0, 0), o.render(t), \"italic\" == n && t.transform(1, 0, -.4, 1, 0, 0), t.lineWidth = h, t.scale(1 / l, -1 / l), t.translate(-this.x, -this.y), this.x += i * (o.horizAdvX || e.horizAdvX) / e.fontFace.unitsPerEm, void 0 === a[r] || isNaN(a[r]) || (this.x += a[r]);\n                }\n              }\n            }, this.getText = function () {}, this.measureTextRecursive = function (t) {\n              for (var e = this.measureText(t), i = 0; i < this.children.length; i++) {\n                e += this.children[i].measureTextRecursive(t);\n              }\n\n              return e;\n            }, this.measureText = function (t) {\n              var e = this.parent.style(\"font-family\").getDefinition();\n\n              if (null != e) {\n                var i = this.parent.style(\"font-size\").numValueOrDefault(A.Font.Parse(A.ctx.font).fontSize),\n                    n = 0,\n                    s = this.getText();\n                e.isRTL && (s = s.split(\"\").reverse().join(\"\"));\n\n                for (var a = A.ToNumberArray(this.parent.attribute(\"dx\").value), r = 0; r < s.length; r++) {\n                  n += (this.getGlyph(e, s, r).horizAdvX || e.horizAdvX) * i / e.fontFace.unitsPerEm, void 0 === a[r] || isNaN(a[r]) || (n += a[r]);\n                }\n\n                return n;\n              }\n\n              var o = A.compressSpaces(this.getText());\n              if (!t.measureText) return 10 * o.length;\n              t.save(), this.setContext(t, !0);\n              var l = t.measureText(o).width;\n              return t.restore(), l;\n            }, this.getBoundingBox = function (t) {\n              var e = this.parent.style(\"font-size\").numValueOrDefault(A.Font.Parse(A.ctx.font).fontSize);\n              return new A.BoundingBox(this.x, this.y - e, this.x + this.measureText(t), this.y);\n            };\n          }, A.Element.TextElementBase.prototype = new A.Element.RenderedElementBase(), A.Element.tspan = function (t) {\n            this.captureTextNodes = !0, this.base = A.Element.TextElementBase, this.base(t), this.text = A.compressSpaces(t.value || t.text || t.textContent || \"\"), this.getText = function () {\n              return 0 < this.children.length ? \"\" : this.text;\n            };\n          }, A.Element.tspan.prototype = new A.Element.TextElementBase(), A.Element.tref = function (t) {\n            this.base = A.Element.TextElementBase, this.base(t), this.getText = function () {\n              var t = this.getHrefAttribute().getDefinition();\n              if (null != t) return t.children[0].getText();\n            };\n          }, A.Element.tref.prototype = new A.Element.TextElementBase(), A.Element.a = function (t) {\n            this.base = A.Element.TextElementBase, this.base(t), this.hasText = 0 < t.childNodes.length;\n\n            for (var e = 0; e < t.childNodes.length; e++) {\n              3 != t.childNodes[e].nodeType && (this.hasText = !1);\n            }\n\n            this.text = this.hasText ? t.childNodes[0].value || t.childNodes[0].data : \"\", this.getText = function () {\n              return this.text;\n            }, this.baseRenderChildren = this.renderChildren, this.renderChildren = function (t) {\n              if (this.hasText) {\n                this.baseRenderChildren(t);\n                var e = new A.Property(\"fontSize\", A.Font.Parse(A.ctx.font).fontSize);\n                A.Mouse.checkBoundingBox(this, new A.BoundingBox(this.x, this.y - e.toPixels(\"y\"), this.x + this.measureText(t), this.y));\n              } else if (0 < this.children.length) {\n                var i = new A.Element.g();\n                i.children = this.children, i.parent = this, i.render(t);\n              }\n            }, this.onclick = function () {\n              u.open(this.getHrefAttribute().value);\n            }, this.onmousemove = function () {\n              A.ctx.canvas.style.cursor = \"pointer\";\n            };\n          }, A.Element.a.prototype = new A.Element.TextElementBase(), A.Element.image = function (t) {\n            this.base = A.Element.RenderedElementBase, this.base(t);\n            var e = this.getHrefAttribute().value;\n\n            if (\"\" != e) {\n              var a = e.match(/\\.svg$/);\n              if (A.Images.push(this), this.loaded = !1, a) this.img = A.ajax(e), this.loaded = !0;else {\n                this.img = document.createElement(\"img\"), 1 == A.opts.useCORS && (this.img.crossOrigin = \"Anonymous\");\n                var r = this;\n                this.img.onload = function () {\n                  r.loaded = !0;\n                }, this.img.onerror = function () {\n                  A.log('ERROR: image \"' + e + '\" not found'), r.loaded = !0;\n                }, this.img.src = e;\n              }\n              this.renderChildren = function (t) {\n                var e = this.attribute(\"x\").toPixels(\"x\"),\n                    i = this.attribute(\"y\").toPixels(\"y\"),\n                    n = this.attribute(\"width\").toPixels(\"x\"),\n                    s = this.attribute(\"height\").toPixels(\"y\");\n                0 != n && 0 != s && (t.save(), a ? t.drawSvg(this.img, e, i, n, s) : (t.translate(e, i), A.AspectRatio(t, this.attribute(\"preserveAspectRatio\").value, n, this.img.width, s, this.img.height, 0, 0), r.loaded && (void 0 === this.img.complete || this.img.complete) && t.drawImage(this.img, 0, 0)), t.restore());\n              }, this.getBoundingBox = function () {\n                var t = this.attribute(\"x\").toPixels(\"x\"),\n                    e = this.attribute(\"y\").toPixels(\"y\"),\n                    i = this.attribute(\"width\").toPixels(\"x\"),\n                    n = this.attribute(\"height\").toPixels(\"y\");\n                return new A.BoundingBox(t, e, t + i, e + n);\n              };\n            }\n          }, A.Element.image.prototype = new A.Element.RenderedElementBase(), A.Element.g = function (t) {\n            this.base = A.Element.RenderedElementBase, this.base(t), this.getBoundingBox = function (t) {\n              for (var e = new A.BoundingBox(), i = 0; i < this.children.length; i++) {\n                e.addBoundingBox(this.children[i].getBoundingBox(t));\n              }\n\n              return e;\n            };\n          }, A.Element.g.prototype = new A.Element.RenderedElementBase(), A.Element.symbol = function (t) {\n            this.base = A.Element.RenderedElementBase, this.base(t), this.render = function (t) {};\n          }, A.Element.symbol.prototype = new A.Element.RenderedElementBase(), A.Element.style = function (t) {\n            this.base = A.Element.ElementBase, this.base(t);\n\n            for (var e = \"\", i = 0; i < t.childNodes.length; i++) {\n              e += t.childNodes[i].data;\n            }\n\n            e = e.replace(/(\\/\\*([^*]|[\\r\\n]|(\\*+([^*\\/]|[\\r\\n])))*\\*+\\/)|(^[\\s]*\\/\\/.*)/gm, \"\");\n            var n = (e = A.compressSpaces(e)).split(\"}\");\n\n            for (i = 0; i < n.length; i++) {\n              if (\"\" != A.trim(n[i])) for (var s = n[i].split(\"{\"), a = s[0].split(\",\"), r = s[1].split(\";\"), o = 0; o < a.length; o++) {\n                var l = A.trim(a[o]);\n\n                if (\"\" != l) {\n                  for (var h = A.Styles[l] || {}, u = 0; u < r.length; u++) {\n                    var c = r[u].indexOf(\":\"),\n                        f = r[u].substr(0, c),\n                        m = r[u].substr(c + 1, r[u].length - c);\n                    null != f && null != m && (h[A.trim(f)] = new A.Property(A.trim(f), A.trim(m)));\n                  }\n\n                  if (A.Styles[l] = h, A.StylesSpecificity[l] = w(l), \"@font-face\" == l) for (var p = h[\"font-family\"].value.replace(/\"/g, \"\"), d = h.src.value.split(\",\"), y = 0; y < d.length; y++) {\n                    if (0 < d[y].indexOf('format(\"svg\")')) for (var v = d[y].indexOf(\"url\"), g = d[y].indexOf(\")\", v), x = d[y].substr(v + 5, g - v - 6), b = A.parseXml(A.ajax(x)).getElementsByTagName(\"font\"), P = 0; P < b.length; P++) {\n                      var E = A.CreateElement(b[P]);\n                      A.Definitions[p] = E;\n                    }\n                  }\n                }\n              }\n            }\n          }, A.Element.style.prototype = new A.Element.ElementBase(), A.Element.use = function (t) {\n            this.base = A.Element.RenderedElementBase, this.base(t), this.baseSetContext = this.setContext, this.setContext = function (t) {\n              this.baseSetContext(t), this.attribute(\"x\").hasValue() && t.translate(this.attribute(\"x\").toPixels(\"x\"), 0), this.attribute(\"y\").hasValue() && t.translate(0, this.attribute(\"y\").toPixels(\"y\"));\n            };\n            var n = this.getHrefAttribute().getDefinition();\n            this.path = function (t) {\n              null != n && n.path(t);\n            }, this.elementTransform = function () {\n              if (null != n && n.style(\"transform\", !1, !0).hasValue()) return new A.Transform(n.style(\"transform\", !1, !0).value);\n            }, this.getBoundingBox = function (t) {\n              if (null != n) return n.getBoundingBox(t);\n            }, this.renderChildren = function (t) {\n              if (null != n) {\n                var e = n;\n                \"symbol\" == n.type && ((e = new A.Element.svg()).type = \"svg\", e.attributes.viewBox = new A.Property(\"viewBox\", n.attribute(\"viewBox\").value), e.attributes.preserveAspectRatio = new A.Property(\"preserveAspectRatio\", n.attribute(\"preserveAspectRatio\").value), e.attributes.overflow = new A.Property(\"overflow\", n.attribute(\"overflow\").value), e.children = n.children), \"svg\" == e.type && (this.attribute(\"width\").hasValue() && (e.attributes.width = new A.Property(\"width\", this.attribute(\"width\").value)), this.attribute(\"height\").hasValue() && (e.attributes.height = new A.Property(\"height\", this.attribute(\"height\").value)));\n                var i = e.parent;\n                e.parent = null, e.render(t), e.parent = i;\n              }\n            };\n          }, A.Element.use.prototype = new A.Element.RenderedElementBase(), A.Element.mask = function (t) {\n            this.base = A.Element.ElementBase, this.base(t), this.apply = function (t, e) {\n              var i = this.attribute(\"x\").toPixels(\"x\"),\n                  n = this.attribute(\"y\").toPixels(\"y\"),\n                  s = this.attribute(\"width\").toPixels(\"x\"),\n                  a = this.attribute(\"height\").toPixels(\"y\");\n\n              if (0 == s && 0 == a) {\n                for (var r = new A.BoundingBox(), o = 0; o < this.children.length; o++) {\n                  r.addBoundingBox(this.children[o].getBoundingBox(t));\n                }\n\n                i = Math.floor(r.x1), n = Math.floor(r.y1), s = Math.floor(r.width()), a = Math.floor(r.height());\n              }\n\n              var l = e.attribute(\"mask\").value;\n              e.attribute(\"mask\").value = \"\";\n              var h = p();\n              h.width = i + s, h.height = n + a;\n              var u = h.getContext(\"2d\");\n              this.renderChildren(u);\n              var c = p();\n              c.width = i + s, c.height = n + a;\n              var f = c.getContext(\"2d\");\n              e.render(f), f.globalCompositeOperation = \"destination-in\", f.fillStyle = u.createPattern(h, \"no-repeat\"), f.fillRect(0, 0, i + s, n + a), t.fillStyle = f.createPattern(c, \"no-repeat\"), t.fillRect(0, 0, i + s, n + a), e.attribute(\"mask\").value = l;\n            }, this.render = function (t) {};\n          }, A.Element.mask.prototype = new A.Element.ElementBase(), A.Element.clipPath = function (t) {\n            this.base = A.Element.ElementBase, this.base(t), this.apply = function (t) {\n              var e = \"undefined\" != typeof CanvasRenderingContext2D,\n                  i = t.beginPath,\n                  n = t.closePath;\n              e && (CanvasRenderingContext2D.prototype.beginPath = function () {}, CanvasRenderingContext2D.prototype.closePath = function () {}), i.call(t);\n\n              for (var s = 0; s < this.children.length; s++) {\n                var a = this.children[s];\n\n                if (void 0 !== a.path) {\n                  var r = void 0 !== a.elementTransform && a.elementTransform();\n                  !r && a.style(\"transform\", !1, !0).hasValue() && (r = new A.Transform(a.style(\"transform\", !1, !0).value)), r && r.apply(t), a.path(t), e && (CanvasRenderingContext2D.prototype.closePath = n), r && r.unapply(t);\n                }\n              }\n\n              n.call(t), t.clip(), e && (CanvasRenderingContext2D.prototype.beginPath = i, CanvasRenderingContext2D.prototype.closePath = n);\n            }, this.render = function (t) {};\n          }, A.Element.clipPath.prototype = new A.Element.ElementBase(), A.Element.filter = function (t) {\n            this.base = A.Element.ElementBase, this.base(t), this.apply = function (t, e) {\n              var i = e.getBoundingBox(t),\n                  n = Math.floor(i.x1),\n                  s = Math.floor(i.y1),\n                  a = Math.floor(i.width()),\n                  r = Math.floor(i.height()),\n                  o = e.style(\"filter\").value;\n              e.style(\"filter\").value = \"\";\n\n              for (var l = 0, h = 0, u = 0; u < this.children.length; u++) {\n                var c = this.children[u].extraFilterDistance || 0;\n                l = Math.max(l, c), h = Math.max(h, c);\n              }\n\n              var f = p();\n              f.width = a + 2 * l, f.height = r + 2 * h;\n              var m = f.getContext(\"2d\");\n\n              for (m.translate(-n + l, -s + h), e.render(m), u = 0; u < this.children.length; u++) {\n                \"function\" == typeof this.children[u].apply && this.children[u].apply(m, 0, 0, a + 2 * l, r + 2 * h);\n              }\n\n              t.drawImage(f, 0, 0, a + 2 * l, r + 2 * h, n - l, s - h, a + 2 * l, r + 2 * h), e.style(\"filter\", !0).value = o;\n            }, this.render = function (t) {};\n          }, A.Element.filter.prototype = new A.Element.ElementBase(), A.Element.feMorphology = function (t) {\n            this.base = A.Element.ElementBase, this.base(t), this.apply = function (t, e, i, n, s) {};\n          }, A.Element.feMorphology.prototype = new A.Element.ElementBase(), A.Element.feComposite = function (t) {\n            this.base = A.Element.ElementBase, this.base(t), this.apply = function (t, e, i, n, s) {};\n          }, A.Element.feComposite.prototype = new A.Element.ElementBase(), A.Element.feColorMatrix = function (t) {\n            this.base = A.Element.ElementBase, this.base(t);\n            var n = A.ToNumberArray(this.attribute(\"values\").value);\n\n            switch (this.attribute(\"type\").valueOrDefault(\"matrix\")) {\n              case \"saturate\":\n                var e = n[0];\n                n = [.213 + .787 * e, .715 - .715 * e, .072 - .072 * e, 0, 0, .213 - .213 * e, .715 + .285 * e, .072 - .072 * e, 0, 0, .213 - .213 * e, .715 - .715 * e, .072 + .928 * e, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1];\n                break;\n\n              case \"hueRotate\":\n                var s = n[0] * Math.PI / 180,\n                    i = function i(t, e, _i) {\n                  return t + Math.cos(s) * e + Math.sin(s) * _i;\n                };\n\n                n = [i(.213, .787, -.213), i(.715, -.715, -.715), i(.072, -.072, .928), 0, 0, i(.213, -.213, .143), i(.715, .285, .14), i(.072, -.072, -.283), 0, 0, i(.213, -.213, -.787), i(.715, -.715, .715), i(.072, .928, .072), 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1];\n                break;\n\n              case \"luminanceToAlpha\":\n                n = [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, .2125, .7154, .0721, 0, 0, 0, 0, 0, 0, 1];\n            }\n\n            function u(t, e, i, n, s, a) {\n              return t[i * n * 4 + 4 * e + a];\n            }\n\n            function c(t, e, i, n, s, a, r) {\n              t[i * n * 4 + 4 * e + a] = r;\n            }\n\n            function f(t, e) {\n              var i = n[t];\n              return i * (i < 0 ? e - 255 : e);\n            }\n\n            this.apply = function (t, e, i, n, s) {\n              var a = t.getImageData(0, 0, n, s);\n\n              for (i = 0; i < s; i++) {\n                for (e = 0; e < n; e++) {\n                  var r = u(a.data, e, i, n, 0, 0),\n                      o = u(a.data, e, i, n, 0, 1),\n                      l = u(a.data, e, i, n, 0, 2),\n                      h = u(a.data, e, i, n, 0, 3);\n                  c(a.data, e, i, n, 0, 0, f(0, r) + f(1, o) + f(2, l) + f(3, h) + f(4, 1)), c(a.data, e, i, n, 0, 1, f(5, r) + f(6, o) + f(7, l) + f(8, h) + f(9, 1)), c(a.data, e, i, n, 0, 2, f(10, r) + f(11, o) + f(12, l) + f(13, h) + f(14, 1)), c(a.data, e, i, n, 0, 3, f(15, r) + f(16, o) + f(17, l) + f(18, h) + f(19, 1));\n                }\n              }\n\n              t.clearRect(0, 0, n, s), t.putImageData(a, 0, 0);\n            };\n          }, A.Element.feColorMatrix.prototype = new A.Element.ElementBase(), A.Element.feGaussianBlur = function (t) {\n            this.base = A.Element.ElementBase, this.base(t), this.blurRadius = Math.floor(this.attribute(\"stdDeviation\").numValue()), this.extraFilterDistance = this.blurRadius, this.apply = function (t, e, i, n, s) {\n              d && void 0 !== d.canvasRGBA ? (t.canvas.id = A.UniqueId(), t.canvas.style.display = \"none\", document.body.appendChild(t.canvas), d.canvasRGBA(t.canvas, e, i, n, s, this.blurRadius), document.body.removeChild(t.canvas)) : A.log(\"ERROR: StackBlur.js must be included for blur to work\");\n            };\n          }, A.Element.feGaussianBlur.prototype = new A.Element.ElementBase(), A.Element.title = function (t) {}, A.Element.title.prototype = new A.Element.ElementBase(), A.Element.desc = function (t) {}, A.Element.desc.prototype = new A.Element.ElementBase(), A.Element.MISSING = function (t) {\n            A.log(\"ERROR: Element '\" + t.nodeName + \"' not yet implemented.\");\n          }, A.Element.MISSING.prototype = new A.Element.ElementBase(), A.CreateElement = function (t) {\n            var e = t.nodeName.replace(/^[^:]+:/, \"\");\n            e = e.replace(/\\-/g, \"\");\n            var i = null;\n            return (i = void 0 !== A.Element[e] ? new A.Element[e](t) : new A.Element.MISSING(t)).type = t.nodeName, i;\n          }, A.load = function (t, e) {\n            A.loadXml(t, A.ajax(e));\n          }, A.loadXml = function (t, e) {\n            A.loadXmlDoc(t, A.parseXml(e));\n          }, A.loadXmlDoc = function (a, r) {\n            A.init(a);\n\n            var i = function i(t) {\n              for (var e = a.canvas; e;) {\n                t.x -= e.offsetLeft, t.y -= e.offsetTop, e = e.offsetParent;\n              }\n\n              return u.scrollX && (t.x += u.scrollX), u.scrollY && (t.y += u.scrollY), t;\n            };\n\n            1 != A.opts.ignoreMouse && (a.canvas.onclick = function (t) {\n              var e = i(new A.Point(null != t ? t.clientX : event.clientX, null != t ? t.clientY : event.clientY));\n              A.Mouse.onclick(e.x, e.y);\n            }, a.canvas.onmousemove = function (t) {\n              var e = i(new A.Point(null != t ? t.clientX : event.clientX, null != t ? t.clientY : event.clientY));\n              A.Mouse.onmousemove(e.x, e.y);\n            });\n            var o = A.CreateElement(r.documentElement);\n            o.root = !0, o.addStylesFromStyleDefinition();\n\n            var l = !0,\n                n = function n() {\n              A.ViewPort.Clear(), a.canvas.parentNode ? A.ViewPort.SetCurrent(a.canvas.parentNode.clientWidth, a.canvas.parentNode.clientHeight) : A.ViewPort.SetCurrent(800, 600), 1 != A.opts.ignoreDimensions && (o.style(\"width\").hasValue() && (a.canvas.width = o.style(\"width\").toPixels(\"x\"), a.canvas.style && (a.canvas.style.width = a.canvas.width + \"px\")), o.style(\"height\").hasValue() && (a.canvas.height = o.style(\"height\").toPixels(\"y\"), a.canvas.style && (a.canvas.style.height = a.canvas.height + \"px\")));\n              var t = a.canvas.clientWidth || a.canvas.width,\n                  e = a.canvas.clientHeight || a.canvas.height;\n\n              if (1 == A.opts.ignoreDimensions && o.style(\"width\").hasValue() && o.style(\"height\").hasValue() && (t = o.style(\"width\").toPixels(\"x\"), e = o.style(\"height\").toPixels(\"y\")), A.ViewPort.SetCurrent(t, e), null != A.opts.offsetX && (o.attribute(\"x\", !0).value = A.opts.offsetX), null != A.opts.offsetY && (o.attribute(\"y\", !0).value = A.opts.offsetY), null != A.opts.scaleWidth || null != A.opts.scaleHeight) {\n                var i = null,\n                    n = null,\n                    s = A.ToNumberArray(o.attribute(\"viewBox\").value);\n                null != A.opts.scaleWidth && (o.attribute(\"width\").hasValue() ? i = o.attribute(\"width\").toPixels(\"x\") / A.opts.scaleWidth : isNaN(s[2]) || (i = s[2] / A.opts.scaleWidth)), null != A.opts.scaleHeight && (o.attribute(\"height\").hasValue() ? n = o.attribute(\"height\").toPixels(\"y\") / A.opts.scaleHeight : isNaN(s[3]) || (n = s[3] / A.opts.scaleHeight)), null == i && (i = n), null == n && (n = i), o.attribute(\"width\", !0).value = A.opts.scaleWidth, o.attribute(\"height\", !0).value = A.opts.scaleHeight, o.style(\"transform\", !0, !0).value += \" scale(\" + 1 / i + \",\" + 1 / n + \")\";\n              }\n\n              1 != A.opts.ignoreClear && a.clearRect(0, 0, t, e), o.render(a), l && (l = !1, \"function\" == typeof A.opts.renderCallback && A.opts.renderCallback(r));\n            },\n                s = !0;\n\n            A.ImagesLoaded() && (s = !1, n()), A.intervalID = setInterval(function () {\n              var t = !1;\n              if (s && A.ImagesLoaded() && (t = !(s = !1)), 1 != A.opts.ignoreMouse && (t |= A.Mouse.hasEvents()), 1 != A.opts.ignoreAnimation) for (var e = 0; e < A.Animations.length; e++) {\n                t |= A.Animations[e].update(1e3 / A.FRAMERATE);\n              }\n              \"function\" == typeof A.opts.forceRedraw && 1 == A.opts.forceRedraw() && (t = !0), t && (n(), A.Mouse.runEvents());\n            }, 1e3 / A.FRAMERATE);\n          }, A.stop = function () {\n            A.intervalID && clearInterval(A.intervalID);\n          }, A.Mouse = new function () {\n            this.events = [], this.hasEvents = function () {\n              return 0 != this.events.length;\n            }, this.onclick = function (t, e) {\n              this.events.push({\n                type: \"onclick\",\n                x: t,\n                y: e,\n                run: function run(t) {\n                  t.onclick && t.onclick();\n                }\n              });\n            }, this.onmousemove = function (t, e) {\n              this.events.push({\n                type: \"onmousemove\",\n                x: t,\n                y: e,\n                run: function run(t) {\n                  t.onmousemove && t.onmousemove();\n                }\n              });\n            }, this.eventElements = [], this.checkPath = function (t, e) {\n              for (var i = 0; i < this.events.length; i++) {\n                var n = this.events[i];\n                e.isPointInPath && e.isPointInPath(n.x, n.y) && (this.eventElements[i] = t);\n              }\n            }, this.checkBoundingBox = function (t, e) {\n              for (var i = 0; i < this.events.length; i++) {\n                var n = this.events[i];\n                e.isPointInBox(n.x, n.y) && (this.eventElements[i] = t);\n              }\n            }, this.runEvents = function () {\n              A.ctx.canvas.style.cursor = \"\";\n\n              for (var t = 0; t < this.events.length; t++) {\n                for (var e = this.events[t], i = this.eventElements[t]; i;) {\n                  e.run(i), i = i.parent;\n                }\n              }\n\n              this.events = [], this.eventElements = [];\n            };\n          }(), A;\n        }(i || {});\n\n        \"string\" == typeof t && (t = document.getElementById(t)), null != t.svg && t.svg.stop(), t.childNodes && 1 == t.childNodes.length && \"OBJECT\" == t.childNodes[0].nodeName || (t.svg = n);\n        var s = t.getContext(\"2d\");\n        void 0 !== e.documentElement ? n.loadXmlDoc(s, e) : \"<\" == e.substr(0, 1) ? n.loadXml(s, e) : n.load(s, e);\n      } else for (var a = document.querySelectorAll(\"svg\"), r = 0; r < a.length; r++) {\n        var o = a[r],\n            l = document.createElement(\"canvas\");\n        l.width = o.clientWidth, l.height = o.clientHeight, o.parentNode.insertBefore(l, o), o.parentNode.removeChild(o);\n        var h = document.createElement(\"div\");\n        h.appendChild(o), c(l, h.innerHTML);\n      }\n    };\n\n    \"undefined\" == typeof Element || (void 0 !== Element.prototype.matches ? f = function f(t, e) {\n      return t.matches(e);\n    } : void 0 !== Element.prototype.webkitMatchesSelector ? f = function f(t, e) {\n      return t.webkitMatchesSelector(e);\n    } : void 0 !== Element.prototype.mozMatchesSelector ? f = function f(t, e) {\n      return t.mozMatchesSelector(e);\n    } : void 0 !== Element.prototype.msMatchesSelector ? f = function f(t, e) {\n      return t.msMatchesSelector(e);\n    } : void 0 !== Element.prototype.oMatchesSelector ? f = function f(t, e) {\n      return t.oMatchesSelector(e);\n    } : (\"function\" != typeof jQuery && \"function\" != typeof Zepto || (f = function f(t, e) {\n      return $(t).is(e);\n    }), void 0 === f && \"undefined\" != typeof Sizzle && (f = Sizzle.matchesSelector)));\n    var e = /(\\[[^\\]]+\\])/g,\n        i = /(#[^\\s\\+>~\\.\\[:]+)/g,\n        a = /(\\.[^\\s\\+>~\\.\\[:]+)/g,\n        r = /(::[^\\s\\+>~\\.\\[:]+|:first-line|:first-letter|:before|:after)/gi,\n        o = /(:[\\w-]+\\([^\\)]*\\))/gi,\n        l = /(:[^\\s\\+>~\\.\\[:]+)/g,\n        h = /([^\\s\\+>~\\.\\[:]+)/g;\n\n    function w(n) {\n      var s = [0, 0, 0],\n          t = function t(_t, e) {\n        var i = n.match(_t);\n        null != i && (s[e] += i.length, n = n.replace(_t, \" \"));\n      };\n\n      return n = (n = n.replace(/:not\\(([^\\)]*)\\)/g, \"     $1 \")).replace(/{[\\s\\S]*/gm, \" \"), t(e, 1), t(i, 0), t(a, 1), t(r, 2), t(o, 1), t(l, 1), n = (n = n.replace(/[\\*\\s\\+>~]/g, \" \")).replace(/[#\\.]/g, \" \"), t(h, 2), s.join(\"\");\n    }\n\n    \"undefined\" != typeof CanvasRenderingContext2D && (CanvasRenderingContext2D.prototype.drawSvg = function (t, e, i, n, s, a) {\n      var r = {\n        ignoreMouse: !0,\n        ignoreAnimation: !0,\n        ignoreDimensions: !0,\n        ignoreClear: !0,\n        offsetX: e,\n        offsetY: i,\n        scaleWidth: n,\n        scaleHeight: s\n      };\n\n      for (var o in a) {\n        a.hasOwnProperty(o) && (r[o] = a[o]);\n      }\n\n      c(this.canvas, t, r);\n    }), t.exports = c;\n  }(t = {\n    exports: {}\n  }, t.exports), t.exports;\n});"],"sourceRoot":""}